[{"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\index.js":"1","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\reportWebVitals.js":"2","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\App.js":"3","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\routes.js":"4","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\components\\GlobalStyles.js":"5","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\theme\\index.js":"6","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\auth\\RegisterView.js":"7","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\errors\\NotFoundView.js":"8","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\auth\\LoginView.js":"9","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\theme\\shadows.js":"10","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\theme\\typography.js":"11","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\createTopic\\index.js":"12","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\topicPool\\index.js":"13","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\createMeeting\\index.js":"14","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\account\\AccountView\\index.js":"15","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\dashboard\\DashboardView\\index.js":"16","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\settings\\SettingsView\\index.js":"17","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\attendMeeting\\Room\\index.js":"18","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js":"19","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\DashboardLayout\\index.js":"20","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\MainLayout\\index.js":"21","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\meeting\\MeetingListView\\index.js":"22","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\components\\linearGradient.js":"23","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\components\\Page.js":"24","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\DashboardLayout\\TopBar.js":"25","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\createMeeting\\createMeetingForm.js":"26","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\settings\\SettingsView\\Notifications.js":"27","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\MainLayout\\TopBar.js":"28","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js":"29","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js":"30","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\meeting\\MeetingListView\\Results.js":"31","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js":"32","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"33","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\components\\Logo.js":"34","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"35","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\account\\AccountView\\Password.js":"36","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\account\\AccountView\\ProfileDetails.js":"37","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\account\\AccountView\\Profile.js":"38","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\topicPool\\topicList.js":"39","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\createTopic\\createTopicForm.js":"40","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\app\\store.js":"41","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\features\\userSlice.js":"42"},{"size":765,"mtime":1618374189284,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1617288545000,"results":"45","hashOfConfig":"44"},{"size":668,"mtime":1618644920093,"results":"46","hashOfConfig":"44"},{"size":2061,"mtime":1618377387231,"results":"47","hashOfConfig":"44"},{"size":672,"mtime":1617288545000,"results":"48","hashOfConfig":"44"},{"size":551,"mtime":1617288545000,"results":"49","hashOfConfig":"44"},{"size":9762,"mtime":1617288545000,"results":"50","hashOfConfig":"44"},{"size":1547,"mtime":1617288545000,"results":"51","hashOfConfig":"44"},{"size":6225,"mtime":1618641373885,"results":"52","hashOfConfig":"44"},{"size":1618,"mtime":1617288545000,"results":"53","hashOfConfig":"44"},{"size":544,"mtime":1617288545000,"results":"54","hashOfConfig":"44"},{"size":900,"mtime":1617288545000,"results":"55","hashOfConfig":"44"},{"size":702,"mtime":1617288545000,"results":"56","hashOfConfig":"44"},{"size":985,"mtime":1617288545000,"results":"57","hashOfConfig":"44"},{"size":1368,"mtime":1617288545000,"results":"58","hashOfConfig":"44"},{"size":896,"mtime":1617288545000,"results":"59","hashOfConfig":"44"},{"size":661,"mtime":1617288545000,"results":"60","hashOfConfig":"44"},{"size":4160,"mtime":1617434191611,"results":"61","hashOfConfig":"44"},{"size":410,"mtime":1617288545000,"results":"62","hashOfConfig":"44"},{"size":1343,"mtime":1617288545000,"results":"63","hashOfConfig":"44"},{"size":1001,"mtime":1617288545000,"results":"64","hashOfConfig":"44"},{"size":3419,"mtime":1618053658643,"results":"65","hashOfConfig":"44"},{"size":369,"mtime":1617288545000,"results":"66","hashOfConfig":"44"},{"size":462,"mtime":1617288545000,"results":"67","hashOfConfig":"44"},{"size":1833,"mtime":1618637270531,"results":"68","hashOfConfig":"44"},{"size":17675,"mtime":1618053658639,"results":"69","hashOfConfig":"44"},{"size":3107,"mtime":1617288545000,"results":"70","hashOfConfig":"44"},{"size":722,"mtime":1617288545000,"results":"71","hashOfConfig":"44"},{"size":5537,"mtime":1618053658642,"results":"72","hashOfConfig":"44"},{"size":1919,"mtime":1617288545000,"results":"73","hashOfConfig":"44"},{"size":7615,"mtime":1618053658641,"results":"74","hashOfConfig":"44"},{"size":3173,"mtime":1617288545000,"results":"75","hashOfConfig":"44"},{"size":4106,"mtime":1618645418940,"results":"76","hashOfConfig":"44"},{"size":174,"mtime":1617288545000,"results":"77","hashOfConfig":"44"},{"size":1637,"mtime":1617288545000,"results":"78","hashOfConfig":"44"},{"size":1765,"mtime":1617288545000,"results":"79","hashOfConfig":"44"},{"size":3395,"mtime":1617288545000,"results":"80","hashOfConfig":"44"},{"size":1738,"mtime":1617288545000,"results":"81","hashOfConfig":"44"},{"size":4300,"mtime":1617288545000,"results":"82","hashOfConfig":"44"},{"size":8786,"mtime":1618053658640,"results":"83","hashOfConfig":"44"},{"size":184,"mtime":1618374286677,"results":"84","hashOfConfig":"44"},{"size":498,"mtime":1618641649691,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"6izvbt",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\index.js",[],["184","185"],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\reportWebVitals.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\App.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\routes.js",["186"],"import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport AccountView from 'src/views/account/AccountView';\r\nimport MeetingListView from 'src/views/meeting/MeetingListView';\r\nimport DashboardView from 'src/views/dashboard/DashboardView';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport NotFoundView from 'src/views/errors/NotFoundView';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport SettingsView from 'src/views/settings/SettingsView';\r\nimport CreateTopic from 'src/views/createTopic';\r\nimport CreateMeeting from 'src/views/createMeeting';\r\nimport TopicPool from 'src/views/topicPool';\r\nimport AttendMeetingView from 'src/views/attendMeeting/AttendMeetingtView';\r\nimport Room from 'src/views/attendMeeting/Room';\r\n\r\n//const user = this.state.user\r\nconst routes = (user) => [\r\n  {\r\n    path: 'app',\r\n    element: user ? <DashboardLayout /> : <Navigate to=\"/login\"/>,\r\n    children: [\r\n      { path: 'account', element: <AccountView /> },\r\n      { path: 'meetings', element: <MeetingListView /> },\r\n      { path: 'dashboard', element: <DashboardView /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: 'createTopic', element: <CreateTopic/> },\r\n      { path: 'createMeeting', element: <CreateMeeting/> },\r\n      { path: 'topics', element: <TopicPool/> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> },\r\n      { path: 'attendMeeting', element: <AttendMeetingView /> },\r\n      { path: 'room/:roomID', element: <Room /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: !user ?  <MainLayout /> : <Navigate to=\"/app/dashboard\" />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n      { path: 'register', element: <RegisterView /> },\r\n      { path: '404', element: <NotFoundView /> },\r\n      { path: '/', element: <Navigate to=\"/Login\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  }\r\n  \r\n];\r\n\r\nexport default routes;\r\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\components\\GlobalStyles.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\theme\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\auth\\RegisterView.js",["187","188","189"],"import React, {useState} from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  Grid,\n  Snackbar,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport linearGradient from 'src/components/linearGradient';\nimport Image from 'src/imgs/meeting_register_img_2.jpg'; // Import using relative path\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst styles = {\n    root: {\n       \n    }\n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    height: '100vh'\n  },\n  image:{\n    backgroundImage: `url(${Image})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    height: '100vh',\n    marginTop: '-24px',\n  }\n}));\n\nconst RegisterView = props => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [open, setOpen] = React.useState(false);\n  var [errorMessage,setErrorMessage]=useState(\"\");\n\n  //Alert Function \n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n//Close func for closing the alert\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  // The function that handles the logic when submitting the form\n  const handleSubmit = async values => {\n    // This function received the values from the form\n    // The line below extract the two fields from the values object.\n    const { email, password, firstName, lastName, companyName } = values;\n    var body = {\n      password: password,\n      email: email,\n      firstName: firstName,\n      lastName: lastName,\n      companyName: companyName\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    const url = \"http://localhost:81/auth/signup\";\n    try {\n      const response = await fetch(url, options);\n      const text = await response.json();\n      console.log(text)\n\n      if (text.status == \"success\") {\n        console.log(\"success\")\n        navigate('/login', { replace: true });\n      } else {\n        console.log(text.message);\n        setErrorMessage(text.message)\n        setOpen(true);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n       \n        <Grid\n          container\n          spacing={0}\n        >\n            <CssBaseline />\n            <Grid\n            className={classes.image}\n          \n            lg={6}\n            md={2}\n            xl={6}\n            xs={0}\n          >\n            \n          </Grid>\n          <Grid\n         elevation={6} square\n            lg={6}\n            md={10}\n            xl={6}\n            xs={12}\n          >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              companyName: '',\n              policy: false\n            }}\n            onSubmit={handleSubmit}\n\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                companyName: Yup.string().max(255).required('company name is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n          >\n            {props => {\n              const {\n              values,\n              touched,\n              errors,\n              isSubmitting,\n              handleChange,\n              handleBlur,\n              handleSubmit\n            } = props;\n            return (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.companyName && errors.companyName)}\n                  fullWidth\n                  helperText={touched.companyName && errors.companyName}\n                  label=\"Company Name\"\n                  margin=\"normal\"\n                  name=\"companyName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.companyName}\n                  variant=\"outlined\"\n                />\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box my={2}>\n                  <Button\n                    className={linearGradient().root}\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}}\n          </Formik>\n        </Container>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"Error\">\n            {errorMessage}  \n        </Alert>\n      </Snackbar>\n      </Box>\n      </Grid>\n      \n      </Grid>\n    \n    </Page>\n  );\n};\n\nexport default RegisterView;\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\errors\\NotFoundView.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\auth\\LoginView.js",["190","191","192","193","194","195","196","197","198"],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\theme\\shadows.js",["199"],"export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\theme\\typography.js",["200"],"export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\createTopic\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\topicPool\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\createMeeting\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\account\\AccountView\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\dashboard\\DashboardView\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\settings\\SettingsView\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\attendMeeting\\Room\\index.js",["201","202","203"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\nimport {useParams} from 'react-router-dom';\r\nimport { id } from \"date-fns/esm/locale\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const roomID = Room[id];\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"https://tbkmeet-videoserver.herokuapp.com/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n\r\n            //stream.getAudioTracks()[0].enabled = false;\r\n        })\r\n\r\n    }, []);\r\n\r\n    \r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n   function muteSelf()\r\n    {\r\n        userVideo.current.srcObject.getAudioTracks()[0].enabled = !userVideo.current.srcObject.getAudioTracks()[0].enabled;\r\n    }\r\n\r\n    function closeCamera()\r\n    {\r\n        userVideo.current.srcObject.getVideoTracks()[0].enabled = !userVideo.current.srcObject.getVideoTracks()[0].enabled;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n\r\n         <Button onClick={muteSelf}>Toggle Mic\r\n        </Button>\r\n        <Button onClick={closeCamera}>Toggle Video\r\n        </Button>\r\n        </Container>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default Room;","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js",["204","205","206"],"import React, { useEffect, useState, useRef } from 'react';\nimport { v1 as uuid } from \"uuid\";\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst AttendMeeting = (props) => {\n  let navigate = useNavigate()\n  function create() {\n      const id = uuid();\n      navigate(`/app/room/${id}`, {id: id});\n  }\n\n  return (\n      <button onClick={create}>Create room</button>\n  );\n};\n\nexport default AttendMeeting;","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\DashboardLayout\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\MainLayout\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\meeting\\MeetingListView\\index.js",["207","208"],"import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  Grid,\r\n  FormControlLabel,\r\n  Switch,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport CalendarView from './calendarView';\r\nimport { Search as SearchIcon } from 'react-feather';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst MeetingListView = () => {\r\n  const classes = useStyles();\r\n  const [meeting,setMeeting]=useState([]);\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: false,\r\n      });\r\n    \r\n      const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        console.log(state);\r\n      };\r\n      const getMeetings = async values => {\r\n        const url = \"http://localhost:81/meeting/getMeetings\";\r\n        try {\r\n          const result = await fetch(url);\r\n          const data = await result.json();\r\n          //console.log(data)\r\n      \r\n          if (data.status == \"success\") {\r\n            // console.log(\"success\");\r\n            setMeeting(data.data)\r\n           // console.log(meeting)\r\n            \r\n          } else {\r\n            console.log(\"error\");\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        } \r\n      };\r\n      getMeetings();\r\n      var meetingArr=[];\r\n      meetingArr.push(meeting);\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Meetings\"\r\n    >\r\n      <Container maxWidth={false}>\r\n      <div\r\n      \r\n    >\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n          <Grid\r\n          container\r\n         direction=\"row\"\r\n        justify=\"space-between\"\r\n      alignItems=\"center\"\r\n>\r\n            <Box maxWidth={500} minWidth={400}>\r\n\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon\r\n                        fontSize=\"small\"\r\n                        color=\"action\"\r\n                      >\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search meeting\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n            \r\n            {/* switch component for calendar view */}\r\n            <Box>\r\n            <FormControlLabel\r\n            control={\r\n          <Switch\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Calendar View\"\r\n      />\r\n     {/*  <EventIcon></EventIcon> */}\r\n      </Box>\r\n      </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n    <Box mt={3}>\r\n    {!state.checkedB ? ( \r\n          <Results meetings={meeting} />\r\n        ):(<CalendarView meetings={meeting}></CalendarView>)}\r\n </Box>\r\n      </Container>\r\n      \r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MeetingListView;\r\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\components\\linearGradient.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\components\\Page.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\DashboardLayout\\TopBar.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\createMeeting\\createMeetingForm.js",["209","210","211","212","213","214","215","216","217","218","219","220"],"import React,{useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns'; //instal this version npm i @date-io/date-fns@1.3.13\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Formik } from 'formik';\r\nimport Async from \"react-async\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Select,\r\n  InputLabel ,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  makeStyles,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  FormControl,\r\n  Snackbar\r\n\r\n} from '@material-ui/core';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 300,\r\n  },\r\n  \r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    width: 600\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst topicColumns = [\r\n  \r\n  { field: 'title', headerName: 'Topic Title', width: 180},\r\n  { field: 'totalTime', headerName: 'Duration', width: 180 }\r\n  \r\n];\r\nconst columns = [\r\n  { field: 'firstName', headerName: 'First name', width: 120},\r\n  { field: 'lastName', headerName: 'Last name', width: 120 },\r\n  { field: 'email', headerName: 'Email', width: 220 }\r\n];\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n \r\nconst CreateMeetingForm = props => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openTopic, setOpenTopic] = React.useState(false);\r\n  const [selectParticipats, setSelectionParticipants] = React.useState([]);\r\n  let dt = new Date();\r\n  const minDate = dt.setDate(dt.getDate() );\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [successMessage,setSuccessMessage]=useState(\"\");\r\n  const[user,setUser]=useState([]);\r\n  const[member,setMember]=useState([]);\r\n  const[topic,setTopic]=useState([]);\r\n  const[selectedTopic,setSelectedTopic]=useState([]);\r\n  const[topicsArr,setTopicsArr]=useState([]);\r\n  const[participantsArr,setParticipantsArr]=useState([]);\r\n  const[selectionModelTopic,setSelectionModelTopic]=useState([]);\r\n  const[selectionModelParticipant,setSelectionModelParticipant]=useState([]);\r\n\r\n  const loadUser = async values => {\r\n    const url = \"http://localhost:81/meeting/getEmails\";\r\n    try {\r\n      const result = await fetch(url);\r\n      const data = await result.json();\r\n      console.log(data)\r\n\r\n      if (data.status == \"success\") {\r\n        console.log(\"success\");\r\n        setUser(data.data)\r\n        console.log(user)\r\n        \r\n      } else {\r\n        console.log(\"error\");\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  };\r\n  const loadTopic = async values => {\r\n    const url = \"http://localhost:81/topic/getTopic\";\r\n    try {\r\n      const result = await fetch(url);\r\n      const data = await result.json();\r\n      //console.log(data)\r\n\r\n      if (data.status == \"success\") {\r\n        console.log(\"success\");\r\n        setTopic(data.data)\r\n        //console.log(topic)\r\n        \r\n      } else {\r\n        console.log(\"error\");\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  };\r\n\r\n      //function for displaying alert\r\n      function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n      }\r\n//Open Participants Dialog\r\n  const handleClickOpen = () => {\r\n    loadUser();\r\n    setOpen(true);\r\n    \r\n  };\r\n  \r\n  const handleClickOpenTopic =()=>{\r\n    loadTopic();\r\n    console.log(topic);\r\n    setOpenTopic(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseTopic = () => {\r\n    setOpenTopic(false);\r\n    console.log(topicsArr);\r\n    // console.log(selectionModelTopic);\r\n  };\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n /*  const addId=(data)=>{\r\n    var ln = data.length;\r\n    console.log(\"add id starts\")\r\n    for(var i=0; i<ln;i++)\r\n    {\r\n      console.log(i);\r\n      data[i].id=i;\r\n    }\r\n    return data;\r\n  } */\r\n  const SaveParticipants=()=>\r\n  {\r\n    setParticipantsArr(member);\r\n    setSelectionModelParticipant(member.map((r) => r.id));\r\n    console.log(participantsArr);\r\n   console.log(member);\r\n    handleClose();\r\n  }\r\n  const SaveTopics=()=>\r\n  {\r\n    setTopicsArr(selectedTopic);\r\n    setSelectionModelTopic(selectedTopic.map((r) => r.id));\r\n     console.log(selectionModelTopic)\r\n     console.log(topicsArr)\r\n    handleCloseTopic();\r\n    //console.log(calculateTotalDuration())\r\n    \r\n  }\r\n  const calculateTotalDuration=()=>{\r\n    var totalDuration=0;\r\n    topicsArr.map((val) => \r\n    totalDuration+=parseInt(val.totalTime)\r\n    );\r\n    console.log(totalDuration);\r\n    return totalDuration;\r\n  }\r\n  const clearForm=()=>{\r\n   setTopicsArr([]);\r\n   setSelectedDate(new Date());\r\n   setLocation(\"\");\r\n   setParticipantsArr([]);\r\n  }\r\n  //Function that handles the form submission\r\n  const handleSubmit = async (values,{resetForm}) => {\r\n    setErrorMessage(\"\");\r\n    const {title, description, duration} = values;\r\n    var participantsTmp=[];\r\n    var topicsTmp=[];\r\n    participantsArr.map((val)=>\r\n    participantsTmp.push(val._id)\r\n    );\r\n    topicsArr.map((val)=>\r\n    topicsTmp.push(val._id)\r\n    );\r\n    //console.log(topicsTmp);\r\n    console.log(participantsTmp);\r\n     if (!topicsTmp.length)\r\n    {\r\n      setErrorMessage(\"Please select at least one topic\");\r\n         setOpenAlert(true); \r\n    }\r\n    else if(!participantsTmp.length)\r\n    {\r\n         setErrorMessage(\"Please select at least one participant\");\r\n         setOpenAlert(true); \r\n    }\r\n     else if (location.length==0)\r\n    {\r\n      setErrorMessage(\"Please select a meeting location\");\r\n      setOpenAlert(true); \r\n      console.log((location));\r\n    } \r\n    else{\r\n    \r\n    var body = {\r\n      title: title,\r\n      description: description,\r\n      topic: topicsTmp,\r\n      members:participantsTmp,\r\n      date: selectedDate,\r\n      //time: selectedDate.toLocaleTimeString(),\r\n      location: location,\r\n      duration: duration.toString()\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      xhrFields: {\r\n        withCredentials: true\r\n    },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/meeting/meetingSave\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        //console.log(\"success\")\r\n        setSuccessMessage(text.message);\r\n        setOpenAlert(true); \r\n        resetForm({});\r\n        clearForm();\r\n        setSelectionModelParticipant([]);\r\n        setSelectionModelTopic([]);\r\n  \r\n      } else {\r\n        console.log(text.message);\r\n         setErrorMessage(text.message);\r\n        setOpenAlert(true); \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n /*  console.log(selectedTime.toLocaleDateString());\r\n  console.log(selectedTime.toLocaleTimeString()); */\r\n  }  \r\n};\r\n\r\n  //update the location selection\r\n  const [location, setLocation] = React.useState('');\r\n  const updateLocation = (event) => {\r\n    setLocation(event.target.value);\r\n  }\r\n  //update date\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\nreturn (\r\n    \r\n<Container maxWidth={false}>\r\n  <Formik\r\n  initialValues={{\r\n    title: '',\r\n    topics: '',\r\n    description: '',\r\n    duration: '',\r\n    date: '',\r\n    location: ' '\r\n  }}\r\n  onSubmit={handleSubmit}\r\n\r\n  // Using Yup for validation\r\n\r\n  validationSchema={Yup.object().shape({\r\n    title: Yup.string().max(100).required('Title is required'),\r\n    description: Yup.string().max(255),\r\n    duration: Yup.string().required(\"Duration is required\").matches(/^\\d+$/, 'The field should have digits only').test(\r\n      \"DOB\",\r\n      \"Duration must be greater than total topic durations\",\r\n      value => {\r\n        return value >= calculateTotalDuration();\r\n      })\r\n      // location: Yup.string().ensure().required(\"Location is required\")\r\n  })}\r\n  >\r\n    {props => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleReset,\r\n        handleSubmit\r\n      } = props;\r\n      return (\r\n        <>\r\n        \r\n        <form onSubmit={handleSubmit} noValidate>\r\n          <Card>\r\n            <CardContent>\r\n              <CardHeader title=\"Create A Meeting\">\r\n              </CardHeader>\r\n          {/* </Card> */}\r\n\r\n          <Divider/>\r\n\r\n          {/* Meeting Title */}\r\n          <TextField\r\n                error={Boolean(touched.title && errors.title)}\r\n                fullWidth\r\n                helperText={touched.title && errors.title}\r\n                label=\"Title\"\r\n                margin=\"normal\"\r\n                name=\"title\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.title}\r\n                variant=\"outlined\"\r\n                \r\n              />\r\n        {/* Meeting Topic */}  \r\n      {/* Invite Topics Button */}\r\n       <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-start\"\r\n          onClick={handleClickOpenTopic}>\r\n            Select topic\r\n          </Button> \r\n      <Dialog onClose={handleCloseTopic} aria-labelledby=\"customized-dialog-title\" open={openTopic}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleCloseTopic}>\r\n          Select Topics\r\n        </DialogTitle>\r\n        <DialogContent dividers> \r\n             <div style={{ height: 400, width: '100%' }}> \r\n             {/* {console.log(topicsArr)} */}\r\n                <DataGrid \r\n                  \r\n                  rows={topic}\r\n                  columns={topicColumns}\r\n                  pageSize={5} \r\n                  checkboxSelection\r\n                  selectionModel={selectionModelTopic} \r\n                  onSelectionModelChange={(e) => {\r\n                     \r\n                     const selectedIDs = new Set(e.selectionModel);\r\n                     console.log(selectedTopic)\r\n                     setSelectedTopic(topic.filter((r) =>\r\n                       selectedIDs.has(r.id))\r\n                       \r\n                     )} }\r\n                  \r\n                />   \r\n                      \r\n                    \r\n  \r\n            </div>\r\n            \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={SaveTopics} color=\"primary\">\r\n            Save Topics\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    {/* </div>  */}\r\n\r\n\r\n        {/* Meeting Description */}\r\n        <TextField\r\n          error={Boolean(touched.description && errors.description)}\r\n          fullWidth\r\n          helperText={touched.description && errors.description}\r\n          label=\"Description\"\r\n          margin=\"normal\"\r\n          name=\"description\"\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          value={values.description}\r\n          variant=\"outlined\"\r\n          multiline\r\n          rows={3}\r\n        />\r\n\r\n\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"dd/MM/yyyy\"\r\n          margin=\"normal\"\r\n          minDate={minDate}\r\n          id=\"date-picker-inline\"\r\n          label=\"Meeting Date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <br></br>\r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Meeting Time\"\r\n          minDate={minDate}\r\n          value={selectedDate}\r\n          keyboardIcon={<ScheduleIcon />}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n        \r\n        {/* Meeting Duration */}\r\n        <TextField\r\n          error={Boolean(touched.duration && errors.duration)}\r\n          fullWidth\r\n          helperText={touched.duration && errors.duration}\r\n          label=\"Duration in minutes\"\r\n          margin=\"normal\"\r\n          name=\"duration\"\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          value={values.duration}\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        {/* Meeting Location */}\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"location-input-label\">Location</InputLabel>\r\n        <Select\r\n          labelId=\"topic-input-label\"\r\n          id=\"location-input\"\r\n          value={location}\r\n          onChange={updateLocation}\r\n          label=\"Topics\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          >\r\n            <MenuItem value=\"\"> <em>None</em></MenuItem>\r\n            <MenuItem value={1}>Meeting Room 1</MenuItem>\r\n            <MenuItem value={2}>Meeting Room 2</MenuItem>\r\n            <MenuItem value={3}>Meeting Room 3</MenuItem>\r\n            <MenuItem value={4}>Meeting Room 4</MenuItem>\r\n        </Select>\r\n        <br></br>\r\n        {/* Invite Participants Button */}\r\n        <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-start\"\r\n          onClick={handleClickOpen}>\r\n            Invite Participants\r\n          </Button>\r\n        </FormControl>\r\n\r\n        </CardContent>\r\n           \r\n        <Box\r\n          display=\"flex\"\r\n          flex=\"1\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          p={3}\r\n        >\r\n          \r\n     \r\n    <div>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Invite Participants\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n\r\n              <div style={{ height: 400, width: '100%' }}>\r\n            \r\n                <DataGrid \r\n                \r\n                 rows={user}\r\n                 columns={columns}\r\n                 pageSize={5} \r\n                 checkboxSelection \r\n                 selectionModel={selectionModelParticipant} \r\n                 onSelectionModelChange={(e) => {\r\n                    \r\n                    const selectedIDs = new Set(e.selectionModel);\r\n                    console.log(member)\r\n                    setMember(user.filter((r) =>\r\n                      selectedIDs.has(r.id))\r\n                      \r\n                    )} }            \r\n                      />  \r\n                      \r\n       \r\n  \r\n            </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={SaveParticipants} color=\"primary\">\r\n            Save Participants\r\n          </Button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n\r\n        {/* Cretae Meeting button */}\r\n          <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-end\"\r\n          disabled={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\">\r\n            Create Meeting\r\n          </Button>\r\n          </Box>\r\n\r\n        </Card>\r\n        </form>\r\n        </>\r\n      );\r\n    }}\r\n  \r\n  </Formik>\r\n\r\n     <Snackbar open={openAlert} autoHideDuration={6000} onClose={handleCloseAlert}>\r\n    {!Object.keys(errorMessage).length == 0 ? \r\n     \r\n         (<Alert onClose={handleCloseAlert} severity=\"Error\">\r\n         {errorMessage}  \r\n     </Alert>)\r\n        :(<Alert onClose={handleCloseAlert} severity=\"success\">\r\n            {successMessage}  \r\n        </Alert>)}\r\n        \r\n        \r\n      </Snackbar> \r\n</Container>\r\n\r\n  );\r\n};\r\n\r\nexport default CreateMeetingForm;\r\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\settings\\SettingsView\\Notifications.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\MainLayout\\TopBar.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js",["221","222","223","224","225"],"import React, { Component, useState } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Card, \r\n} from '@material-ui/core';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport MeetingListView from \".\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { useNavigate } from 'react-router-dom';\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    width: 500\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\n\r\nconst CalendarView = ({ className, meetings, ...rest }) => {\r\n  \r\n\r\nconst[events,setEvents]=useState([\r\n      {\r\n        start: moment().toDate(),\r\n        end: moment()\r\n          .add(0, \"days\")\r\n          .toDate(),\r\n        title: \"TBKmeet Meeting\"\r\n      }\r\n    ]);\r\n    const [open, setOpen] =useState(false);\r\n    const [eventState,setEventState]=useState( { start: moment().toDate(), end: moment().add(0, \"days\").toDate(), title: \"\", _id: \"\",\r\n    description:\"\", location: \"\", topic: \"\", members: \"\"})\r\n\r\n\r\n const handleClickOpen=() => {\r\n  setOpen(true);\r\n\r\n};\r\n const handleClose=() => {\r\n  setOpen(false);\r\n};\r\nlet navigate = useNavigate()\r\nfunction create() {\r\n    const id = uuid();\r\n    navigate(`/app/room/${id}`, {id: id});\r\n}\r\n  \r\n    //const {meetings}= this.props.meetings;\r\n    // console.log(moment()\r\n    // .add(1, \"days\")\r\n    // .toDate())\r\n /*   for(let i=1;i<this.props.meetings.length-1;i++)\r\n  {\r\n    this.state.eventss[i].start=Date.parse(this.props.meetings[i].date);\r\n    this.state.eventss[i].end=Date.parse(this.props.meetings[i].date);\r\n    this.state.eventss[i].title=this.props.meetings[i].title;\r\n  }  */\r\n  const newEvents = meetings.map(event => ({\r\n    start:event.date,\r\n    end:event.date,\r\n    title: event.title,\r\n    id: event._id,\r\n    description: event.description,\r\n    topic: event.topic,\r\n    location: event.location,\r\n    members:event.members,\r\n    duration:event.duration,\r\n    isStarted:event.isStarted\r\n  }));\r\n  function MeetingButtonRender(status, meeting_id) {\r\n    //console.log(id)\r\n    if(status)\r\n    {\r\n      return (\r\n        \r\n                    <Button href=\"\" color=\"primary\" onClick={() => navigate(`/app/room/${meeting_id}`, {id: meeting_id})}>\r\n                      Attend Meeting\r\n                    </Button>\r\n        \r\n      )\r\n    }\r\n    else\r\n    {\r\n      return(\r\n      \r\n                  <Button href=\"\" color=\"primary\" onClick={() => navigate(`/app/room/${meeting_id}`, {id: meeting_id})}>\r\n                  Start Meeting </Button>\r\n      \r\n      )\r\n    }\r\n  }\r\n    return (\r\n\r\n      <Card>\r\n      <div className=\"App\">\r\n      \r\n        <Calendar\r\n          localizer={localizer}\r\n          defaultDate={new Date()}\r\n          defaultView=\"month\"\r\n          events={newEvents}\r\n          views={['month']}\r\n          // onSelectEvent={()=>{\r\n          //   console.log(newEvents);\r\n          // }}\r\n          onSelectEvent={event => {\r\n            handleClickOpen()\r\n            setEventState({eventState: event});\r\n            }}\r\n          style={{ height: \"80vh\" , width:\"100%\"}}\r\n        />\r\n      </div>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n              Meeting Detail\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n              <p>Title: {eventState.title}</p>\r\n              <p>Description: {eventState.description}</p>\r\n              <p>Duration: {eventState.duration}</p>\r\n              <p>Date: {moment(eventState.start).format('DD MMM YYYY')}</p>\r\n              <p>Time: {moment(eventState.start).format('LT')}</p>\r\n              <p>Location: {eventState.location}</p>\r\n{/*               <p>Topics: {this.state.eventState.topic}</p>\r\n              <p>Participants: {this.state.eventState.members}</p> */}\r\n            </DialogContent>\r\n            <DialogActions>\r\n            {MeetingButtonRender(eventState.isStarted, eventState._id)}\r\n\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n      </Card>\r\n    );\r\n  \r\n};\r\n\r\nexport default CalendarView;\r\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\meeting\\MeetingListView\\Results.js",["226","227","228"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from \"moment\";\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    width: 500\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, meetings, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const emptyRows = limit - Math.min(limit, meetings.length - page * limit);\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n  let navigate = useNavigate()\r\n  function create() {\r\n      const id = uuid();\r\n      navigate(`/app/room/${id}`, {id: id});\r\n  }\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const [meetingState, setMeetingState] = useState({date: moment().toDate(),  title: \"\", _id: \"\",\r\n  description:\"\", location: \"\", topic: \"\", members: \"\"});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function MeetingButtonRender(status, meeting_id) {\r\n    //console.log(id)\r\n    if(status)\r\n    {\r\n      return (\r\n        \r\n                    <Button href=\"\" color=\"primary\" onClick={() => navigate(`/app/room/${meeting_id}`, {id: meeting_id})}>\r\n                      Attend Meeting\r\n                    </Button>\r\n        \r\n      )\r\n    }\r\n    else\r\n    {\r\n      return(\r\n      \r\n                  <Button href=\"\" color=\"primary\" onClick={() => navigate(`/app/room/${meeting_id}`, {id: meeting_id})}>\r\n                  Start Meeting </Button>\r\n      \r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n               \r\n              <TableCell>\r\n                  Meeting Name \r\n                </TableCell>\r\n                <TableCell>\r\n                  Description\r\n                </TableCell>\r\n                <TableCell>\r\n                  Location\r\n                </TableCell>\r\n                <TableCell>\r\n                  Date\r\n                </TableCell>\r\n                <TableCell>\r\n                  Time\r\n                </TableCell>\r\n                <TableCell>\r\n                  Attend\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {meetings.slice(page* limit, page * limit + limit).map((meetings) => (\r\n                <TableRow\r\n                  hover\r\n                  key={meetings._id}\r\n                  \r\n                >\r\n                 \r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      \r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                        onClick={() => {\r\n                          handleClickOpen();\r\n                          console.log(meetings);\r\n                          setMeetingState(meetings);\r\n                          console.log(meetingState);\r\n                        }}\r\n                      >\r\n                        <a>{meetings.title}</a>\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {meetings.description}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  {meetings.location}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(meetings.date).format('DD MMM YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(meetings.date).format('LT')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  {MeetingButtonRender(meetings.isStarted, meetings._id)}\r\n\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n               {emptyRows > 0 && (\r\n                <TableRow style={{ height:  56 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n\r\n          <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n              Meeting Detail\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n              <p>Title: { meetingState.title}</p>\r\n              <p>Description: {meetingState.description}</p>\r\n              <p>Duration: { meetingState.duration}</p>\r\n              <p>Date: {moment( meetingState.date).format('DD MMM YYYY')}</p>\r\n              <p>Time: {moment( meetingState.date).format('LT')}</p>\r\n              <p>Location: {meetingState.location}</p>\r\n              {/* <p>Topics: {meetingState.topic}</p>\r\n              <p>Participants: {meetingState.members}</p> */}\r\n              \r\n            </DialogContent>\r\n            <DialogActions>\r\n            {MeetingButtonRender(meetingState.isStarted, meetingState._id)}\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={meetings.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  meetings: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js",["229"],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\components\\Logo.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\account\\AccountView\\Password.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\account\\AccountView\\ProfileDetails.js",["230"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst cities = [\n  {\n    value: 'ankara',\n    label: 'Ankara'\n  },\n  {\n    value: 'izmir',\n    label: 'Izmir'\n  },\n  {\n    value: 'istanbul',\n    label: 'Istanbul'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    city: '',\n    country: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Company\"\n                name=\"company\"\n                onChange={handleChange}\n                required\n                //value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n            </Grid>\n           \n          \n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\account\\AccountView\\Profile.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\topicPool\\topicList.js",["231","232"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n  \n} from '@material-ui/core';\nimport Async from 'react-async';\nimport { CompareArrowsOutlined } from '@material-ui/icons';\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n\n  /* tableRow: {\n    height: 30\n  }, */\n}));\n\n/* \nconst deneme=(async res=>{\nconst url=\"http://localhost:81/topic/getTopic\";\nresponse = await fetch(url);\nconst data = await response.json();\nconsole.log(data);}) */\n\nconst TopicList = ({ className,  ...rest }) => {\n  const classes = useStyles();\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n    setPage(0);\n  };\n  const [topic, setTopic]=useState([]);    \n  const emptyRows = limit - Math.min(limit, topic.length - page * limit);\n  \n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n  const getTopics = async values => {\n    const url = \"http://localhost:81/topic/getTopic\";\n    try {\n      const result = await fetch(url);\n      const data = await result.json();\n      // console.log(data)\n\n      if (data.status == \"success\") {\n        // console.log(\"success\");\n        setTopic(data.data)\n        // console.log(topic)\n        \n      } else {\n        console.log(\"error\");\n        \n      }\n    } catch (error) {\n      console.error(error);\n    } \n  };\n\n   \n  \n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n     \n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n        <Async promiseFn={getTopics}>\n          \n          <Table>\n            <TableHead>\n              <TableRow>\n               \n              <TableCell>\n                  Title\n                </TableCell>\n                <TableCell>\n                  Duration\n                </TableCell>\n                <TableCell>\n                  Category\n                </TableCell>\n                <TableCell>\n                  Meeting Output\n                </TableCell>\n                <TableCell>\n                  \n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n               {topic.slice( page* limit, page * limit + limit).map((topic) => (\n                <TableRow\n                  hover\n                 key={topic._id}\n                 className={classes.tableRow}\n                >\n                 \n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      \n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {topic.title}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                     {topic.totalTime } minutes \n                  </TableCell>\n                  <TableCell>\n                  {topic.category}  \n                  </TableCell>\n                  <TableCell>\n                  {topic.information &&(\n                    <p>Information Meeting</p>\n                  )}\n                  {topic.decision &&(\n                    <p>Decision Meeting</p>\n                  )}\n                 \n                  </TableCell>\n                  <TableCell>\n                   \n                  </TableCell>\n                  \n                </TableRow>\n              ))} \n               {emptyRows > 0 && (\n                <TableRow style={{ height:  56 * emptyRows }}>\n                  <TableCell colSpan={5} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n          </Async>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={topic.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\n\nexport default TopicList;\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\views\\createTopic\\createTopicForm.js",["233","234","235","236","237","238"],"import React,{useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Select,\r\n  InputLabel ,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  FormLabel ,\r\n  makeStyles,\r\n  Card,\r\n  CardHeader,\r\n  Checkbox,\r\n  FormControlLabel ,\r\n  CardContent,\r\n  Snackbar,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 300,\r\n  }\r\n}));\r\n\r\n\r\nconst CreateTopicForm = props => {\r\n\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [successMessage,setSuccessMessage]=useState(\"\");\r\n  const [category, setCategory] = React.useState('');\r\n  const [state, setState] = React.useState({\r\n    checkedDecision: false,\r\n    checkedInfo: false,\r\n  });\r\n  const { checkedDecision, checkedInfo } = state;\r\n  const error = [checkedDecision, checkedInfo].filter((v) => v).length < 1;\r\n  \r\n  //Alert Function\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n//Close func for closing the alert\r\nconst handleClose = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpen(false);\r\n};\r\nconst clearForm = () => {\r\n setCategory(\"\");\r\n setState(state.checkedDecision=false);\r\n setState(state.checkedInfo=false);\r\n};\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async (values,{resetForm}) => {\r\n    setErrorMessage(\"\");\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n       if(Object.keys(category).length == 0)\r\n     {\r\n      \r\n        setErrorMessage(\"Please select a category\");\r\n          setOpen(true); \r\n          \r\n     } \r\n     else if(error)\r\n     {\r\n      setErrorMessage(\"Please select at least one output type\");\r\n      setOpen(true); \r\n     }\r\n     else\r\n    {\r\n      \r\n    const { title, description,totalTime } = values;\r\n    var body = {\r\n        title: title,\r\n        description: description,\r\n        totalTime: totalTime,\r\n        category: category,\r\n        decision:checkedDecision,\r\n        information: checkedInfo\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      xhrFields: {\r\n        withCredentials: true\r\n    },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/topic/topicSave\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        //console.log(\"success\")\r\n        setSuccessMessage(text.message);\r\n        setOpen(true);\r\n        //Form reset must be done!!!\r\n        resetForm({});\r\n        clearForm();\r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message);\r\n        setOpen(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n   }\r\n  }; \r\n\r\n  //For updating the selector -duration time-\r\n  \r\n  const updateCategory = (event) => {\r\n    setCategory(event.target.value);\r\n    console.log(category);\r\n  };\r\n  \r\n\r\n  const handleCB = (event,value) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    \r\n  };\r\n  \r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    \r\n   <Container maxWidth={false}>\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n        description: '',\r\n        category:\"\",\r\n        totalTime:''\r\n      }}\r\n      onSubmit={handleSubmit}\r\n\r\n      //********Using Yup for validation********/\r\n\r\n      validationSchema={Yup.object().shape({\r\n        title: Yup.string().max(100).required('Title is required'),\r\n        description: Yup.string().max(255).required('Description is required'),\r\n       \r\n        totalTime: Yup.string().required(\"Duration is required\").matches(/^\\d+$/, 'The field should have digits only')\r\n        \r\n      })}\r\n      \r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <>\r\n          \r\n            <form onSubmit={handleSubmit} noValidate>\r\n            <Card>\r\n            <CardContent>\r\n            <CardHeader\r\n          subheader=\"Please enter the necessary information for creating a topic\"\r\n          title=\"Create Topic\"\r\n        />\r\n        <Divider />\r\n                \r\n              <TextField\r\n                error={Boolean(touched.title && errors.title)}\r\n                fullWidth\r\n                helperText={touched.title && errors.title}\r\n                label=\"Title\"\r\n                margin=\"normal\"\r\n                name=\"title\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.title}\r\n                variant=\"outlined\"\r\n                \r\n              />\r\n              <TextField\r\n                error={Boolean(touched.description && errors.description)}\r\n                fullWidth\r\n                helperText={touched.description && errors.description}\r\n                label=\"Description\"\r\n                margin=\"normal\"\r\n                name=\"description\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.totalTime && errors.totalTime)}\r\n                fullWidth\r\n                helperText={touched.totalTime && errors.totalTime}\r\n                label=\"Duration in minutes\"\r\n                margin=\"normal\"\r\n                name=\"totalTime\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.totalTime}\r\n                variant=\"outlined\"\r\n              />\r\n        \r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={category}\r\n          onChange={updateCategory}\r\n          label=\"Category\"\r\n          \r\n        > \r\n          <MenuItem value={\"\"}></MenuItem>  \r\n          <MenuItem value={\"Budget Meeting\"}>Budget Meeting</MenuItem>\r\n          <MenuItem value={\"HR Meeting\"}>HR Meeting</MenuItem>\r\n          <MenuItem value={\"Project Meeting\"}>Project Meeting</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n          <br/><br/>\r\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\">Select at least one meeting output</FormLabel>\r\n        <FormControlLabel\r\n          control={<Checkbox checked={state.checkedDecision} onChange={handleCB} name=\"checkedDecision\" value={checkedDecision}/>}\r\n          label=\"Decision\"\r\n        /> \r\n       <FormControlLabel\r\n          control={<Checkbox checked={state.checkedInfo} onChange={handleCB} name=\"checkedInfo\" value={checkedInfo} />}\r\n          label=\"Information \"\r\n        />\r\n        </FormControl>\r\n\r\n          </CardContent>\r\n          <Divider />\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n          >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n           Create Topic\r\n          </Button>\r\n\r\n        </Box>\r\n        </Card>\r\n        </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n    {!Object.keys(errorMessage).length == 0 ? \r\n     \r\n         (<Alert onClose={handleClose} severity=\"Error\">\r\n         {errorMessage}  \r\n     </Alert>)\r\n        :(<Alert onClose={handleClose} severity=\"success\">\r\n            {successMessage}  \r\n        </Alert>)}\r\n        \r\n        \r\n      </Snackbar>\r\n  </Container>\r\n  );\r\n};\r\n\r\nexport default CreateTopicForm;\r\n","E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\app\\store.js",[],"E:\\BILKENT\\senior project\\TBKMeet-Amish-3\\client\\src\\features\\userSlice.js",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":2,"column":20,"nodeType":"245","messageId":"246","endLine":2,"endColumn":26},{"ruleId":"243","severity":1,"message":"247","line":24,"column":7,"nodeType":"245","messageId":"246","endLine":24,"endColumn":13},{"ruleId":"248","severity":1,"message":"249","line":35,"column":5,"nodeType":"250","messageId":"251","endLine":35,"endColumn":11},{"ruleId":"252","severity":1,"message":"253","line":90,"column":23,"nodeType":"254","messageId":"251","endLine":90,"endColumn":25},{"ruleId":"243","severity":1,"message":"255","line":18,"column":10,"nodeType":"245","messageId":"246","endLine":18,"endColumn":15},{"ruleId":"243","severity":1,"message":"256","line":19,"column":17,"nodeType":"245","messageId":"246","endLine":19,"endColumn":26},{"ruleId":"243","severity":1,"message":"257","line":34,"column":10,"nodeType":"245","messageId":"246","endLine":34,"endColumn":15},{"ruleId":"243","severity":1,"message":"258","line":34,"column":17,"nodeType":"245","messageId":"246","endLine":34,"endColumn":25},{"ruleId":"243","severity":1,"message":"259","line":35,"column":10,"nodeType":"245","messageId":"246","endLine":35,"endColumn":18},{"ruleId":"243","severity":1,"message":"260","line":35,"column":20,"nodeType":"245","messageId":"246","endLine":35,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":78,"column":23,"nodeType":"254","messageId":"251","endLine":78,"endColumn":25},{"ruleId":"243","severity":1,"message":"257","line":127,"column":11,"nodeType":"245","messageId":"246","endLine":127,"endColumn":16},{"ruleId":"243","severity":1,"message":"259","line":128,"column":11,"nodeType":"245","messageId":"246","endLine":128,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","endLine":27,"endColumn":3},{"ruleId":"261","severity":1,"message":"264","line":1,"column":1,"nodeType":"263","endLine":35,"endColumn":3},{"ruleId":"243","severity":1,"message":"265","line":5,"column":9,"nodeType":"245","messageId":"246","endLine":5,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":30,"column":8,"nodeType":"268","endLine":30,"endColumn":10,"suggestions":"269"},{"ruleId":"266","severity":1,"message":"270","line":86,"column":8,"nodeType":"268","endLine":86,"endColumn":10,"suggestions":"271"},{"ruleId":"243","severity":1,"message":"272","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"273","line":1,"column":28,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"274","line":1,"column":38,"nodeType":"245","messageId":"246","endLine":1,"endColumn":44},{"ruleId":"243","severity":1,"message":"275","line":17,"column":8,"nodeType":"245","messageId":"246","endLine":17,"endColumn":15},{"ruleId":"252","severity":1,"message":"253","line":48,"column":27,"nodeType":"254","messageId":"251","endLine":48,"endColumn":29},{"ruleId":"243","severity":1,"message":"276","line":2,"column":18,"nodeType":"245","messageId":"246","endLine":2,"endColumn":28},{"ruleId":"243","severity":1,"message":"277","line":2,"column":30,"nodeType":"245","messageId":"246","endLine":2,"endColumn":41},{"ruleId":"243","severity":1,"message":"278","line":12,"column":8,"nodeType":"245","messageId":"246","endLine":12,"endColumn":13},{"ruleId":"243","severity":1,"message":"279","line":113,"column":10,"nodeType":"245","messageId":"246","endLine":113,"endColumn":27},{"ruleId":"243","severity":1,"message":"280","line":113,"column":29,"nodeType":"245","messageId":"246","endLine":113,"endColumn":53},{"ruleId":"252","severity":1,"message":"253","line":136,"column":23,"nodeType":"254","messageId":"251","endLine":136,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":156,"column":23,"nodeType":"254","messageId":"251","endLine":156,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":266,"column":30,"nodeType":"254","messageId":"251","endLine":266,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":301,"column":23,"nodeType":"254","messageId":"251","endLine":301,"endColumn":25},{"ruleId":"243","severity":1,"message":"281","line":369,"column":9,"nodeType":"245","messageId":"246","endLine":369,"endColumn":20},{"ruleId":"282","severity":1,"message":"283","line":596,"column":13,"nodeType":"284","endLine":596,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":610,"column":40,"nodeType":"254","messageId":"251","endLine":610,"endColumn":42},{"ruleId":"243","severity":1,"message":"285","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"286","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":23},{"ruleId":"243","severity":1,"message":"287","line":68,"column":7,"nodeType":"245","messageId":"246","endLine":68,"endColumn":13},{"ruleId":"243","severity":1,"message":"288","line":68,"column":14,"nodeType":"245","messageId":"246","endLine":68,"endColumn":23},{"ruleId":"243","severity":1,"message":"289","line":90,"column":10,"nodeType":"245","messageId":"246","endLine":90,"endColumn":16},{"ruleId":"243","severity":1,"message":"290","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":14},{"ruleId":"243","severity":1,"message":"289","line":86,"column":12,"nodeType":"245","messageId":"246","endLine":86,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":182,"column":25,"nodeType":"293","endLine":182,"endColumn":28},{"ruleId":"243","severity":1,"message":"294","line":25,"column":10,"nodeType":"245","messageId":"246","endLine":25,"endColumn":17},{"ruleId":"243","severity":1,"message":"295","line":16,"column":7,"nodeType":"245","messageId":"246","endLine":16,"endColumn":13},{"ruleId":"243","severity":1,"message":"296","line":18,"column":10,"nodeType":"245","messageId":"246","endLine":18,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":55,"column":23,"nodeType":"254","messageId":"251","endLine":55,"endColumn":25},{"ruleId":"243","severity":1,"message":"276","line":2,"column":18,"nodeType":"245","messageId":"246","endLine":2,"endColumn":28},{"ruleId":"243","severity":1,"message":"297","line":44,"column":9,"nodeType":"245","messageId":"246","endLine":44,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":77,"column":40,"nodeType":"254","messageId":"251","endLine":77,"endColumn":42},{"ruleId":"252","severity":1,"message":"253","line":118,"column":23,"nodeType":"254","messageId":"251","endLine":118,"endColumn":25},{"ruleId":"282","severity":1,"message":"283","line":277,"column":13,"nodeType":"284","endLine":277,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":290,"column":40,"nodeType":"254","messageId":"251","endLine":290,"endColumn":42},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'styles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Alert' is defined but never used.","'userSlice' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["300"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["301"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Toolbar' is defined but never used.","'RouterLink' is defined but never used.","'useNavigate' is defined but never used.","'Async' is defined but never used.","'selectParticipats' is assigned a value but never used.","'setSelectionParticipants' is assigned a value but never used.","'handleReset' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Component' is defined but never used.","'MeetingListView' is defined but never used.","'events' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'create' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'connect' is defined but never used.","'cities' is assigned a value but never used.","'CompareArrowsOutlined' is defined but never used.","'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [props.peer]",{"range":"306","text":"307"},"Update the dependencies array to be: [roomID]",{"range":"308","text":"309"},[726,728],"[props.peer]",[2585,2587],"[roomID]"]