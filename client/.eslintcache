[{"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\index.js":"1","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\App.js":"2","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\GlobalStyles.js":"4","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\routes.js":"5","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\index.js":"6","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js":"7","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js":"8","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\LoginView.js":"9","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\typography.js":"10","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\index.js":"11","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\index.js":"12","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\index.js":"13","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js":"14","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js":"15","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js":"16","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js":"17","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js":"18","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js":"19","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyMeeting\\index.js":"20","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyTopic\\index.js":"21","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js":"22","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\index.js":"23","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Page.js":"24","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\linearGradient.js":"25","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js":"26","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js":"27","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js":"28","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js":"29","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js":"30","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js":"31","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyTopic\\modifyTopicForm.js":"32","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyMeeting\\ModifyMeetingForm.js":"33","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Logo.js":"34","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js":"35","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js":"36","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js":"37","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js":"38","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\shadows.js":"39","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\topicList.js":"40","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js":"41","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js":"42","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"43","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"44","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\features\\userSlice.js":"45","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meetingHistory\\index.js":"46","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meetingHistory\\meetingHistoryList.js":"47","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\ForgotPassword.js":"48","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\timer.js":"49"},{"size":673,"mtime":1620251060952,"results":"50","hashOfConfig":"51"},{"size":759,"mtime":1620251060950,"results":"52","hashOfConfig":"51"},{"size":375,"mtime":1615306465169,"results":"53","hashOfConfig":"51"},{"size":709,"mtime":1615306465046,"results":"54","hashOfConfig":"51"},{"size":2748,"mtime":1620251060955,"results":"55","hashOfConfig":"51"},{"size":578,"mtime":1615306465184,"results":"56","hashOfConfig":"51"},{"size":10127,"mtime":1620251060959,"results":"57","hashOfConfig":"51"},{"size":1615,"mtime":1615306465317,"results":"58","hashOfConfig":"51"},{"size":6614,"mtime":1620251060958,"results":"59","hashOfConfig":"51"},{"size":579,"mtime":1615306465186,"results":"60","hashOfConfig":"51"},{"size":1032,"mtime":1615306465276,"results":"61","hashOfConfig":"51"},{"size":948,"mtime":1615306465300,"results":"62","hashOfConfig":"51"},{"size":739,"mtime":1615474604181,"results":"63","hashOfConfig":"51"},{"size":1050,"mtime":1615306465167,"results":"64","hashOfConfig":"51"},{"size":1401,"mtime":1615306465150,"results":"65","hashOfConfig":"51"},{"size":1010,"mtime":1620427275293,"results":"66","hashOfConfig":"51"},{"size":944,"mtime":1615306465314,"results":"67","hashOfConfig":"51"},{"size":696,"mtime":1615306465361,"results":"68","hashOfConfig":"51"},{"size":428,"mtime":1615806934468,"results":"69","hashOfConfig":"51"},{"size":1032,"mtime":1620499130764,"results":"70","hashOfConfig":"51"},{"size":946,"mtime":1620499149503,"results":"71","hashOfConfig":"51"},{"size":3051,"mtime":1620498957937,"results":"72","hashOfConfig":"51"},{"size":13610,"mtime":1620499799455,"results":"73","hashOfConfig":"51"},{"size":490,"mtime":1615306465050,"results":"74","hashOfConfig":"51"},{"size":388,"mtime":1615306465070,"results":"75","hashOfConfig":"51"},{"size":3519,"mtime":1620251060960,"results":"76","hashOfConfig":"51"},{"size":3245,"mtime":1615306465349,"results":"77","hashOfConfig":"51"},{"size":4974,"mtime":1620497915349,"results":"78","hashOfConfig":"51"},{"size":3560,"mtime":1617433681626,"results":"79","hashOfConfig":"51"},{"size":1830,"mtime":1617433681623,"results":"80","hashOfConfig":"51"},{"size":2266,"mtime":1620461998336,"results":"81","hashOfConfig":"51"},{"size":9351,"mtime":1620499320095,"results":"82","hashOfConfig":"51"},{"size":17705,"mtime":1620499260644,"results":"83","hashOfConfig":"51"},{"size":187,"mtime":1615306465048,"results":"84","hashOfConfig":"51"},{"size":2004,"mtime":1615306465345,"results":"85","hashOfConfig":"51"},{"size":4825,"mtime":1620498941297,"results":"86","hashOfConfig":"51"},{"size":9993,"mtime":1620498987269,"results":"87","hashOfConfig":"51"},{"size":755,"mtime":1615306465166,"results":"88","hashOfConfig":"51"},{"size":1645,"mtime":1615306465185,"results":"89","hashOfConfig":"51"},{"size":9060,"mtime":1620499378885,"results":"90","hashOfConfig":"51"},{"size":8758,"mtime":1620385157978,"results":"91","hashOfConfig":"51"},{"size":16344,"mtime":1620498392535,"results":"92","hashOfConfig":"51"},{"size":3829,"mtime":1620427516883,"results":"93","hashOfConfig":"51"},{"size":1722,"mtime":1615306465123,"results":"94","hashOfConfig":"51"},{"size":498,"mtime":1619549367393,"results":"95","hashOfConfig":"51"},{"size":765,"mtime":1620499005172,"results":"96","hashOfConfig":"51"},{"size":8820,"mtime":1620499085669,"results":"97","hashOfConfig":"51"},{"size":9618,"mtime":1620498215326,"results":"98","hashOfConfig":"51"},{"size":1039,"mtime":1620433092124,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1auxlmj",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\index.js",[],["212","213"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\App.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\GlobalStyles.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\routes.js",["214"],"import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport AccountView from 'src/views/account/AccountView';\r\nimport MeetingListView from 'src/views/meeting/MeetingListView';\r\nimport DashboardView from 'src/views/dashboard/DashboardView';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport NotFoundView from 'src/views/errors/NotFoundView';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport SettingsView from 'src/views/settings/SettingsView';\r\nimport CreateTopic from 'src/views/createTopic';\r\nimport CreateMeeting from 'src/views/createMeeting';\r\nimport TopicPool from 'src/views/topicPool';\r\nimport AttendMeetingView from 'src/views/attendMeeting/AttendMeetingtView';\r\nimport Room from 'src/views/attendMeeting/Room';\r\nimport ModifyMeeting from 'src/views/modifyMeeting';\r\nimport ModifyTopic from 'src/views/modifyTopic';\r\nimport MeetingHistoryList from 'src/views/meetingHistory';\r\nimport ForgotPassword from 'src/views/auth/ForgotPassword';\r\n//const user = this.state.user\r\nconst routes = (loggedIn) => [\r\n  {\r\n    path: 'app',\r\n    element: loggedIn ? <DashboardLayout /> : <Navigate to=\"/login\"/>,\r\n    children: [\r\n      { path: 'account', element: <AccountView /> },\r\n      { path: 'meetings', element: <MeetingListView /> },\r\n      { path: 'dashboard', element: <DashboardView /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: 'createTopic', element: <CreateTopic/> },\r\n      { path: 'createMeeting', element: <CreateMeeting/> },\r\n      { path: 'topics', element: <TopicPool/> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> },\r\n      { path: 'attendMeeting', element: <AttendMeetingView /> },\r\n      { path: 'room/:roomID', element: <Room /> },\r\n      { path: 'modifyMeeting/:meetingId', element: <ModifyMeeting /> },\r\n      { path: 'modifyTopic/:topicId', element: <ModifyTopic /> },\r\n      { path: 'meetingHistory', element: <MeetingHistoryList /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: !loggedIn ?  <MainLayout /> : <Navigate to=\"/app/dashboard\" />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n      { path: 'register', element: <RegisterView /> },\r\n      { path: 'forgotPassword', element: <ForgotPassword /> },\r\n      { path: '404', element: <NotFoundView /> },\r\n      { path: '/', element: <Navigate to=\"/Login\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: 'meetings',\r\n    element: loggedIn ? <MainLayout  /> : <Navigate to=\"/login\"/>,\r\n    children: [\r\n      { path: 'room/:roomID', element: <Room /> },\r\n    ]\r\n\r\n  }\r\n  \r\n];\r\n\r\nexport default routes;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js",["215","216","217"],"import React, {useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Snackbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport Image from 'src/imgs/meeting_register_img_2.jpg'; // Import using relative path\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst styles = {\r\n    root: {\r\n       \r\n    }\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    height: '100vh'\r\n  },\r\n  image:{\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: '100vh',\r\n    marginTop: '-24px',\r\n  }\r\n}));\r\n\r\nconst RegisterView = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n\r\n  //Alert Function \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n//Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email, password, firstName, lastName, companyName } = values;\r\n    var body = {\r\n      password: password,\r\n      email: email,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      companyName: companyName\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/signup\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        navigate('/login', { replace: true });\r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message)\r\n        setOpen(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n       \r\n        <Grid\r\n          container\r\n          spacing={0}\r\n        >\r\n            <CssBaseline />\r\n            <Grid\r\n            className={classes.image}\r\n          \r\n            lg={6}\r\n            md={2}\r\n            xl={6}\r\n            xs={0}\r\n          >\r\n            \r\n          </Grid>\r\n          <Grid\r\n         elevation={6} square\r\n            lg={6}\r\n            md={10}\r\n            xl={6}\r\n            xs={12}\r\n          >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              companyName: '',\r\n              policy: false\r\n            }}\r\n            onSubmit={handleSubmit}\r\n\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().min(8, 'Password must be at least 8 characters').required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                companyName: Yup.string().max(255).required('company name is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n          >\r\n            {props => {\r\n              const {\r\n              values,\r\n              touched,\r\n              errors,\r\n              isSubmitting,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.companyName && errors.companyName)}\r\n                  fullWidth\r\n                  helperText={touched.companyName && errors.companyName}\r\n                  label=\"Company Name\"\r\n                  margin=\"normal\"\r\n                  name=\"companyName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.companyName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    className={linearGradient().root}\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}}\r\n          </Formik>\r\n        </Container>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"Error\">\r\n            {errorMessage}  \r\n        </Alert>\r\n      </Snackbar>\r\n      </Box>\r\n      </Grid>\r\n      \r\n      </Grid>\r\n    \r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\LoginView.js",["218","219","220","221","222","223","224","225","226"],"import React, {useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Snackbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Cookies from 'js-cookie'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst LoginView = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n\r\n  //Alert Function \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n//Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email, password } = values;\r\n    var body = {\r\n      password: password,\r\n      email: email\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      credentials: 'include',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/login\";\r\n   \r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      const head = await response.headers\r\n      console.log( head)\r\n      const user = text.data\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n        localStorage.setItem('loggedIn', true)\r\n        navigate('/app/dashboard', { replace: true });\r\n        \r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message)\r\n        setOpen(true);    \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      \r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: ''\r\n      }}\r\n      onSubmit={handleSubmit}\r\n\r\n      //********Using Yup for validation********/\r\n\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n        password: Yup.string().max(255).required('Password is required')\r\n      })}\r\n    >\r\n      {props => {\r\n        const {\r\n          email,\r\n          password,\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <>\r\n            <form onSubmit={handleSubmit} noValidate>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Sign in\r\n                  </Typography>\r\n                  \r\n                </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Email Address\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n                //className={errors.email && touched.email && \"error\"}\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.password && errors.password)}\r\n                fullWidth\r\n                helperText={touched.password && errors.password}\r\n                label=\"Password\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n                variant=\"outlined\"\r\n              />\r\n              \r\n              <Box my={2}>\r\n                <Button \r\n                className={linearGradient().root}\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\" >\r\n                      Sign in now\r\n                </Button>\r\n              </Box>\r\n              <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n    \r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/forgotPassword\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Forgot your Password?\r\n                  </Link>\r\n                </Typography>\r\n            </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  </Container>  \r\n</Box>\r\n<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"Error\">\r\n            {errorMessage}  \r\n        </Alert>\r\n      </Snackbar>\r\n</Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\typography.js",["227"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js",["228","229"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\nimport Password from './Password';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n        >\r\n        {/* item is a class name which provides padding */}\r\n\r\n          <Grid \r\n          item\r\n          lg={8}\r\n          md={6}\r\n          xs={12}>\r\n          <Password />\r\n        </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js",["230","231","232"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst AttendMeeting = (props) => {\r\n  let navigate = useNavigate()\r\n  function create() {\r\n      const id = uuid();\r\n      navigate(`/app/room/${id}`, {id: id});\r\n  }\r\n\r\n  return (\r\n      <button onClick={create}>Create room</button>\r\n  );\r\n};\r\n\r\nexport default AttendMeeting;","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyMeeting\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyTopic\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js",["233","234"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\index.js",["235","236","237","238","239","240","241","242","243","244","245"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Page.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\linearGradient.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js",["246","247"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\nmeetingName:'Budget Meeting-2',\r\nmeetingTopic:'Budget',\r\ndate:'22/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n  id: uuid(),\r\nmeetingName:'Budget Meeting-2',\r\nmeetingTopic:'Budget',\r\ndate:'22/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n  id: uuid(),\r\nmeetingName:'Budget Meeting-2',\r\nmeetingTopic:'Budget',\r\ndate:'22/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst UpcomingMeetings = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [meetings] = useState(data);\r\n  const [meeting,setMeeting]=useState([]);\r\n  useEffect(async () => {\r\n    const result = await axios(\r\n\r\n        \"http://localhost:81/meeting/getMeetings\",\r\n        {withCredentials: true}\r\n\r\n    );\r\n    setMeeting(result.data.data)\r\n  },[]);\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Upcoming Meetings\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Meeting Name\r\n                </TableCell>\r\n               \r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip\r\n                    enterDelay={300}\r\n                    title=\"Sort\"\r\n                  >\r\n                    <TableSortLabel\r\n                      active\r\n                      direction=\"desc\"\r\n                    >\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Time\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {meeting.slice(0,5).map((meeting) => (\r\n                <TableRow\r\n                  hover\r\n                  key={meeting._id}\r\n                >\r\n                  <TableCell>\r\n                    {meeting.title}\r\n                  </TableCell>\r\n                  \r\n                  <TableCell>\r\n                  {moment( meeting.date).format('DD MMM YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>                      \r\n                  {moment( meeting.date).format('LT')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n          href=\"meetings\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUpcomingMeetings.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UpcomingMeetings;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js",["248","249"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js",["250"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst cities = [\r\n  {\r\n    value: 'ankara',\r\n    label: 'Ankara'\r\n  },\r\n  {\r\n    value: 'izmir',\r\n    label: 'Izmir'\r\n  },\r\n  {\r\n    value: 'istanbul',\r\n    label: 'Istanbul'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    city: '',\r\n    country: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Company\"\r\n                name=\"company\"\r\n                onChange={handleChange}\r\n                required\r\n                //value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              \r\n            </Grid>\r\n           \r\n          \r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js",["251","252","253","254"],"import React, { useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\nimport linearGradient from 'src/components/linearGradient'\r\n\r\n\r\nconst TopBar = ({\r\n  className,\r\n  onMobileNavOpen,\r\n  ...rest\r\n}) => {\r\n  const classes = linearGradient();\r\n  const [notifications] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const Logout = () => {\r\n    //dispatch(logout());\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem('loggedIn')   \r\n      const options = {\r\n        method: \"GET\",\r\n       credentials:\"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      };\r\n      const url = \"http://localhost:81/auth/logout\";\r\n      try {\r\n        const response = fetch(url, options);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n      navigate('/login', { replace: true });\r\n    }\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n         \r\n          </IconButton>\r\n          <IconButton color=\"inherit\"  onClick= {Logout}>\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n            </IconButton>\r\n          <IconButton color=\"inherit\"  onClick= {Logout}>\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyTopic\\modifyTopicForm.js",["255","256","257","258","259","260","261","262"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyMeeting\\ModifyMeetingForm.js",["263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Logo.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js",["282","283","284","285","286"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js",["287","288","289","290","291","292","293","294","295"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\shadows.js",["296"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\topicList.js",["297","298","299","300","301","302","303","304","305"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js",["306","307","308","309","310","311"],"import React,{useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Select,\r\n  InputLabel ,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  FormLabel ,\r\n  makeStyles,\r\n  Card,\r\n  CardHeader,\r\n  Checkbox,\r\n  FormControlLabel ,\r\n  CardContent,\r\n  Snackbar,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 300,\r\n  }\r\n}));\r\n\r\n\r\nconst CreateTopicForm = props => {\r\n\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [successMessage,setSuccessMessage]=useState(\"\");\r\n  const [category, setCategory] = React.useState('');\r\n  const [state, setState] = React.useState({\r\n    checkedDecision: false,\r\n    checkedInfo: false,\r\n  });\r\n  const { checkedDecision, checkedInfo } = state;\r\n  const error = [checkedDecision, checkedInfo].filter((v) => v).length < 1;\r\n  \r\n  //Alert Function\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n//Close func for closing the alert\r\nconst handleClose = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpen(false);\r\n};\r\nconst clearForm = () => {\r\n setCategory(\"\");\r\n setState(state.checkedDecision=false);\r\n setState(state.checkedInfo=false);\r\n};\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async (values,{resetForm}) => {\r\n    setErrorMessage(\"\");\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n       if(Object.keys(category).length == 0)\r\n     {\r\n      \r\n        setErrorMessage(\"Please select a category\");\r\n          setOpen(true); \r\n          \r\n     } \r\n     else if(error)\r\n     {\r\n      setErrorMessage(\"Please select at least one output type\");\r\n      setOpen(true); \r\n     }\r\n     else\r\n    {\r\n      \r\n    const { title, description,totalTime } = values;\r\n    var body = {\r\n        title: title,\r\n        description: description,\r\n        totalTime: totalTime,\r\n        category: category,\r\n        decision:checkedDecision,\r\n        information: checkedInfo\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/topic/topicSave\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        //console.log(\"success\")\r\n        setSuccessMessage(text.message);\r\n        setOpen(true);\r\n        //Form reset must be done!!!\r\n        resetForm({});\r\n        clearForm();\r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message);\r\n        setOpen(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n   }\r\n  }; \r\n\r\n  //For updating the selector -duration time-\r\n  \r\n  const updateCategory = (event) => {\r\n    setCategory(event.target.value);\r\n    console.log(category);\r\n  };\r\n  \r\n\r\n  const handleCB = (event,value) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    \r\n  };\r\n  \r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    \r\n   <Container maxWidth={false}>\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n        description: '',\r\n        category:\"\",\r\n        totalTime:''\r\n      }}\r\n      onSubmit={handleSubmit}\r\n\r\n      //********Using Yup for validation********/\r\n\r\n      validationSchema={Yup.object().shape({\r\n        title: Yup.string().max(100).required('Title is required'),\r\n        description: Yup.string().max(255).required('Description is required'),\r\n       \r\n        totalTime: Yup.string().required(\"Duration is required\").matches(/^\\d+$/, 'The field should have digits only')\r\n        \r\n      })}\r\n      \r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <>\r\n          \r\n            <form onSubmit={handleSubmit} noValidate>\r\n            <Card>\r\n            <CardContent>\r\n            <CardHeader\r\n          subheader=\"Please enter the necessary information for creating a topic\"\r\n          title=\"Create Topic\"\r\n        />\r\n        <Divider />\r\n                \r\n              <TextField\r\n                error={Boolean(touched.title && errors.title)}\r\n                fullWidth\r\n                helperText={touched.title && errors.title}\r\n                label=\"Title\"\r\n                margin=\"normal\"\r\n                name=\"title\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.title}\r\n                variant=\"outlined\"\r\n                \r\n              />\r\n              <TextField\r\n                error={Boolean(touched.description && errors.description)}\r\n                fullWidth\r\n                helperText={touched.description && errors.description}\r\n                label=\"Description\"\r\n                margin=\"normal\"\r\n                name=\"description\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.totalTime && errors.totalTime)}\r\n                fullWidth\r\n                helperText={touched.totalTime && errors.totalTime}\r\n                label=\"Duration in minutes\"\r\n                margin=\"normal\"\r\n                name=\"totalTime\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.totalTime}\r\n                variant=\"outlined\"\r\n              />\r\n        \r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={category}\r\n          onChange={updateCategory}\r\n          label=\"Category\"\r\n          \r\n        > \r\n          <MenuItem value={\"\"}></MenuItem>  \r\n          <MenuItem value={\"Budget Meeting\"}>Budget Meeting</MenuItem>\r\n          <MenuItem value={\"HR Meeting\"}>HR Meeting</MenuItem>\r\n          <MenuItem value={\"Project Meeting\"}>Project Meeting</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n          <br/><br/>\r\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\">Select at least one meeting output</FormLabel>\r\n        <FormControlLabel\r\n          control={<Checkbox checked={state.checkedDecision} onChange={handleCB} name=\"checkedDecision\" value={checkedDecision}/>}\r\n          label=\"Decision\"\r\n        /> \r\n       <FormControlLabel\r\n          control={<Checkbox checked={state.checkedInfo} onChange={handleCB} name=\"checkedInfo\" value={checkedInfo} />}\r\n          label=\"Information \"\r\n        />\r\n        </FormControl>\r\n\r\n          </CardContent>\r\n          <Divider />\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n          >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n           Create Topic\r\n          </Button>\r\n\r\n        </Box>\r\n        </Card>\r\n        </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n    {!Object.keys(errorMessage).length == 0 ? \r\n     \r\n         (<Alert onClose={handleClose} severity=\"Error\">\r\n         {errorMessage}  \r\n     </Alert>)\r\n        :(<Alert onClose={handleClose} severity=\"success\">\r\n            {successMessage}  \r\n        </Alert>)}\r\n        \r\n        \r\n      </Snackbar>\r\n  </Container>\r\n  );\r\n};\r\n\r\nexport default CreateTopicForm;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js",["312","313","314","315","316","317","318","319","320"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js",["321","322","323","324","325"],"import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  Settings as SettingsIcon,\r\n  User as UserIcon,\r\n  Calendar as CheckMeetingIcon,\r\n  CheckCircle as CheckTopicPoolIcon,\r\n  Eye as CheckHistoryIcon,\r\n  FilePlus as CreateTopicIcon,\r\n  UserCheck as AttendMeetingIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\n//const state = getState();\r\n\r\nconst staticInfo = {\r\n  avatar: '/static/images/avatars/default_profile_img',\r\n  name: 'Syed Amish Alvi'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/app/createMeeting',\r\n    icon: CreateTopicIcon,\r\n    title: 'Create Meeting'\r\n  },\r\n  {\r\n    href: '/app/meetings',\r\n    icon: CheckMeetingIcon,\r\n    title: 'Check Meeting '\r\n  },\r\n \r\n  {\r\n    href: '/app/createTopic',\r\n    icon: CreateTopicIcon,\r\n    title: 'Create Topic'\r\n  },\r\n  \r\n  {\r\n    href: '/app/topics',\r\n    icon: CheckTopicPoolIcon,\r\n    title: 'Check Topic Pool'\r\n  },\r\n  {\r\n    href: '/app/meetingHistory',\r\n    icon: CheckHistoryIcon,\r\n    title: 'Check Meeting History'\r\n  },\r\n  {\r\n    href: '/app/account',\r\n    icon: UserIcon,\r\n    title: 'Account'\r\n  },\r\n\r\n\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\n\r\nconst NavBar = ({onMobileClose, openMobile}) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={2}\r\n      >\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          Welcome!\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n         {user.firstName+ \" \" + user.lastName} \r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n      \r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\n/*function mapStateToProps(state) {\r\n  return {\r\n      user: state\r\n      }\r\n  }*/\r\n\r\n\r\nexport default NavBar;","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\features\\userSlice.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meetingHistory\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meetingHistory\\meetingHistoryList.js",["326","327","328","329","330","331","332","333","334","335"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\ForgotPassword.js",["336","337","338","339","340","341","342","343","344","345","346"],"import React, {useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Snackbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ForgotPassword = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [tokenState,setTokenState]= useState(\"\");\r\n  var [isClicked,setIsClicked]= useState(false);\r\n\r\n  //Alert Function \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  function validationHandle()\r\n  {\r\n    if(isClicked)\r\n    {\r\n      return(\r\n        Yup.object().shape({\r\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n          password: Yup.string().min(8, 'Password must be at least 8 characters').required('password is required'),\r\n          confirmPassword: Yup.string().min(8, 'Password must be at least 8 characters').required('password is required').oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        })\r\n      )\r\n    }\r\n    else{\r\n      return(Yup.object().shape({\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n      }))\r\n    }\r\n  }\r\n//Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n    const resetTokenClicked= async values =>{\r\n      const { email } = values;\r\n      var body = {\r\n        email: email\r\n      };\r\n      const options = {\r\n        method: \"POST\",\r\n        credentials: 'include',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n\r\n      };\r\n      const url = \"http://localhost:81/auth/resetTokenClicked\";\r\n     \r\n      try {\r\n        const response = await fetch(url, options);\r\n        const text = await response.json();\r\n        const head = await response.headers\r\n        console.log( head)\r\n        const user = text.data\r\n  \r\n        if (text.status == \"success\") {\r\n          console.log(\"success\")\r\n          console.log(text)\r\n          return true;\r\n          \r\n        } else {\r\n          console.log(text.message);\r\n            \r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const resetPassword= async values =>{\r\n      const { email,password } = values;\r\n      var body = {\r\n        email: email,\r\n        password:password\r\n      };\r\n      const options = {\r\n        method: \"POST\",\r\n        credentials: 'include',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n\r\n      };\r\n      const url = \"http://localhost:81/auth/newPassword\";\r\n      await setTokenState(resetTokenClicked);\r\n      if(tokenState){\r\n      try {\r\n        const response = await fetch(url, options);\r\n        const text = await response.json();\r\n        const head = await response.headers\r\n        console.log( head)\r\n        const user = text.data\r\n  \r\n        if (text.status == \"success\") {\r\n          console.log(\"success\")\r\n          console.log(text)\r\n          navigate('/login')\r\n          \r\n        } else {\r\n          console.log(text.message);\r\n          setErrorMessage(\"Password change failed\")\r\n          setOpen(true);    \r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n     }\r\n     else{\r\n      setErrorMessage(\"Please verify from your email\")\r\n      setOpen(true);  \r\n     }\r\n    }\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email } = values;\r\n    var body = {\r\n      email: email\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      credentials: 'include',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/passwordreset\";\r\n   \r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      const head = await response.headers\r\n      const user = text.data\r\n\r\n      if (text.status == \"success\") {\r\n       // console.log(\"success\")\r\n      } else {\r\n        //console.log(text.message);\r\n        setErrorMessage(text.message)\r\n        setOpen(true);    \r\n      }\r\n    } catch (error) {\r\n     // console.error(error);\r\n    }\r\n    setIsClicked(true);\r\n    console.log(isClicked)\r\n  };\r\n \r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      \r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: ''\r\n      }}\r\n      //********Using Yup for validation********/\r\n      onSubmit={resetPassword}\r\n      validationSchema={validationHandle()}\r\n    >\r\n      {props => {\r\n        const {\r\n          email,\r\n          password,\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n        } = props;\r\n        return (\r\n          <>\r\n            <form onSubmit={handleSubmit} noValidate>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Forgot Password\r\n                  </Typography>\r\n                  \r\n                </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Email Address\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n                //className={errors.email && touched.email && \"error\"}\r\n              />\r\n              \r\n              {(() => {\r\n        if (isClicked) {\r\n          return (\r\n            <TextField\r\n            fullWidth\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          )\r\n           }\r\n      })()}\r\n                      \r\n                {(() => {\r\n        if (isClicked) {\r\n          return (\r\n            <TextField\r\n                   fullWidth\r\n                   error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                   helperText={touched.confirmPassword && errors.confirmPassword}\r\n                   label=\"Confirm password\"\r\n                   margin=\"normal\"\r\n                   name=\"confirmPassword\"\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   type=\"password\"\r\n                   value={values.confirmPassword}\r\n                   variant=\"outlined\"\r\n                 />\r\n          )\r\n           }\r\n      })()} \r\n              <Box my={2}>\r\n                {isClicked\r\n                   ?<Button \r\n                   className={linearGradient().root}\r\n                       disabled={isSubmitting}\r\n                       fullWidth\r\n                       /* type=\"submit\" */\r\n                       size=\"large\"\r\n                       onClick={()=>{resetPassword(values)}}\r\n                       variant=\"contained\" >\r\n                         Reset Password\r\n                   </Button> \r\n                   : <Button \r\n                   className={linearGradient().root}\r\n                       disabled={isSubmitting}\r\n                       fullWidth\r\n                       size=\"large\"\r\n                       onClick={()=>{handleSubmit(values)}}\r\n                       variant=\"contained\" >\r\n                         Send Password Reset Request\r\n                   </Button>\r\n                }                        \r\n              </Box>\r\n            </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  </Container>  \r\n</Box>\r\n<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"Error\">\r\n            {errorMessage}  \r\n        </Alert>\r\n      </Snackbar>\r\n</Page>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\timer.js",[],{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":2,"column":20,"nodeType":"353","messageId":"354","endLine":2,"endColumn":26},{"ruleId":"351","severity":1,"message":"355","line":24,"column":7,"nodeType":"353","messageId":"354","endLine":24,"endColumn":13},{"ruleId":"356","severity":1,"message":"357","line":35,"column":5,"nodeType":"358","messageId":"359","endLine":35,"endColumn":11},{"ruleId":"360","severity":1,"message":"361","line":90,"column":23,"nodeType":"362","messageId":"359","endLine":90,"endColumn":25},{"ruleId":"351","severity":1,"message":"363","line":18,"column":10,"nodeType":"353","messageId":"354","endLine":18,"endColumn":15},{"ruleId":"351","severity":1,"message":"364","line":19,"column":8,"nodeType":"353","messageId":"354","endLine":19,"endColumn":15},{"ruleId":"351","severity":1,"message":"365","line":33,"column":10,"nodeType":"353","messageId":"354","endLine":33,"endColumn":15},{"ruleId":"351","severity":1,"message":"366","line":33,"column":17,"nodeType":"353","messageId":"354","endLine":33,"endColumn":25},{"ruleId":"351","severity":1,"message":"367","line":34,"column":10,"nodeType":"353","messageId":"354","endLine":34,"endColumn":18},{"ruleId":"351","severity":1,"message":"368","line":34,"column":20,"nodeType":"353","messageId":"354","endLine":34,"endColumn":31},{"ruleId":"360","severity":1,"message":"361","line":77,"column":23,"nodeType":"362","messageId":"359","endLine":77,"endColumn":25},{"ruleId":"351","severity":1,"message":"365","line":124,"column":11,"nodeType":"353","messageId":"354","endLine":124,"endColumn":16},{"ruleId":"351","severity":1,"message":"367","line":125,"column":11,"nodeType":"353","messageId":"354","endLine":125,"endColumn":19},{"ruleId":"369","severity":1,"message":"370","line":1,"column":1,"nodeType":"371","endLine":35,"endColumn":3},{"ruleId":"351","severity":1,"message":"372","line":8,"column":8,"nodeType":"353","messageId":"354","endLine":8,"endColumn":15},{"ruleId":"351","severity":1,"message":"373","line":9,"column":8,"nodeType":"353","messageId":"354","endLine":9,"endColumn":22},{"ruleId":"351","severity":1,"message":"374","line":1,"column":17,"nodeType":"353","messageId":"354","endLine":1,"endColumn":26},{"ruleId":"351","severity":1,"message":"375","line":1,"column":28,"nodeType":"353","messageId":"354","endLine":1,"endColumn":36},{"ruleId":"351","severity":1,"message":"376","line":1,"column":38,"nodeType":"353","messageId":"354","endLine":1,"endColumn":44},{"ruleId":"351","severity":1,"message":"377","line":17,"column":8,"nodeType":"353","messageId":"354","endLine":17,"endColumn":15},{"ruleId":"378","severity":1,"message":"379","line":43,"column":17,"nodeType":"380","endLine":49,"endColumn":8},{"ruleId":"351","severity":1,"message":"381","line":9,"column":17,"nodeType":"353","messageId":"354","endLine":9,"endColumn":22},{"ruleId":"351","severity":1,"message":"382","line":9,"column":28,"nodeType":"353","messageId":"354","endLine":9,"endColumn":31},{"ruleId":"378","severity":1,"message":"383","line":35,"column":8,"nodeType":"384","endLine":35,"endColumn":10,"suggestions":"385"},{"ruleId":"351","severity":1,"message":"386","line":112,"column":12,"nodeType":"353","messageId":"354","endLine":112,"endColumn":24},{"ruleId":"351","severity":1,"message":"387","line":112,"column":25,"nodeType":"353","messageId":"354","endLine":112,"endColumn":40},{"ruleId":"351","severity":1,"message":"388","line":113,"column":12,"nodeType":"353","messageId":"354","endLine":113,"endColumn":23},{"ruleId":"351","severity":1,"message":"389","line":125,"column":12,"nodeType":"353","messageId":"354","endLine":125,"endColumn":27},{"ruleId":"378","severity":1,"message":"379","line":183,"column":17,"nodeType":"380","endLine":194,"endColumn":8},{"ruleId":"378","severity":1,"message":"390","line":194,"column":10,"nodeType":"384","endLine":194,"endColumn":12,"suggestions":"391"},{"ruleId":"378","severity":1,"message":"392","line":304,"column":8,"nodeType":"384","endLine":304,"endColumn":10,"suggestions":"393"},{"ruleId":"394","severity":1,"message":"395","line":396,"column":36,"nodeType":"396","messageId":"397","endLine":396,"endColumn":37},{"ruleId":"351","severity":1,"message":"398","line":61,"column":10,"nodeType":"353","messageId":"354","endLine":61,"endColumn":18},{"ruleId":"378","severity":1,"message":"379","line":63,"column":13,"nodeType":"380","endLine":71,"endColumn":4},{"ruleId":"360","severity":1,"message":"361","line":66,"column":23,"nodeType":"362","messageId":"359","endLine":66,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":166,"column":40,"nodeType":"362","messageId":"359","endLine":166,"endColumn":42},{"ruleId":"351","severity":1,"message":"399","line":16,"column":7,"nodeType":"353","messageId":"354","endLine":16,"endColumn":13},{"ruleId":"351","severity":1,"message":"400","line":7,"column":3,"nodeType":"353","messageId":"354","endLine":7,"endColumn":8},{"ruleId":"351","severity":1,"message":"401","line":14,"column":8,"nodeType":"353","messageId":"354","endLine":14,"endColumn":25},{"ruleId":"351","severity":1,"message":"402","line":26,"column":10,"nodeType":"353","messageId":"354","endLine":26,"endColumn":23},{"ruleId":"351","severity":1,"message":"403","line":43,"column":15,"nodeType":"353","messageId":"354","endLine":43,"endColumn":23},{"ruleId":"351","severity":1,"message":"404","line":2,"column":10,"nodeType":"353","messageId":"354","endLine":2,"endColumn":14},{"ruleId":"351","severity":1,"message":"405","line":2,"column":41,"nodeType":"353","messageId":"354","endLine":2,"endColumn":51},{"ruleId":"360","severity":1,"message":"361","line":78,"column":40,"nodeType":"362","messageId":"359","endLine":78,"endColumn":42},{"ruleId":"360","severity":1,"message":"361","line":117,"column":23,"nodeType":"362","messageId":"359","endLine":117,"endColumn":25},{"ruleId":"378","severity":1,"message":"379","line":134,"column":13,"nodeType":"380","endLine":143,"endColumn":4},{"ruleId":"378","severity":1,"message":"406","line":143,"column":5,"nodeType":"384","endLine":143,"endColumn":7,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":291,"column":13,"nodeType":"410","endLine":291,"endColumn":32},{"ruleId":"360","severity":1,"message":"361","line":304,"column":40,"nodeType":"362","messageId":"359","endLine":304,"endColumn":42},{"ruleId":"351","severity":1,"message":"411","line":2,"column":18,"nodeType":"353","messageId":"354","endLine":2,"endColumn":28},{"ruleId":"351","severity":1,"message":"412","line":2,"column":43,"nodeType":"353","messageId":"354","endLine":2,"endColumn":52},{"ruleId":"351","severity":1,"message":"413","line":113,"column":10,"nodeType":"353","messageId":"354","endLine":113,"endColumn":15},{"ruleId":"351","severity":1,"message":"414","line":113,"column":17,"nodeType":"353","messageId":"354","endLine":113,"endColumn":25},{"ruleId":"351","severity":1,"message":"415","line":116,"column":29,"nodeType":"353","messageId":"354","endLine":116,"endColumn":53},{"ruleId":"378","severity":1,"message":"379","line":133,"column":13,"nodeType":"380","endLine":149,"endColumn":4},{"ruleId":"416","severity":1,"message":"417","line":140,"column":23,"nodeType":"380","messageId":"418","endLine":140,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":144,"column":18,"nodeType":"362","messageId":"359","endLine":144,"endColumn":20},{"ruleId":"378","severity":1,"message":"419","line":149,"column":5,"nodeType":"384","endLine":149,"endColumn":7,"suggestions":"420"},{"ruleId":"378","severity":1,"message":"379","line":151,"column":13,"nodeType":"380","endLine":167,"endColumn":4},{"ruleId":"360","severity":1,"message":"361","line":162,"column":18,"nodeType":"362","messageId":"359","endLine":162,"endColumn":20},{"ruleId":"378","severity":1,"message":"421","line":167,"column":5,"nodeType":"384","endLine":167,"endColumn":7,"suggestions":"422"},{"ruleId":"360","severity":1,"message":"361","line":232,"column":30,"nodeType":"362","messageId":"359","endLine":232,"endColumn":32},{"ruleId":"360","severity":1,"message":"361","line":264,"column":23,"nodeType":"362","messageId":"359","endLine":264,"endColumn":25},{"ruleId":"378","severity":1,"message":"379","line":284,"column":11,"nodeType":"380","endLine":298,"endColumn":2},{"ruleId":"378","severity":1,"message":"423","line":298,"column":3,"nodeType":"384","endLine":298,"endColumn":5,"suggestions":"424"},{"ruleId":"351","severity":1,"message":"425","line":361,"column":9,"nodeType":"353","messageId":"354","endLine":361,"endColumn":20},{"ruleId":"408","severity":1,"message":"409","line":585,"column":13,"nodeType":"410","endLine":585,"endColumn":32},{"ruleId":"360","severity":1,"message":"361","line":599,"column":40,"nodeType":"362","messageId":"359","endLine":599,"endColumn":42},{"ruleId":"351","severity":1,"message":"426","line":1,"column":17,"nodeType":"353","messageId":"354","endLine":1,"endColumn":26},{"ruleId":"351","severity":1,"message":"427","line":8,"column":8,"nodeType":"353","messageId":"354","endLine":8,"endColumn":23},{"ruleId":"351","severity":1,"message":"428","line":68,"column":7,"nodeType":"353","messageId":"354","endLine":68,"endColumn":13},{"ruleId":"351","severity":1,"message":"429","line":68,"column":14,"nodeType":"353","messageId":"354","endLine":68,"endColumn":23},{"ruleId":"351","severity":1,"message":"430","line":90,"column":10,"nodeType":"353","messageId":"354","endLine":90,"endColumn":16},{"ruleId":"351","severity":1,"message":"430","line":89,"column":12,"nodeType":"353","messageId":"354","endLine":89,"endColumn":18},{"ruleId":"351","severity":1,"message":"431","line":99,"column":8,"nodeType":"353","messageId":"354","endLine":99,"endColumn":20},{"ruleId":"351","severity":1,"message":"432","line":122,"column":13,"nodeType":"353","messageId":"354","endLine":122,"endColumn":17},{"ruleId":"351","severity":1,"message":"433","line":124,"column":13,"nodeType":"353","messageId":"354","endLine":124,"endColumn":17},{"ruleId":"360","severity":1,"message":"361","line":126,"column":23,"nodeType":"362","messageId":"359","endLine":126,"endColumn":25},{"ruleId":"351","severity":1,"message":"434","line":141,"column":12,"nodeType":"353","messageId":"354","endLine":141,"endColumn":31},{"ruleId":"435","severity":1,"message":"436","line":207,"column":25,"nodeType":"437","endLine":207,"endColumn":28},{"ruleId":"360","severity":1,"message":"361","line":227,"column":33,"nodeType":"362","messageId":"359","endLine":227,"endColumn":35},{"ruleId":"360","severity":1,"message":"361","line":242,"column":33,"nodeType":"362","messageId":"359","endLine":242,"endColumn":35},{"ruleId":"369","severity":1,"message":"438","line":1,"column":1,"nodeType":"371","endLine":27,"endColumn":3},{"ruleId":"351","severity":1,"message":"439","line":19,"column":8,"nodeType":"353","messageId":"354","endLine":19,"endColumn":13},{"ruleId":"351","severity":1,"message":"440","line":20,"column":10,"nodeType":"353","messageId":"354","endLine":20,"endColumn":31},{"ruleId":"351","severity":1,"message":"431","line":100,"column":8,"nodeType":"353","messageId":"354","endLine":100,"endColumn":20},{"ruleId":"378","severity":1,"message":"379","line":107,"column":13,"nodeType":"380","endLine":114,"endColumn":4},{"ruleId":"351","severity":1,"message":"432","line":138,"column":13,"nodeType":"353","messageId":"354","endLine":138,"endColumn":17},{"ruleId":"351","severity":1,"message":"433","line":140,"column":13,"nodeType":"353","messageId":"354","endLine":140,"endColumn":17},{"ruleId":"360","severity":1,"message":"361","line":142,"column":23,"nodeType":"362","messageId":"359","endLine":142,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":225,"column":33,"nodeType":"362","messageId":"359","endLine":225,"endColumn":35},{"ruleId":"360","severity":1,"message":"361","line":240,"column":33,"nodeType":"362","messageId":"359","endLine":240,"endColumn":35},{"ruleId":"351","severity":1,"message":"411","line":2,"column":18,"nodeType":"353","messageId":"354","endLine":2,"endColumn":28},{"ruleId":"351","severity":1,"message":"441","line":44,"column":9,"nodeType":"353","messageId":"354","endLine":44,"endColumn":17},{"ruleId":"360","severity":1,"message":"361","line":77,"column":40,"nodeType":"362","messageId":"359","endLine":77,"endColumn":42},{"ruleId":"360","severity":1,"message":"361","line":116,"column":23,"nodeType":"362","messageId":"359","endLine":116,"endColumn":25},{"ruleId":"408","severity":1,"message":"409","line":275,"column":13,"nodeType":"410","endLine":275,"endColumn":32},{"ruleId":"360","severity":1,"message":"361","line":288,"column":40,"nodeType":"362","messageId":"359","endLine":288,"endColumn":42},{"ruleId":"351","severity":1,"message":"442","line":112,"column":10,"nodeType":"353","messageId":"354","endLine":112,"endColumn":27},{"ruleId":"351","severity":1,"message":"415","line":112,"column":29,"nodeType":"353","messageId":"354","endLine":112,"endColumn":53},{"ruleId":"378","severity":1,"message":"379","line":129,"column":13,"nodeType":"380","endLine":136,"endColumn":4},{"ruleId":"378","severity":1,"message":"379","line":138,"column":13,"nodeType":"380","endLine":145,"endColumn":4},{"ruleId":"360","severity":1,"message":"361","line":228,"column":30,"nodeType":"362","messageId":"359","endLine":228,"endColumn":32},{"ruleId":"360","severity":1,"message":"361","line":260,"column":23,"nodeType":"362","messageId":"359","endLine":260,"endColumn":25},{"ruleId":"351","severity":1,"message":"425","line":326,"column":9,"nodeType":"353","messageId":"354","endLine":326,"endColumn":20},{"ruleId":"408","severity":1,"message":"409","line":542,"column":13,"nodeType":"410","endLine":542,"endColumn":32},{"ruleId":"360","severity":1,"message":"361","line":556,"column":40,"nodeType":"362","messageId":"359","endLine":556,"endColumn":42},{"ruleId":"351","severity":1,"message":"411","line":2,"column":18,"nodeType":"353","messageId":"354","endLine":2,"endColumn":28},{"ruleId":"351","severity":1,"message":"443","line":5,"column":3,"nodeType":"353","messageId":"354","endLine":5,"endColumn":9},{"ruleId":"351","severity":1,"message":"444","line":16,"column":15,"nodeType":"353","messageId":"354","endLine":16,"endColumn":27},{"ruleId":"351","severity":1,"message":"445","line":22,"column":16,"nodeType":"353","messageId":"354","endLine":22,"endColumn":33},{"ruleId":"351","severity":1,"message":"446","line":28,"column":7,"nodeType":"353","messageId":"354","endLine":28,"endColumn":17},{"ruleId":"351","severity":1,"message":"439","line":20,"column":8,"nodeType":"353","messageId":"354","endLine":20,"endColumn":13},{"ruleId":"351","severity":1,"message":"440","line":21,"column":10,"nodeType":"353","messageId":"354","endLine":21,"endColumn":31},{"ruleId":"351","severity":1,"message":"404","line":22,"column":10,"nodeType":"353","messageId":"354","endLine":22,"endColumn":14},{"ruleId":"351","severity":1,"message":"412","line":29,"column":9,"nodeType":"353","messageId":"354","endLine":29,"endColumn":18},{"ruleId":"351","severity":1,"message":"447","line":106,"column":10,"nodeType":"353","messageId":"354","endLine":106,"endColumn":22},{"ruleId":"351","severity":1,"message":"448","line":106,"column":24,"nodeType":"353","messageId":"354","endLine":106,"endColumn":39},{"ruleId":"378","severity":1,"message":"379","line":108,"column":13,"nodeType":"380","endLine":115,"endColumn":4},{"ruleId":"360","severity":1,"message":"361","line":129,"column":23,"nodeType":"362","messageId":"359","endLine":129,"endColumn":25},{"ruleId":"351","severity":1,"message":"449","line":157,"column":23,"nodeType":"353","messageId":"354","endLine":157,"endColumn":30},{"ruleId":"351","severity":1,"message":"450","line":165,"column":12,"nodeType":"353","messageId":"354","endLine":165,"endColumn":22},{"ruleId":"351","severity":1,"message":"411","line":2,"column":18,"nodeType":"353","messageId":"354","endLine":2,"endColumn":28},{"ruleId":"351","severity":1,"message":"404","line":9,"column":3,"nodeType":"353","messageId":"354","endLine":9,"endColumn":7},{"ruleId":"351","severity":1,"message":"433","line":88,"column":15,"nodeType":"353","messageId":"354","endLine":88,"endColumn":19},{"ruleId":"360","severity":1,"message":"361","line":90,"column":25,"nodeType":"362","messageId":"359","endLine":90,"endColumn":27},{"ruleId":"351","severity":1,"message":"433","line":129,"column":15,"nodeType":"353","messageId":"354","endLine":129,"endColumn":19},{"ruleId":"360","severity":1,"message":"361","line":131,"column":25,"nodeType":"362","messageId":"359","endLine":131,"endColumn":27},{"ruleId":"351","severity":1,"message":"432","line":172,"column":13,"nodeType":"353","messageId":"354","endLine":172,"endColumn":17},{"ruleId":"351","severity":1,"message":"433","line":173,"column":13,"nodeType":"353","messageId":"354","endLine":173,"endColumn":17},{"ruleId":"360","severity":1,"message":"361","line":175,"column":23,"nodeType":"362","messageId":"359","endLine":175,"endColumn":25},{"ruleId":"351","severity":1,"message":"365","line":215,"column":11,"nodeType":"353","messageId":"354","endLine":215,"endColumn":16},{"ruleId":"351","severity":1,"message":"367","line":216,"column":11,"nodeType":"353","messageId":"354","endLine":216,"endColumn":19},"no-native-reassign",["451"],"no-negated-in-lhs",["452"],"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'styles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Alert' is defined but never used.","'Cookies' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Profile' is defined but never used.","'ProfileDetails' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Toolbar' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Input' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["453"],"'recordStatus' is assigned a value but never used.","'setRecordStatus' is assigned a value but never used.","'meetingData' is assigned a value but never used.","'meetingTopicIDs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomID' and 'user._id'. Either include them or remove the dependency array.",["454"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["455"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'meetings' is assigned a value but never used.","'cities' is assigned a value but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'notifications' is assigned a value but never used.","'response' is assigned a value but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'topicId'. Either include it or remove the dependency array.",["456"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'RouterLink' is defined but never used.","'useParams' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'setSelectionParticipants' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'member' and 'selectParticipats'. Either include them or remove the dependency array.",["457"],"React Hook useEffect has missing dependencies: 'selectedTopic' and 'topic'. Either include them or remove the dependency array.",["458"],"React Hook useEffect has a missing dependency: 'meetingId'. Either include it or remove the dependency array.",["459"],"'handleReset' is assigned a value but never used.","'Component' is defined but never used.","'MeetingListView' is defined but never used.","'events' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'create' is defined but never used.","'errorMessage' is assigned a value but never used.","'head' is assigned a value but never used.","'user' is assigned a value but never used.","'MeetingButtonRender' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Assign array to a variable before exporting as module default","'Async' is defined but never used.","'CompareArrowsOutlined' is defined but never used.","'navigate' is assigned a value but never used.","'selectParticipats' is assigned a value but never used.","'Avatar' is defined but never used.","'SettingsIcon' is defined but never used.","'AttendMeetingIcon' is defined but never used.","'staticInfo' is assigned a value but never used.","'meetingFiles' is assigned a value but never used.","'setMeetingFiles' is assigned a value but never used.","'message' is assigned a value but never used.","'handleExit' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},"Update the dependencies array to be: [props.peer]",{"range":"474","text":"475"},"Update the dependencies array to be: [roomID, user._id]",{"range":"476","text":"477"},"Update the dependencies array to be: [roomID]",{"range":"478","text":"479"},"Update the dependencies array to be: [topicId]",{"range":"480","text":"481"},"Update the dependencies array to be: [member, selectParticipats]",{"range":"482","text":"483"},"Update the dependencies array to be: [selectedTopic, topic]",{"range":"484","text":"485"},"Update the dependencies array to be: [meetingId]",{"range":"486","text":"487"},[1362,1364],"[props.peer]",[5442,5444],"[roomID, user._id]",[8961,8963],"[roomID]",[3636,3638],"[topicId]",[4596,4598],"[member, selectParticipats]",[5063,5065],"[selectedTopic, topic]",[8469,8471],"[meetingId]"]