[{"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\index.js":"1","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\App.js":"2","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\GlobalStyles.js":"4","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\routes.js":"5","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\index.js":"6","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js":"7","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js":"8","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\LoginView.js":"9","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\typography.js":"10","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\index.js":"11","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\index.js":"12","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\index.js":"13","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js":"14","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js":"15","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js":"16","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js":"17","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js":"18","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js":"19","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyMeeting\\index.js":"20","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyTopic\\index.js":"21","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js":"22","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\index.js":"23","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Page.js":"24","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\linearGradient.js":"25","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js":"26","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js":"27","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js":"28","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js":"29","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js":"30","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js":"31","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyTopic\\modifyTopicForm.js":"32","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyMeeting\\ModifyMeetingForm.js":"33","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Logo.js":"34","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js":"35","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js":"36","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js":"37","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js":"38","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\shadows.js":"39","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\topicList.js":"40","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js":"41","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js":"42","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"43","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"44","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\features\\userSlice.js":"45","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meetingHistory\\index.js":"46","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meetingHistory\\meetingHistoryList.js":"47","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\ForgotPassword.js":"48","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\timer.js":"49"},{"size":673,"mtime":1620251060952,"results":"50","hashOfConfig":"51"},{"size":759,"mtime":1620251060950,"results":"52","hashOfConfig":"51"},{"size":375,"mtime":1615306465169,"results":"53","hashOfConfig":"51"},{"size":709,"mtime":1615306465046,"results":"54","hashOfConfig":"51"},{"size":2748,"mtime":1620251060955,"results":"55","hashOfConfig":"51"},{"size":578,"mtime":1615306465184,"results":"56","hashOfConfig":"51"},{"size":10127,"mtime":1620251060959,"results":"57","hashOfConfig":"51"},{"size":1615,"mtime":1615306465317,"results":"58","hashOfConfig":"51"},{"size":6614,"mtime":1620251060958,"results":"59","hashOfConfig":"51"},{"size":579,"mtime":1615306465186,"results":"60","hashOfConfig":"51"},{"size":1032,"mtime":1615306465276,"results":"61","hashOfConfig":"51"},{"size":948,"mtime":1615306465300,"results":"62","hashOfConfig":"51"},{"size":739,"mtime":1615474604181,"results":"63","hashOfConfig":"51"},{"size":1050,"mtime":1615306465167,"results":"64","hashOfConfig":"51"},{"size":1401,"mtime":1615306465150,"results":"65","hashOfConfig":"51"},{"size":1010,"mtime":1620427275293,"results":"66","hashOfConfig":"51"},{"size":944,"mtime":1615306465314,"results":"67","hashOfConfig":"51"},{"size":696,"mtime":1615306465361,"results":"68","hashOfConfig":"51"},{"size":428,"mtime":1615806934468,"results":"69","hashOfConfig":"51"},{"size":1032,"mtime":1618947772117,"results":"70","hashOfConfig":"51"},{"size":988,"mtime":1620394385658,"results":"71","hashOfConfig":"51"},{"size":3090,"mtime":1620427091435,"results":"72","hashOfConfig":"51"},{"size":14046,"mtime":1620461523149,"results":"73","hashOfConfig":"51"},{"size":490,"mtime":1615306465050,"results":"74","hashOfConfig":"51"},{"size":388,"mtime":1615306465070,"results":"75","hashOfConfig":"51"},{"size":3519,"mtime":1620251060960,"results":"76","hashOfConfig":"51"},{"size":3245,"mtime":1615306465349,"results":"77","hashOfConfig":"51"},{"size":5949,"mtime":1620251060956,"results":"78","hashOfConfig":"51"},{"size":3560,"mtime":1617433681626,"results":"79","hashOfConfig":"51"},{"size":1830,"mtime":1617433681623,"results":"80","hashOfConfig":"51"},{"size":2460,"mtime":1620387448699,"results":"81","hashOfConfig":"51"},{"size":9736,"mtime":1620393058093,"results":"82","hashOfConfig":"51"},{"size":18046,"mtime":1620438263430,"results":"83","hashOfConfig":"51"},{"size":187,"mtime":1615306465048,"results":"84","hashOfConfig":"51"},{"size":2004,"mtime":1615306465345,"results":"85","hashOfConfig":"51"},{"size":5552,"mtime":1618055272474,"results":"86","hashOfConfig":"51"},{"size":10125,"mtime":1620445715205,"results":"87","hashOfConfig":"51"},{"size":755,"mtime":1615306465166,"results":"88","hashOfConfig":"51"},{"size":1645,"mtime":1615306465185,"results":"89","hashOfConfig":"51"},{"size":9711,"mtime":1620435840703,"results":"90","hashOfConfig":"51"},{"size":8758,"mtime":1620385157978,"results":"91","hashOfConfig":"51"},{"size":17048,"mtime":1620428038837,"results":"92","hashOfConfig":"51"},{"size":3829,"mtime":1620427516883,"results":"93","hashOfConfig":"51"},{"size":1722,"mtime":1615306465123,"results":"94","hashOfConfig":"51"},{"size":498,"mtime":1619549367393,"results":"95","hashOfConfig":"51"},{"size":781,"mtime":1619549367453,"results":"96","hashOfConfig":"51"},{"size":6189,"mtime":1620446873606,"results":"97","hashOfConfig":"51"},{"size":9767,"mtime":1620383100162,"results":"98","hashOfConfig":"51"},{"size":1039,"mtime":1620433092124,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1auxlmj",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\index.js",[],["211","212"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\App.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\GlobalStyles.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\routes.js",["213"],"import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport AccountView from 'src/views/account/AccountView';\r\nimport MeetingListView from 'src/views/meeting/MeetingListView';\r\nimport DashboardView from 'src/views/dashboard/DashboardView';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport NotFoundView from 'src/views/errors/NotFoundView';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport SettingsView from 'src/views/settings/SettingsView';\r\nimport CreateTopic from 'src/views/createTopic';\r\nimport CreateMeeting from 'src/views/createMeeting';\r\nimport TopicPool from 'src/views/topicPool';\r\nimport AttendMeetingView from 'src/views/attendMeeting/AttendMeetingtView';\r\nimport Room from 'src/views/attendMeeting/Room';\r\nimport ModifyMeeting from 'src/views/modifyMeeting';\r\nimport ModifyTopic from 'src/views/modifyTopic';\r\nimport MeetingHistoryList from 'src/views/meetingHistory';\r\nimport ForgotPassword from 'src/views/auth/ForgotPassword';\r\n//const user = this.state.user\r\nconst routes = (loggedIn) => [\r\n  {\r\n    path: 'app',\r\n    element: loggedIn ? <DashboardLayout /> : <Navigate to=\"/login\"/>,\r\n    children: [\r\n      { path: 'account', element: <AccountView /> },\r\n      { path: 'meetings', element: <MeetingListView /> },\r\n      { path: 'dashboard', element: <DashboardView /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: 'createTopic', element: <CreateTopic/> },\r\n      { path: 'createMeeting', element: <CreateMeeting/> },\r\n      { path: 'topics', element: <TopicPool/> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> },\r\n      { path: 'attendMeeting', element: <AttendMeetingView /> },\r\n      { path: 'room/:roomID', element: <Room /> },\r\n      { path: 'modifyMeeting/:meetingId', element: <ModifyMeeting /> },\r\n      { path: 'modifyTopic/:topicId', element: <ModifyTopic /> },\r\n      { path: 'meetingHistory', element: <MeetingHistoryList /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: !loggedIn ?  <MainLayout /> : <Navigate to=\"/app/dashboard\" />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n      { path: 'register', element: <RegisterView /> },\r\n      { path: 'forgotPassword', element: <ForgotPassword /> },\r\n      { path: '404', element: <NotFoundView /> },\r\n      { path: '/', element: <Navigate to=\"/Login\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: 'meetings',\r\n    element: loggedIn ? <MainLayout  /> : <Navigate to=\"/login\"/>,\r\n    children: [\r\n      { path: 'room/:roomID', element: <Room /> },\r\n    ]\r\n\r\n  }\r\n  \r\n];\r\n\r\nexport default routes;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js",["214","215","216"],"import React, {useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Snackbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport Image from 'src/imgs/meeting_register_img_2.jpg'; // Import using relative path\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst styles = {\r\n    root: {\r\n       \r\n    }\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    height: '100vh'\r\n  },\r\n  image:{\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: '100vh',\r\n    marginTop: '-24px',\r\n  }\r\n}));\r\n\r\nconst RegisterView = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n\r\n  //Alert Function \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n//Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email, password, firstName, lastName, companyName } = values;\r\n    var body = {\r\n      password: password,\r\n      email: email,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      companyName: companyName\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/signup\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        navigate('/login', { replace: true });\r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message)\r\n        setOpen(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n       \r\n        <Grid\r\n          container\r\n          spacing={0}\r\n        >\r\n            <CssBaseline />\r\n            <Grid\r\n            className={classes.image}\r\n          \r\n            lg={6}\r\n            md={2}\r\n            xl={6}\r\n            xs={0}\r\n          >\r\n            \r\n          </Grid>\r\n          <Grid\r\n         elevation={6} square\r\n            lg={6}\r\n            md={10}\r\n            xl={6}\r\n            xs={12}\r\n          >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              companyName: '',\r\n              policy: false\r\n            }}\r\n            onSubmit={handleSubmit}\r\n\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().min(8, 'Password must be at least 8 characters').required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                companyName: Yup.string().max(255).required('company name is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n          >\r\n            {props => {\r\n              const {\r\n              values,\r\n              touched,\r\n              errors,\r\n              isSubmitting,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.companyName && errors.companyName)}\r\n                  fullWidth\r\n                  helperText={touched.companyName && errors.companyName}\r\n                  label=\"Company Name\"\r\n                  margin=\"normal\"\r\n                  name=\"companyName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.companyName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    className={linearGradient().root}\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}}\r\n          </Formik>\r\n        </Container>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"Error\">\r\n            {errorMessage}  \r\n        </Alert>\r\n      </Snackbar>\r\n      </Box>\r\n      </Grid>\r\n      \r\n      </Grid>\r\n    \r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\LoginView.js",["217","218","219","220","221","222","223","224","225"],"import React, {useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Snackbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Cookies from 'js-cookie'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst LoginView = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n\r\n  //Alert Function \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n//Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email, password } = values;\r\n    var body = {\r\n      password: password,\r\n      email: email\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      credentials: 'include',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/login\";\r\n   \r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      const head = await response.headers\r\n      console.log( head)\r\n      const user = text.data\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n        localStorage.setItem('loggedIn', true)\r\n        navigate('/app/dashboard', { replace: true });\r\n        \r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message)\r\n        setOpen(true);    \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      \r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: ''\r\n      }}\r\n      onSubmit={handleSubmit}\r\n\r\n      //********Using Yup for validation********/\r\n\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n        password: Yup.string().max(255).required('Password is required')\r\n      })}\r\n    >\r\n      {props => {\r\n        const {\r\n          email,\r\n          password,\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <>\r\n            <form onSubmit={handleSubmit} noValidate>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Sign in\r\n                  </Typography>\r\n                  \r\n                </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Email Address\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n                //className={errors.email && touched.email && \"error\"}\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.password && errors.password)}\r\n                fullWidth\r\n                helperText={touched.password && errors.password}\r\n                label=\"Password\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n                variant=\"outlined\"\r\n              />\r\n              \r\n              <Box my={2}>\r\n                <Button \r\n                className={linearGradient().root}\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\" >\r\n                      Sign in now\r\n                </Button>\r\n              </Box>\r\n              <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n    \r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/forgotPassword\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Forgot your Password?\r\n                  </Link>\r\n                </Typography>\r\n            </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  </Container>  \r\n</Box>\r\n<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"Error\">\r\n            {errorMessage}  \r\n        </Alert>\r\n      </Snackbar>\r\n</Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\typography.js",["226"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js",["227","228"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js",["229","230","231"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst AttendMeeting = (props) => {\r\n  let navigate = useNavigate()\r\n  function create() {\r\n      const id = uuid();\r\n      navigate(`/app/room/${id}`, {id: id});\r\n  }\r\n\r\n  return (\r\n      <button onClick={create}>Create room</button>\r\n  );\r\n};\r\n\r\nexport default AttendMeeting;","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyMeeting\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyTopic\\index.js",["232"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js",["233","234"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\index.js",["235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Page.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\linearGradient.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js",["252","253"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\nmeetingName:'Budget Meeting-2',\r\nmeetingTopic:'Budget',\r\ndate:'22/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n  id: uuid(),\r\nmeetingName:'Budget Meeting-2',\r\nmeetingTopic:'Budget',\r\ndate:'22/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n  id: uuid(),\r\nmeetingName:'Budget Meeting-2',\r\nmeetingTopic:'Budget',\r\ndate:'22/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst UpcomingMeetings = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [meetings] = useState(data);\r\n  const [meeting,setMeeting]=useState([]);\r\n  useEffect(async () => {\r\n    const result = await axios(\r\n\r\n        \"http://localhost:81/meeting/getMeetings\",\r\n        {withCredentials: true}\r\n\r\n    );\r\n    setMeeting(result.data.data)\r\n  },[]);\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Upcoming Meetings\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Meeting Name\r\n                </TableCell>\r\n               \r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip\r\n                    enterDelay={300}\r\n                    title=\"Sort\"\r\n                  >\r\n                    <TableSortLabel\r\n                      active\r\n                      direction=\"desc\"\r\n                    >\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Time\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {meeting.slice(0,5).map((meeting) => (\r\n                <TableRow\r\n                  hover\r\n                  key={meeting._id}\r\n                >\r\n                  <TableCell>\r\n                    {meeting.title}\r\n                  </TableCell>\r\n                  \r\n                  <TableCell>\r\n                  {moment( meeting.date).format('DD MMM YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>                      \r\n                  {moment( meeting.date).format('LT')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n          href=\"meetings\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUpcomingMeetings.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UpcomingMeetings;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js",["254","255","256","257"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles,\r\n  Snackbar,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport * as Yup from 'yup';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Formik } from 'formik';\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [successMessage,setSuccessMessage]=useState(\"\");\r\n\r\n /*  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }; */\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  //Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit = async (values) => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    setErrorMessage(\"\");\r\n    ///setSuccessMessage(\"\")\r\n    console.log(\"tmp\")\r\n    console.log(values.password)\r\n    const {password} = values;\r\n    console.log(values.password)\r\n    //values.preventDefault()\r\n    var body = {\r\n      password: password\r\n    };\r\n    console.log(body.password)\r\n    const options = {\r\n      method: \"POST\",\r\n     credentials:\"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/updatePassword\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n          //console.log(\"success\")\r\n           setSuccessMessage(text.message);\r\n           setOpen(true);\r\n           \r\n      } else {\r\n        console.log(\"This is the error message \"+text.message);\r\n        setErrorMessage(text.message);\r\n        setOpen(true);\r\n      \r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    \r\n\r\n  };\r\n  return (\r\n    <Formik\r\n    initialValues={{\r\n      password: '',\r\n      confirmPassword: '',\r\n    }}\r\n /*    onSubmit={(e) => {\r\n      e.preventDefault();\r\n      handleSubmit();\r\n    }} */\r\n\r\n    //********Using Yup for validation********/\r\n  /*   validationSchema: Yup.object({\r\n      password: Yup.string().required('Password is required'),\r\n      passwordConfirmation: Yup.string()\r\n         .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n    }); */\r\n\r\n    validationSchema={Yup.object().shape({\r\n      password: Yup.string().min(8, 'Password must be at least 8 characters').required('password is required'),\r\n   /*    password:Yup.lazy(\r\n        value =>\r\n          !value\r\n            ? Yup.string()\r\n            : Yup.string()\r\n                .min(6, 'Password must be at least 6 characters')\r\n                .required('Password is required'),\r\n      ), */\r\n      confirmPassword: Yup.string().min(8, 'Password must be at least 8 characters').required('password is required').oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n      \r\n    })}\r\n  >\r\n  {props => {\r\n    const {\r\n      values,\r\n      touched,\r\n      errors,\r\n      isSubmitting,\r\n      handleChange,\r\n      handleBlur,\r\n    } = props;\r\n    return (\r\n      <>\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n            helperText={touched.confirmPassword && errors.confirmPassword}\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirmPassword\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            type=\"password\"\r\n            value={values.confirmPassword}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleSubmit(values);\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={isSubmitting}\r\n            /* onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleSubmit();\r\n            }} */\r\n            /* disabled={isSubmitting} */\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n    {!Object.keys(errorMessage).length == 0 ? \r\n     \r\n         (<Alert onClose={handleClose} severity=\"Error\">\r\n         {errorMessage}  \r\n     </Alert>)\r\n        :(<Alert onClose={handleClose} severity=\"success\">\r\n            {successMessage}  \r\n        </Alert>)}\r\n        \r\n        \r\n      </Snackbar>\r\n      </Card>\r\n    </form>\r\n    </>\r\n    );\r\n  }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Password;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js",["258"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst cities = [\r\n  {\r\n    value: 'ankara',\r\n    label: 'Ankara'\r\n  },\r\n  {\r\n    value: 'izmir',\r\n    label: 'Izmir'\r\n  },\r\n  {\r\n    value: 'istanbul',\r\n    label: 'Istanbul'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    city: '',\r\n    country: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Company\"\r\n                name=\"company\"\r\n                onChange={handleChange}\r\n                required\r\n                //value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              \r\n            </Grid>\r\n           \r\n          \r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js",["259"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyTopic\\modifyTopicForm.js",["260","261","262","263","264","265","266","267","268"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\modifyMeeting\\ModifyMeetingForm.js",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Logo.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js",["289","290","291","292","293"],"import React, { Component, useState } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Card, \r\n} from '@material-ui/core';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport MeetingListView from \".\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { useNavigate } from 'react-router-dom';\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    width: 500\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\n\r\nconst CalendarView = ({ className, meetings, ...rest }) => {\r\n  \r\n\r\nconst[events,setEvents]=useState([\r\n      {\r\n        start: moment().toDate(),\r\n        end: moment()\r\n          .add(0, \"days\")\r\n          .toDate(),\r\n        title: \"TBKmeet Meeting\"\r\n      }\r\n    ]);\r\n    const [open, setOpen] =useState(false);\r\n    const [eventState,setEventState]=useState( { start: moment().toDate(), end: moment().add(0, \"days\").toDate(), title: \"\", _id: \"\",\r\n    description:\"\", location: \"\", topic: \"\", members: \"\"})\r\n\r\n\r\n const handleClickOpen=() => {\r\n  setOpen(true);\r\n\r\n};\r\n const handleClose=() => {\r\n  setOpen(false);\r\n};\r\nlet navigate = useNavigate()\r\nfunction create() {\r\n    const id = uuid();\r\n    navigate(`/app/room/${id}`, {id: id});\r\n}\r\n    //const {meetings}= this.props.meetings;\r\n    // console.log(moment()\r\n    // .add(1, \"days\")\r\n    // .toDate())\r\n /*   for(let i=1;i<this.props.meetings.length-1;i++)\r\n  {\r\n    this.state.eventss[i].start=Date.parse(this.props.meetings[i].date);\r\n    this.state.eventss[i].end=Date.parse(this.props.meetings[i].date);\r\n    this.state.eventss[i].title=this.props.meetings[i].title;\r\n  }  */\r\n  const newEvents = meetings.map(event => ({\r\n    start:event.date,\r\n    end:event.date,\r\n    title: event.title,\r\n    id: event._id,\r\n    description: event.description,\r\n    topic: event.topic,\r\n    location: event.location,\r\n    members:event.members,\r\n    duration:event.duration,\r\n    isStarted:event.isStarted\r\n  }));\r\n  function MeetingButtonRender(status, meeting_id) {\r\n    //console.log(id)\r\n    if(status)\r\n    {\r\n      return (\r\n        \r\n                    <Button href=\"\" color=\"primary\" onClick={() => navigate(`/app/room/${meeting_id}`, {id: meeting_id})}>\r\n                      Attend Meeting\r\n                    </Button>\r\n        \r\n      )\r\n    }\r\n    else\r\n    {\r\n      return(\r\n      \r\n                  <Button href=\"\" color=\"primary\" onClick={() => navigate(`/app/room/${meeting_id}`, {id: meeting_id})}>\r\n                  Start Meeting </Button>\r\n      \r\n      )\r\n    }\r\n  }\r\n  console.log(eventState);\r\n    return (\r\n\r\n      <Card>\r\n      <div className=\"App\">\r\n      \r\n        <Calendar\r\n          localizer={localizer}\r\n          defaultDate={new Date()}\r\n          defaultView=\"month\"\r\n          events={newEvents}\r\n          views={['month']}\r\n          // onSelectEvent={()=>{\r\n          //   console.log(newEvents);\r\n          // }}\r\n          onSelectEvent={event => {\r\n            handleClickOpen()\r\n            setEventState( event);\r\n            }}\r\n          style={{ height: \"80vh\" , width:\"100%\"}}\r\n        />\r\n      </div>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n              Meeting Detail\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n              <p>Title: {eventState.title}</p>\r\n              <p>Description: {eventState.description}</p>\r\n              <p>Duration: {eventState.duration}</p>\r\n              <p>Date: {moment(eventState.start).format('DD MMM YYYY')}</p>\r\n              <p>Time: {moment(eventState.start).format('LT')}</p>\r\n              <p>Location: {eventState.location}</p>\r\n{/*               <p>Topics: {this.state.eventState.topic}</p>\r\n              <p>Participants: {this.state.eventState.members}</p> */}\r\n            </DialogContent>\r\n            <DialogActions>\r\n            {MeetingButtonRender(eventState.isStarted, eventState._id)}\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n      </Card>\r\n    );\r\n  \r\n};\r\n\r\n\r\n\r\n\r\nexport default CalendarView;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js",["294","295","296","297","298","299","300","301","302"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\shadows.js",["303"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\topicList.js",["304","305","306","307","308","309","310","311","312"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js",["313","314","315","316","317","318"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js",["319","320","321","322","323","324","325","326","327","328","329","330"],"import React,{useState, useEffect} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns'; //instal this version npm i @date-io/date-fns@1.3.13\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Formik } from 'formik';\r\nimport Async from \"react-async\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Select,\r\n  InputLabel ,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  makeStyles,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  FormControl,\r\n  Snackbar\r\n\r\n} from '@material-ui/core';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 300,\r\n  },\r\n  \r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    width: 600\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst topicColumns = [\r\n  \r\n  { field: 'title', headerName: 'Topic Title', width: 180},\r\n  { field: 'totalTime', headerName: 'Duration', width: 180 }\r\n  \r\n];\r\nconst columns = [\r\n  { field: 'firstName', headerName: 'First name', width: 120},\r\n  { field: 'lastName', headerName: 'Last name', width: 120 },\r\n  { field: 'email', headerName: 'Email', width: 220 }\r\n];\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n \r\nconst CreateMeetingForm = props => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openTopic, setOpenTopic] = React.useState(false);\r\n  const [selectParticipats, setSelectionParticipants] = React.useState([]);\r\n  let dt = new Date();\r\n  const minDate = dt.setDate(dt.getDate() );\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [successMessage,setSuccessMessage]=useState(\"\");\r\n  const[user,setUser]=useState([]);\r\n  const[member,setMember]=useState([]);\r\n  const[topic,setTopic]=useState([]);\r\n  const[selectedTopic,setSelectedTopic]=useState([]);\r\n  const[topicsArr,setTopicsArr]=useState([]);\r\n  const[participantsArr,setParticipantsArr]=useState([]);\r\n  const[selectionModelTopic,setSelectionModelTopic]=useState([]);\r\n  const[selectionModelParticipant,setSelectionModelParticipant]=useState([]);\r\n\r\n\r\n  useEffect(async () => {\r\n    const result = await axios(\r\n        \"http://localhost:81/meeting/getEmails\",\r\n        {withCredentials: true}\r\n    );\r\n    setUser(result.data.data)\r\n\r\n  },[]);\r\n  \r\n  useEffect(async () => {\r\n    const result = await axios(\r\n        \"http://localhost:81/topic/getTopic\",\r\n        {withCredentials: true}\r\n    );\r\n      setTopic(result.data.data)\r\n\r\n  },[]);\r\n\r\n      //function for displaying alert\r\n      function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n      }\r\n//Open Participants Dialog\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    \r\n  };\r\n  \r\n  const handleClickOpenTopic =()=>{\r\n    setOpenTopic(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseTopic = () => {\r\n    setOpenTopic(false);\r\n    console.log(topicsArr);\r\n    // console.log(selectionModelTopic);\r\n  };\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n /*  const addId=(data)=>{\r\n    var ln = data.length;\r\n    console.log(\"add id starts\")\r\n    for(var i=0; i<ln;i++)\r\n    {\r\n      console.log(i);\r\n      data[i].id=i;\r\n    }\r\n    return data;\r\n  } */\r\n  const SaveParticipants=()=>\r\n  {\r\n    setParticipantsArr(member);\r\n    setSelectionModelParticipant(member.map((r) => r.id));\r\n    console.log(participantsArr);\r\n   console.log(member);\r\n    handleClose();\r\n  }\r\n  const SaveTopics=()=>\r\n  {\r\n    setTopicsArr(selectedTopic);\r\n    setSelectionModelTopic(selectedTopic.map((r) => r.id));\r\n     console.log(selectionModelTopic)\r\n     console.log(topicsArr)\r\n    handleCloseTopic();\r\n    //console.log(calculateTotalDuration())\r\n    \r\n  }\r\n  const calculateTotalDuration=()=>{\r\n    var totalDuration=0;\r\n    topicsArr.map((val) => \r\n    totalDuration+=parseInt(val.totalTime)\r\n    );\r\n    console.log(totalDuration);\r\n    return totalDuration;\r\n  }\r\n  const clearForm=()=>{\r\n   setTopicsArr([]);\r\n   setSelectedDate(new Date());\r\n   setLocation(\"\");\r\n   setParticipantsArr([]);\r\n  }\r\n  //Function that handles the form submission\r\n  const handleSubmit = async (values,{resetForm}) => {\r\n    setErrorMessage(\"\");\r\n    const {title, description, duration} = values;\r\n    var participantsTmp=[];\r\n    var topicsTmp=[];\r\n    participantsArr.map((val)=>\r\n    participantsTmp.push(val._id)\r\n    );\r\n    topicsArr.map((val)=>\r\n    topicsTmp.push(val._id)\r\n    );\r\n    //console.log(topicsTmp);\r\n    console.log(participantsTmp);\r\n     if (!topicsTmp.length)\r\n    {\r\n      setErrorMessage(\"Please select at least one topic\");\r\n         setOpenAlert(true); \r\n    }\r\n    else if(!participantsTmp.length)\r\n    {\r\n         setErrorMessage(\"Please select at least one participant\");\r\n         setOpenAlert(true); \r\n    }\r\n     else if (location.length==0)\r\n    {\r\n      setErrorMessage(\"Please select a meeting location\");\r\n      setOpenAlert(true); \r\n      console.log((location));\r\n    } \r\n    else{\r\n    \r\n    var body = {\r\n      title: title,\r\n      description: description,\r\n      topic: topicsTmp,\r\n      members:participantsTmp,\r\n      date: selectedDate,\r\n      //time: selectedDate.toLocaleTimeString(),\r\n      location: location,\r\n      duration: duration.toString()\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/meeting/meetingSave\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        //console.log(\"success\")\r\n        setSuccessMessage(text.message);\r\n        setOpenAlert(true); \r\n        resetForm({});\r\n        clearForm();\r\n        setSelectionModelParticipant([]);\r\n        setSelectionModelTopic([]);\r\n  \r\n      } else {\r\n        console.log(text.message);\r\n         setErrorMessage(text.message);\r\n        setOpenAlert(true); \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n /*  console.log(selectedTime.toLocaleDateString());\r\n  console.log(selectedTime.toLocaleTimeString()); */\r\n  }  \r\n};\r\n\r\n  //update the location selection\r\n  const [location, setLocation] = React.useState('');\r\n  const updateLocation = (event) => {\r\n    setLocation(event.target.value);\r\n  }\r\n  //update date\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\nreturn (\r\n    \r\n<Container maxWidth={false}>\r\n  <Formik\r\n  initialValues={{\r\n    title: '',\r\n    topics: '',\r\n    description: '',\r\n    duration: '',\r\n    date: '',\r\n    location: ' '\r\n  }}\r\n  onSubmit={handleSubmit}\r\n\r\n  // Using Yup for validation\r\n\r\n  validationSchema={Yup.object().shape({\r\n    title: Yup.string().max(100).required('Title is required'),\r\n    description: Yup.string().max(255),\r\n    duration: Yup.string().required(\"Duration is required\").matches(/^\\d+$/, 'The field should have digits only').test(\r\n      \"DOB\",\r\n      \"Duration must be greater than total topic durations\",\r\n      value => {\r\n        return value >= calculateTotalDuration();\r\n      })\r\n      // location: Yup.string().ensure().required(\"Location is required\")\r\n  })}\r\n  >\r\n    {props => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleReset,\r\n        handleSubmit\r\n      } = props;\r\n      return (\r\n        <>\r\n        \r\n        <form onSubmit={handleSubmit} noValidate>\r\n          <Card>\r\n            <CardContent>\r\n              <CardHeader title=\"Create A Meeting\">\r\n              </CardHeader>\r\n          {/* </Card> */}\r\n\r\n          <Divider/>\r\n\r\n          {/* Meeting Title */}\r\n          <TextField\r\n                error={Boolean(touched.title && errors.title)}\r\n                fullWidth\r\n                helperText={touched.title && errors.title}\r\n                label=\"Title\"\r\n                margin=\"normal\"\r\n                name=\"title\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.title}\r\n                variant=\"outlined\"\r\n                \r\n              />\r\n        {/* Meeting Topic */}  \r\n      {/* Invite Topics Button */}\r\n       <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-start\"\r\n          onClick={handleClickOpenTopic}>\r\n            Select topic\r\n          </Button> \r\n      <Dialog onClose={handleCloseTopic} aria-labelledby=\"customized-dialog-title\" open={openTopic}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleCloseTopic}>\r\n          Select Topics\r\n        </DialogTitle>\r\n        <DialogContent dividers> \r\n             <div style={{ height: 400, width: '100%' }}> \r\n             {/* {console.log(topicsArr)} */}\r\n                <DataGrid \r\n                  \r\n                  rows={topic}\r\n                  columns={topicColumns}\r\n                  pageSize={5} \r\n                  checkboxSelection\r\n                  selectionModel={selectionModelTopic} \r\n                  onSelectionModelChange={(e) => {\r\n                     \r\n                     const selectedIDs = new Set(e.selectionModel);\r\n                     console.log(selectedTopic)\r\n                     setSelectedTopic(topic.filter((r) =>\r\n                       selectedIDs.has(r.id))\r\n                       \r\n                     )} }\r\n                  \r\n                />   \r\n                      \r\n                    \r\n  \r\n            </div>\r\n            \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={SaveTopics} color=\"primary\">\r\n            Save Topics\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    {/* </div>  */}\r\n\r\n\r\n        {/* Meeting Description */}\r\n        <TextField\r\n          error={Boolean(touched.description && errors.description)}\r\n          fullWidth\r\n          helperText={touched.description && errors.description}\r\n          label=\"Description\"\r\n          margin=\"normal\"\r\n          name=\"description\"\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          value={values.description}\r\n          variant=\"outlined\"\r\n          multiline\r\n          rows={3}\r\n        />\r\n\r\n\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"dd/MM/yyyy\"\r\n          margin=\"normal\"\r\n          minDate={minDate}\r\n          id=\"date-picker-inline\"\r\n          label=\"Meeting Date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <br></br>\r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Meeting Time\"\r\n          minDate={minDate}\r\n          value={selectedDate}\r\n          keyboardIcon={<ScheduleIcon />}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n        \r\n        {/* Meeting Duration */}\r\n        <TextField\r\n          error={Boolean(touched.duration && errors.duration)}\r\n          fullWidth\r\n          helperText={touched.duration && errors.duration}\r\n          label=\"Duration in minutes\"\r\n          margin=\"normal\"\r\n          name=\"duration\"\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          value={values.duration}\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        {/* Meeting Location */}\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"location-input-label\">Location</InputLabel>\r\n        <Select\r\n          labelId=\"topic-input-label\"\r\n          id=\"location-input\"\r\n          value={location}\r\n          onChange={updateLocation}\r\n          label=\"Topics\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          >\r\n            <MenuItem value=\"\"> <em>None</em></MenuItem>\r\n            <MenuItem value={1}>Meeting Room 1</MenuItem>\r\n            <MenuItem value={2}>Meeting Room 2</MenuItem>\r\n            <MenuItem value={3}>Meeting Room 3</MenuItem>\r\n            <MenuItem value={4}>Meeting Room 4</MenuItem>\r\n        </Select>\r\n        <br></br>\r\n        {/* Invite Participants Button */}\r\n        <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-start\"\r\n          onClick={handleClickOpen}>\r\n            Invite Participants\r\n          </Button>\r\n        </FormControl>\r\n\r\n        </CardContent>\r\n           \r\n        <Box\r\n          display=\"flex\"\r\n          flex=\"1\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          p={3}\r\n        >\r\n          \r\n     \r\n    <div>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Invite Participants\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n\r\n              <div style={{ height: 400, width: '100%' }}>\r\n            \r\n                <DataGrid \r\n                \r\n                 rows={user}\r\n                 columns={columns}\r\n                 pageSize={5} \r\n                 checkboxSelection \r\n                 selectionModel={selectionModelParticipant} \r\n                 onSelectionModelChange={(e) => {\r\n                    \r\n                    const selectedIDs = new Set(e.selectionModel);\r\n                    console.log(member)\r\n                    setMember(user.filter((r) =>\r\n                      selectedIDs.has(r.id))\r\n                      \r\n                    )} }            \r\n                      />  \r\n                      \r\n       \r\n  \r\n            </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={SaveParticipants} color=\"primary\">\r\n            Save Participants\r\n          </Button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n\r\n        {/* Cretae Meeting button */}\r\n          <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-end\"\r\n          disabled={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\">\r\n            Create Meeting\r\n          </Button>\r\n          </Box>\r\n\r\n        </Card>\r\n        </form>\r\n        </>\r\n      );\r\n    }}\r\n  \r\n  </Formik>\r\n\r\n     <Snackbar open={openAlert} autoHideDuration={6000} onClose={handleCloseAlert}>\r\n    {!Object.keys(errorMessage).length == 0 ? \r\n     \r\n         (<Alert onClose={handleCloseAlert} severity=\"Error\">\r\n         {errorMessage}  \r\n     </Alert>)\r\n        :(<Alert onClose={handleCloseAlert} severity=\"success\">\r\n            {successMessage}  \r\n        </Alert>)}\r\n        \r\n        \r\n      </Snackbar> \r\n</Container>\r\n\r\n  );\r\n};\r\n\r\nexport default CreateMeetingForm;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js",["331","332","333","334","335"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\features\\userSlice.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meetingHistory\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meetingHistory\\meetingHistoryList.js",["336","337","338","339","340","341","342","343","344"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\ForgotPassword.js",["345","346","347","348","349","350","351","352","353","354","355","356","357"],"import React, {useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Snackbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Cookies from 'js-cookie'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ForgotPassword = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [tokenState,setTokenState]= useState(\"\");\r\n  var [isClicked,setIsClicked]= useState(false);\r\n\r\n  //Alert Function \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  function validationHandle()\r\n  {\r\n    if(isClicked)\r\n    {\r\n      return(\r\n        Yup.object().shape({\r\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n          password: Yup.string().min(8, 'Password must be at least 8 characters').required('password is required'),\r\n          confirmPassword: Yup.string().min(8, 'Password must be at least 8 characters').required('password is required').oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        })\r\n      )\r\n    }\r\n    else{\r\n      return(Yup.object().shape({\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n      }))\r\n    }\r\n  }\r\n//Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n    const resetTokenClicked= async values =>{\r\n      const { email } = values;\r\n      var body = {\r\n        email: email\r\n      };\r\n      const options = {\r\n        method: \"POST\",\r\n        credentials: 'include',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n\r\n      };\r\n      const url = \"http://localhost:81/auth/resetTokenClicked\";\r\n     \r\n      try {\r\n        const response = await fetch(url, options);\r\n        const text = await response.json();\r\n        const head = await response.headers\r\n        console.log( head)\r\n        const user = text.data\r\n  \r\n        if (text.status == \"success\") {\r\n          console.log(\"success\")\r\n          console.log(text)\r\n          return true;\r\n          \r\n        } else {\r\n          console.log(text.message);\r\n            \r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const resetPassword= async values =>{\r\n      const { email,password } = values;\r\n      var body = {\r\n        email: email,\r\n        password:password\r\n      };\r\n      const options = {\r\n        method: \"POST\",\r\n        credentials: 'include',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n\r\n      };\r\n      const url = \"http://localhost:81/auth/newPassword\";\r\n      await setTokenState(resetTokenClicked);\r\n      if(tokenState){\r\n      try {\r\n        const response = await fetch(url, options);\r\n        const text = await response.json();\r\n        const head = await response.headers\r\n        console.log( head)\r\n        const user = text.data\r\n  \r\n        if (text.status == \"success\") {\r\n          console.log(\"success\")\r\n          console.log(text)\r\n          navigate('/login')\r\n          \r\n        } else {\r\n          console.log(text.message);\r\n          setErrorMessage(\"Password change failed\")\r\n          setOpen(true);    \r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n     }\r\n     else{\r\n      setErrorMessage(\"Please verify from your email\")\r\n      setOpen(true);  \r\n     }\r\n    }\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email } = values;\r\n    var body = {\r\n      email: email\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      credentials: 'include',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/passwordreset\";\r\n   \r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      const head = await response.headers\r\n      //console.log( head)\r\n      const user = text.data\r\n\r\n      if (text.status == \"success\") {\r\n       // console.log(\"success\")\r\n    \r\n        \r\n      } else {\r\n        //console.log(text.message);\r\n        setErrorMessage(text.message)\r\n        setOpen(true);    \r\n      }\r\n    } catch (error) {\r\n     // console.error(error);\r\n    }\r\n    setIsClicked(true);\r\n    console.log(isClicked)\r\n  };\r\n \r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      \r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: ''\r\n      }}\r\n      //********Using Yup for validation********/\r\n      onSubmit={resetPassword}\r\n      validationSchema={validationHandle()}\r\n    >\r\n      {props => {\r\n        const {\r\n          email,\r\n          password,\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n        } = props;\r\n        return (\r\n          <>\r\n            <form onSubmit={handleSubmit} noValidate>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Forgot Password\r\n                  </Typography>\r\n                  \r\n                </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Email Address\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n                //className={errors.email && touched.email && \"error\"}\r\n              />\r\n              \r\n              {(() => {\r\n        if (isClicked) {\r\n          return (\r\n            <TextField\r\n            fullWidth\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          )\r\n           }\r\n      })()}\r\n              \r\n                \r\n                 \r\n                {(() => {\r\n        if (isClicked) {\r\n          return (\r\n            <TextField\r\n                   fullWidth\r\n                   error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                   helperText={touched.confirmPassword && errors.confirmPassword}\r\n                   label=\"Confirm password\"\r\n                   margin=\"normal\"\r\n                   name=\"confirmPassword\"\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   type=\"password\"\r\n                   value={values.confirmPassword}\r\n                   variant=\"outlined\"\r\n                 />\r\n          )\r\n           }\r\n      })()} \r\n              <Box my={2}>\r\n                {isClicked\r\n                   ?<Button \r\n                   className={linearGradient().root}\r\n                       disabled={isSubmitting}\r\n                       fullWidth\r\n                       /* type=\"submit\" */\r\n                       size=\"large\"\r\n                       onClick={()=>{resetPassword(values)}}\r\n                       variant=\"contained\" >\r\n                         Reset Password\r\n                   </Button> \r\n                   : <Button \r\n                   className={linearGradient().root}\r\n                       disabled={isSubmitting}\r\n                       fullWidth\r\n                       size=\"large\"\r\n                       onClick={()=>{handleSubmit(values)}}\r\n                       variant=\"contained\" >\r\n                         Send Password Reset Request\r\n                   </Button>\r\n                }                        \r\n              </Box>\r\n            </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  </Container>  \r\n</Box>\r\n<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"Error\">\r\n            {errorMessage}  \r\n        </Alert>\r\n      </Snackbar>\r\n</Page>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\timer.js",[],{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":2,"column":20,"nodeType":"364","messageId":"365","endLine":2,"endColumn":26},{"ruleId":"362","severity":1,"message":"366","line":24,"column":7,"nodeType":"364","messageId":"365","endLine":24,"endColumn":13},{"ruleId":"367","severity":1,"message":"368","line":35,"column":5,"nodeType":"369","messageId":"370","endLine":35,"endColumn":11},{"ruleId":"371","severity":1,"message":"372","line":90,"column":23,"nodeType":"373","messageId":"370","endLine":90,"endColumn":25},{"ruleId":"362","severity":1,"message":"374","line":18,"column":10,"nodeType":"364","messageId":"365","endLine":18,"endColumn":15},{"ruleId":"362","severity":1,"message":"375","line":19,"column":8,"nodeType":"364","messageId":"365","endLine":19,"endColumn":15},{"ruleId":"362","severity":1,"message":"376","line":33,"column":10,"nodeType":"364","messageId":"365","endLine":33,"endColumn":15},{"ruleId":"362","severity":1,"message":"377","line":33,"column":17,"nodeType":"364","messageId":"365","endLine":33,"endColumn":25},{"ruleId":"362","severity":1,"message":"378","line":34,"column":10,"nodeType":"364","messageId":"365","endLine":34,"endColumn":18},{"ruleId":"362","severity":1,"message":"379","line":34,"column":20,"nodeType":"364","messageId":"365","endLine":34,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":77,"column":23,"nodeType":"373","messageId":"370","endLine":77,"endColumn":25},{"ruleId":"362","severity":1,"message":"376","line":124,"column":11,"nodeType":"364","messageId":"365","endLine":124,"endColumn":16},{"ruleId":"362","severity":1,"message":"378","line":125,"column":11,"nodeType":"364","messageId":"365","endLine":125,"endColumn":19},{"ruleId":"380","severity":1,"message":"381","line":1,"column":1,"nodeType":"382","endLine":35,"endColumn":3},{"ruleId":"362","severity":1,"message":"383","line":8,"column":8,"nodeType":"364","messageId":"365","endLine":8,"endColumn":15},{"ruleId":"362","severity":1,"message":"384","line":9,"column":8,"nodeType":"364","messageId":"365","endLine":9,"endColumn":22},{"ruleId":"362","severity":1,"message":"385","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"386","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"387","line":1,"column":38,"nodeType":"364","messageId":"365","endLine":1,"endColumn":44},{"ruleId":"362","severity":1,"message":"388","line":9,"column":10,"nodeType":"364","messageId":"365","endLine":9,"endColumn":14},{"ruleId":"362","severity":1,"message":"389","line":17,"column":8,"nodeType":"364","messageId":"365","endLine":17,"endColumn":15},{"ruleId":"390","severity":1,"message":"391","line":43,"column":17,"nodeType":"392","endLine":49,"endColumn":8},{"ruleId":"362","severity":1,"message":"393","line":4,"column":8,"nodeType":"364","messageId":"365","endLine":4,"endColumn":22},{"ruleId":"362","severity":1,"message":"394","line":10,"column":10,"nodeType":"364","messageId":"365","endLine":10,"endColumn":12},{"ruleId":"362","severity":1,"message":"395","line":11,"column":17,"nodeType":"364","messageId":"365","endLine":11,"endColumn":22},{"ruleId":"362","severity":1,"message":"396","line":11,"column":28,"nodeType":"364","messageId":"365","endLine":11,"endColumn":31},{"ruleId":"362","severity":1,"message":"397","line":18,"column":8,"nodeType":"364","messageId":"365","endLine":18,"endColumn":29},{"ruleId":"362","severity":1,"message":"398","line":20,"column":8,"nodeType":"364","messageId":"365","endLine":20,"endColumn":17},{"ruleId":"362","severity":1,"message":"399","line":22,"column":8,"nodeType":"364","messageId":"365","endLine":22,"endColumn":19},{"ruleId":"362","severity":1,"message":"400","line":26,"column":8,"nodeType":"364","messageId":"365","endLine":26,"endColumn":16},{"ruleId":"390","severity":1,"message":"401","line":50,"column":8,"nodeType":"402","endLine":50,"endColumn":10,"suggestions":"403"},{"ruleId":"362","severity":1,"message":"404","line":127,"column":12,"nodeType":"364","messageId":"365","endLine":127,"endColumn":24},{"ruleId":"362","severity":1,"message":"405","line":127,"column":25,"nodeType":"364","messageId":"365","endLine":127,"endColumn":40},{"ruleId":"362","severity":1,"message":"406","line":128,"column":12,"nodeType":"364","messageId":"365","endLine":128,"endColumn":23},{"ruleId":"362","severity":1,"message":"407","line":141,"column":12,"nodeType":"364","messageId":"365","endLine":141,"endColumn":27},{"ruleId":"390","severity":1,"message":"391","line":197,"column":17,"nodeType":"392","endLine":208,"endColumn":8},{"ruleId":"390","severity":1,"message":"408","line":208,"column":10,"nodeType":"402","endLine":208,"endColumn":12,"suggestions":"409"},{"ruleId":"390","severity":1,"message":"410","line":321,"column":8,"nodeType":"402","endLine":321,"endColumn":10,"suggestions":"411"},{"ruleId":"412","severity":1,"message":"413","line":413,"column":36,"nodeType":"414","messageId":"415","endLine":413,"endColumn":37},{"ruleId":"362","severity":1,"message":"416","line":61,"column":10,"nodeType":"364","messageId":"365","endLine":61,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":63,"column":13,"nodeType":"392","endLine":71,"endColumn":4},{"ruleId":"362","severity":1,"message":"417","line":2,"column":8,"nodeType":"364","messageId":"365","endLine":2,"endColumn":17},{"ruleId":"362","severity":1,"message":"418","line":14,"column":3,"nodeType":"364","messageId":"365","endLine":14,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":74,"column":23,"nodeType":"373","messageId":"370","endLine":74,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":198,"column":40,"nodeType":"373","messageId":"370","endLine":198,"endColumn":42},{"ruleId":"362","severity":1,"message":"419","line":16,"column":7,"nodeType":"364","messageId":"365","endLine":16,"endColumn":13},{"ruleId":"362","severity":1,"message":"420","line":43,"column":15,"nodeType":"364","messageId":"365","endLine":43,"endColumn":23},{"ruleId":"362","severity":1,"message":"388","line":2,"column":10,"nodeType":"364","messageId":"365","endLine":2,"endColumn":14},{"ruleId":"362","severity":1,"message":"421","line":2,"column":41,"nodeType":"364","messageId":"365","endLine":2,"endColumn":51},{"ruleId":"362","severity":1,"message":"422","line":3,"column":10,"nodeType":"364","messageId":"365","endLine":3,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":82,"column":40,"nodeType":"373","messageId":"370","endLine":82,"endColumn":42},{"ruleId":"371","severity":1,"message":"372","line":121,"column":23,"nodeType":"373","messageId":"370","endLine":121,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":144,"column":13,"nodeType":"392","endLine":153,"endColumn":4},{"ruleId":"390","severity":1,"message":"423","line":153,"column":5,"nodeType":"402","endLine":153,"endColumn":7,"suggestions":"424"},{"ruleId":"425","severity":1,"message":"426","line":301,"column":13,"nodeType":"427","endLine":301,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":314,"column":40,"nodeType":"373","messageId":"370","endLine":314,"endColumn":42},{"ruleId":"362","severity":1,"message":"428","line":2,"column":18,"nodeType":"364","messageId":"365","endLine":2,"endColumn":28},{"ruleId":"362","severity":1,"message":"429","line":2,"column":43,"nodeType":"364","messageId":"365","endLine":2,"endColumn":52},{"ruleId":"362","severity":1,"message":"430","line":12,"column":8,"nodeType":"364","messageId":"365","endLine":12,"endColumn":13},{"ruleId":"362","severity":1,"message":"431","line":114,"column":10,"nodeType":"364","messageId":"365","endLine":114,"endColumn":15},{"ruleId":"362","severity":1,"message":"432","line":114,"column":17,"nodeType":"364","messageId":"365","endLine":114,"endColumn":25},{"ruleId":"362","severity":1,"message":"433","line":117,"column":29,"nodeType":"364","messageId":"365","endLine":117,"endColumn":53},{"ruleId":"390","severity":1,"message":"391","line":134,"column":13,"nodeType":"392","endLine":150,"endColumn":4},{"ruleId":"434","severity":1,"message":"435","line":141,"column":23,"nodeType":"392","messageId":"436","endLine":141,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":145,"column":18,"nodeType":"373","messageId":"370","endLine":145,"endColumn":20},{"ruleId":"390","severity":1,"message":"437","line":150,"column":5,"nodeType":"402","endLine":150,"endColumn":7,"suggestions":"438"},{"ruleId":"390","severity":1,"message":"391","line":152,"column":13,"nodeType":"392","endLine":170,"endColumn":4},{"ruleId":"371","severity":1,"message":"372","line":163,"column":18,"nodeType":"373","messageId":"370","endLine":163,"endColumn":20},{"ruleId":"390","severity":1,"message":"439","line":170,"column":5,"nodeType":"402","endLine":170,"endColumn":7,"suggestions":"440"},{"ruleId":"371","severity":1,"message":"372","line":239,"column":30,"nodeType":"373","messageId":"370","endLine":239,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":271,"column":23,"nodeType":"373","messageId":"370","endLine":271,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":291,"column":11,"nodeType":"392","endLine":305,"endColumn":2},{"ruleId":"390","severity":1,"message":"441","line":305,"column":3,"nodeType":"402","endLine":305,"endColumn":5,"suggestions":"442"},{"ruleId":"362","severity":1,"message":"443","line":369,"column":9,"nodeType":"364","messageId":"365","endLine":369,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":599,"column":13,"nodeType":"427","endLine":599,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":613,"column":40,"nodeType":"373","messageId":"370","endLine":613,"endColumn":42},{"ruleId":"362","severity":1,"message":"444","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"445","line":8,"column":8,"nodeType":"364","messageId":"365","endLine":8,"endColumn":23},{"ruleId":"362","severity":1,"message":"446","line":68,"column":7,"nodeType":"364","messageId":"365","endLine":68,"endColumn":13},{"ruleId":"362","severity":1,"message":"447","line":68,"column":14,"nodeType":"364","messageId":"365","endLine":68,"endColumn":23},{"ruleId":"362","severity":1,"message":"448","line":90,"column":10,"nodeType":"364","messageId":"365","endLine":90,"endColumn":16},{"ruleId":"362","severity":1,"message":"448","line":89,"column":12,"nodeType":"364","messageId":"365","endLine":89,"endColumn":18},{"ruleId":"362","severity":1,"message":"449","line":99,"column":8,"nodeType":"364","messageId":"365","endLine":99,"endColumn":20},{"ruleId":"362","severity":1,"message":"450","line":122,"column":13,"nodeType":"364","messageId":"365","endLine":122,"endColumn":17},{"ruleId":"362","severity":1,"message":"451","line":124,"column":13,"nodeType":"364","messageId":"365","endLine":124,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":126,"column":23,"nodeType":"373","messageId":"370","endLine":126,"endColumn":25},{"ruleId":"362","severity":1,"message":"452","line":141,"column":12,"nodeType":"364","messageId":"365","endLine":141,"endColumn":31},{"ruleId":"453","severity":1,"message":"454","line":207,"column":25,"nodeType":"455","endLine":207,"endColumn":28},{"ruleId":"371","severity":1,"message":"372","line":227,"column":33,"nodeType":"373","messageId":"370","endLine":227,"endColumn":35},{"ruleId":"371","severity":1,"message":"372","line":242,"column":33,"nodeType":"373","messageId":"370","endLine":242,"endColumn":35},{"ruleId":"380","severity":1,"message":"456","line":1,"column":1,"nodeType":"382","endLine":27,"endColumn":3},{"ruleId":"362","severity":1,"message":"430","line":19,"column":8,"nodeType":"364","messageId":"365","endLine":19,"endColumn":13},{"ruleId":"362","severity":1,"message":"457","line":20,"column":10,"nodeType":"364","messageId":"365","endLine":20,"endColumn":31},{"ruleId":"362","severity":1,"message":"449","line":100,"column":8,"nodeType":"364","messageId":"365","endLine":100,"endColumn":20},{"ruleId":"390","severity":1,"message":"391","line":107,"column":13,"nodeType":"392","endLine":114,"endColumn":4},{"ruleId":"362","severity":1,"message":"450","line":138,"column":13,"nodeType":"364","messageId":"365","endLine":138,"endColumn":17},{"ruleId":"362","severity":1,"message":"451","line":140,"column":13,"nodeType":"364","messageId":"365","endLine":140,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":142,"column":23,"nodeType":"373","messageId":"370","endLine":142,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":225,"column":33,"nodeType":"373","messageId":"370","endLine":225,"endColumn":35},{"ruleId":"371","severity":1,"message":"372","line":240,"column":33,"nodeType":"373","messageId":"370","endLine":240,"endColumn":35},{"ruleId":"362","severity":1,"message":"428","line":2,"column":18,"nodeType":"364","messageId":"365","endLine":2,"endColumn":28},{"ruleId":"362","severity":1,"message":"458","line":44,"column":9,"nodeType":"364","messageId":"365","endLine":44,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":77,"column":40,"nodeType":"373","messageId":"370","endLine":77,"endColumn":42},{"ruleId":"371","severity":1,"message":"372","line":116,"column":23,"nodeType":"373","messageId":"370","endLine":116,"endColumn":25},{"ruleId":"425","severity":1,"message":"426","line":275,"column":13,"nodeType":"427","endLine":275,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":288,"column":40,"nodeType":"373","messageId":"370","endLine":288,"endColumn":42},{"ruleId":"362","severity":1,"message":"428","line":2,"column":18,"nodeType":"364","messageId":"365","endLine":2,"endColumn":28},{"ruleId":"362","severity":1,"message":"459","line":2,"column":30,"nodeType":"364","messageId":"365","endLine":2,"endColumn":41},{"ruleId":"362","severity":1,"message":"430","line":12,"column":8,"nodeType":"364","messageId":"365","endLine":12,"endColumn":13},{"ruleId":"362","severity":1,"message":"460","line":114,"column":10,"nodeType":"364","messageId":"365","endLine":114,"endColumn":27},{"ruleId":"362","severity":1,"message":"433","line":114,"column":29,"nodeType":"364","messageId":"365","endLine":114,"endColumn":53},{"ruleId":"390","severity":1,"message":"391","line":131,"column":13,"nodeType":"392","endLine":138,"endColumn":4},{"ruleId":"390","severity":1,"message":"391","line":140,"column":13,"nodeType":"392","endLine":147,"endColumn":4},{"ruleId":"371","severity":1,"message":"372","line":242,"column":30,"nodeType":"373","messageId":"370","endLine":242,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":275,"column":23,"nodeType":"373","messageId":"370","endLine":275,"endColumn":25},{"ruleId":"362","severity":1,"message":"443","line":343,"column":9,"nodeType":"364","messageId":"365","endLine":343,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":570,"column":13,"nodeType":"427","endLine":570,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":584,"column":40,"nodeType":"373","messageId":"370","endLine":584,"endColumn":42},{"ruleId":"362","severity":1,"message":"428","line":2,"column":18,"nodeType":"364","messageId":"365","endLine":2,"endColumn":28},{"ruleId":"362","severity":1,"message":"461","line":5,"column":3,"nodeType":"364","messageId":"365","endLine":5,"endColumn":9},{"ruleId":"362","severity":1,"message":"462","line":16,"column":15,"nodeType":"364","messageId":"365","endLine":16,"endColumn":27},{"ruleId":"362","severity":1,"message":"463","line":22,"column":16,"nodeType":"364","messageId":"365","endLine":22,"endColumn":33},{"ruleId":"362","severity":1,"message":"464","line":28,"column":7,"nodeType":"364","messageId":"365","endLine":28,"endColumn":17},{"ruleId":"362","severity":1,"message":"430","line":20,"column":8,"nodeType":"364","messageId":"365","endLine":20,"endColumn":13},{"ruleId":"362","severity":1,"message":"457","line":21,"column":10,"nodeType":"364","messageId":"365","endLine":21,"endColumn":31},{"ruleId":"362","severity":1,"message":"388","line":22,"column":10,"nodeType":"364","messageId":"365","endLine":22,"endColumn":14},{"ruleId":"362","severity":1,"message":"429","line":27,"column":9,"nodeType":"364","messageId":"365","endLine":27,"endColumn":18},{"ruleId":"362","severity":1,"message":"465","line":59,"column":10,"nodeType":"364","messageId":"365","endLine":59,"endColumn":22},{"ruleId":"390","severity":1,"message":"391","line":61,"column":13,"nodeType":"392","endLine":68,"endColumn":4},{"ruleId":"390","severity":1,"message":"391","line":70,"column":13,"nodeType":"392","endLine":77,"endColumn":4},{"ruleId":"362","severity":1,"message":"466","line":93,"column":23,"nodeType":"364","messageId":"365","endLine":93,"endColumn":30},{"ruleId":"362","severity":1,"message":"467","line":101,"column":12,"nodeType":"364","messageId":"365","endLine":101,"endColumn":22},{"ruleId":"362","severity":1,"message":"428","line":2,"column":18,"nodeType":"364","messageId":"365","endLine":2,"endColumn":28},{"ruleId":"362","severity":1,"message":"388","line":9,"column":3,"nodeType":"364","messageId":"365","endLine":9,"endColumn":7},{"ruleId":"362","severity":1,"message":"374","line":18,"column":10,"nodeType":"364","messageId":"365","endLine":18,"endColumn":15},{"ruleId":"362","severity":1,"message":"375","line":19,"column":8,"nodeType":"364","messageId":"365","endLine":19,"endColumn":15},{"ruleId":"362","severity":1,"message":"451","line":90,"column":15,"nodeType":"364","messageId":"365","endLine":90,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":92,"column":25,"nodeType":"373","messageId":"370","endLine":92,"endColumn":27},{"ruleId":"362","severity":1,"message":"451","line":131,"column":15,"nodeType":"364","messageId":"365","endLine":131,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":133,"column":25,"nodeType":"373","messageId":"370","endLine":133,"endColumn":27},{"ruleId":"362","severity":1,"message":"450","line":174,"column":13,"nodeType":"364","messageId":"365","endLine":174,"endColumn":17},{"ruleId":"362","severity":1,"message":"451","line":176,"column":13,"nodeType":"364","messageId":"365","endLine":176,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":178,"column":23,"nodeType":"373","messageId":"370","endLine":178,"endColumn":25},{"ruleId":"362","severity":1,"message":"376","line":220,"column":11,"nodeType":"364","messageId":"365","endLine":220,"endColumn":16},{"ruleId":"362","severity":1,"message":"378","line":221,"column":11,"nodeType":"364","messageId":"365","endLine":221,"endColumn":19},"no-native-reassign",["468"],"no-negated-in-lhs",["469"],"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'styles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Alert' is defined but never used.","'Cookies' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Profile' is defined but never used.","'ProfileDetails' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'Toolbar' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'linearGradient' is defined but never used.","'id' is defined but never used.","'Input' is defined but never used.","'Box' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","'Countdown' is defined but never used.","'CardActions' is defined but never used.","'ChatIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["470"],"'recordStatus' is assigned a value but never used.","'setRecordStatus' is assigned a value but never used.","'meetingData' is assigned a value but never used.","'meetingTopicIDs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomID' and 'user._id'. Either include them or remove the dependency array.",["471"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["472"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'meetings' is assigned a value but never used.","'PropTypes' is defined but never used.","'FormControl' is defined but never used.","'cities' is assigned a value but never used.","'response' is assigned a value but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'topicId'. Either include it or remove the dependency array.",["473"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'RouterLink' is defined but never used.","'useParams' is defined but never used.","'Async' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'setSelectionParticipants' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'member' and 'selectParticipats'. Either include them or remove the dependency array.",["474"],"React Hook useEffect has missing dependencies: 'selectedTopic' and 'topic'. Either include them or remove the dependency array.",["475"],"React Hook useEffect has a missing dependency: 'meetingId'. Either include it or remove the dependency array.",["476"],"'handleReset' is assigned a value but never used.","'Component' is defined but never used.","'MeetingListView' is defined but never used.","'events' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'create' is defined but never used.","'errorMessage' is assigned a value but never used.","'head' is assigned a value but never used.","'user' is assigned a value but never used.","'MeetingButtonRender' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Assign array to a variable before exporting as module default","'CompareArrowsOutlined' is defined but never used.","'navigate' is assigned a value but never used.","'useNavigate' is defined but never used.","'selectParticipats' is assigned a value but never used.","'Avatar' is defined but never used.","'SettingsIcon' is defined but never used.","'AttendMeetingIcon' is defined but never used.","'staticInfo' is assigned a value but never used.","'meetingFiles' is assigned a value but never used.","'message' is assigned a value but never used.","'handleExit' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},"Update the dependencies array to be: [props.peer]",{"range":"491","text":"492"},"Update the dependencies array to be: [roomID, user._id]",{"range":"493","text":"494"},"Update the dependencies array to be: [roomID]",{"range":"495","text":"496"},"Update the dependencies array to be: [topicId]",{"range":"497","text":"498"},"Update the dependencies array to be: [member, selectParticipats]",{"range":"499","text":"500"},"Update the dependencies array to be: [selectedTopic, topic]",{"range":"501","text":"502"},"Update the dependencies array to be: [meetingId]",{"range":"503","text":"504"},[1851,1853],"[props.peer]",[5922,5924],"[roomID, user._id]",[9424,9426],"[roomID]",[4021,4023],"[topicId]",[4629,4631],"[member, selectParticipats]",[5160,5162],"[selectedTopic, topic]",[8660,8662],"[meetingId]"]