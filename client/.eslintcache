<<<<<<< Updated upstream
[{"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\index.js":"1","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\App.js":"3","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\routes.js":"4","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\GlobalStyles.js":"5","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\index.js":"6","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\LoginView.js":"7","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js":"8","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js":"9","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\typography.js":"10","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\index.js":"11","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\index.js":"12","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\index.js":"13","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js":"14","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js":"15","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js":"16","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js":"17","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js":"18","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js":"19","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js":"20","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\linearGradient.js":"21","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\index.js":"22","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Page.js":"23","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js":"24","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js":"25","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js":"26","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\data.js":"27","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js":"28","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js":"29","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js":"30","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js":"31","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js":"32","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js":"33","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Logo.js":"34","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js":"35","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\topicList.js":"36","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js":"37","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\shadows.js":"38","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js":"39","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"40","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"41"},{"size":669,"mtime":1615306465120,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1615306465169,"results":"44","hashOfConfig":"43"},{"size":526,"mtime":1615306465043,"results":"45","hashOfConfig":"43"},{"size":2079,"mtime":1617312453128,"results":"46","hashOfConfig":"43"},{"size":709,"mtime":1615306465046,"results":"47","hashOfConfig":"43"},{"size":578,"mtime":1615306465184,"results":"48","hashOfConfig":"43"},{"size":5813,"mtime":1615474604154,"results":"49","hashOfConfig":"43"},{"size":1615,"mtime":1615306465317,"results":"50","hashOfConfig":"43"},{"size":10087,"mtime":1615474604161,"results":"51","hashOfConfig":"43"},{"size":579,"mtime":1615306465186,"results":"52","hashOfConfig":"43"},{"size":948,"mtime":1615306465300,"results":"53","hashOfConfig":"43"},{"size":739,"mtime":1615474604181,"results":"54","hashOfConfig":"43"},{"size":1032,"mtime":1615306465276,"results":"55","hashOfConfig":"43"},{"size":1050,"mtime":1615306465167,"results":"56","hashOfConfig":"43"},{"size":1401,"mtime":1615306465150,"results":"57","hashOfConfig":"43"},{"size":696,"mtime":1615306465361,"results":"58","hashOfConfig":"43"},{"size":3485,"mtime":1615806156608,"results":"59","hashOfConfig":"43"},{"size":1438,"mtime":1615306465209,"results":"60","hashOfConfig":"43"},{"size":944,"mtime":1615306465314,"results":"61","hashOfConfig":"43"},{"size":428,"mtime":1615806934468,"results":"62","hashOfConfig":"43"},{"size":388,"mtime":1615306465070,"results":"63","hashOfConfig":"43"},{"size":4160,"mtime":1617733574375,"results":"64","hashOfConfig":"43"},{"size":490,"mtime":1615306465050,"results":"65","hashOfConfig":"43"},{"size":1853,"mtime":1615306465188,"results":"66","hashOfConfig":"43"},{"size":3317,"mtime":1617433681638,"results":"67","hashOfConfig":"43"},{"size":3560,"mtime":1617433681626,"results":"68","hashOfConfig":"43"},{"size":2710,"mtime":1615306465346,"results":"69","hashOfConfig":"43"},{"size":1830,"mtime":1617433681623,"results":"70","hashOfConfig":"43"},{"size":2004,"mtime":1615306465345,"results":"71","hashOfConfig":"43"},{"size":7143,"mtime":1617405404916,"results":"72","hashOfConfig":"43"},{"size":3245,"mtime":1615306465349,"results":"73","hashOfConfig":"43"},{"size":1706,"mtime":1615306465150,"results":"74","hashOfConfig":"43"},{"size":4825,"mtime":1617650641284,"results":"75","hashOfConfig":"43"},{"size":187,"mtime":1615306465048,"results":"76","hashOfConfig":"43"},{"size":755,"mtime":1615306465166,"results":"77","hashOfConfig":"43"},{"size":4469,"mtime":1615806295036,"results":"78","hashOfConfig":"43"},{"size":8727,"mtime":1617433681635,"results":"79","hashOfConfig":"43"},{"size":1645,"mtime":1615306465185,"results":"80","hashOfConfig":"43"},{"size":17587,"mtime":1617433681632,"results":"81","hashOfConfig":"43"},{"size":3957,"mtime":1615474604140,"results":"82","hashOfConfig":"43"},{"size":1722,"mtime":1615306465123,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1auxlmj",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\App.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\routes.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\GlobalStyles.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\LoginView.js",["166","167"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js",["168","169","170"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\typography.js",["171"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js",["172","173","174"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js",["175","176","177"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\linearGradient.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\index.js",["178","179","180"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Page.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js",["181"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\data.js",["182"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js",["183","184"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js",["185","186","187"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Logo.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\topicList.js",["188","189"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js",["190","191","192","193","194","195"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\shadows.js",["196"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js",["197","198","199","200","201","202","203","204","205","206","207","208"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],{"ruleId":"209","severity":1,"message":"210","line":18,"column":10,"nodeType":"211","messageId":"212","endLine":18,"endColumn":15},{"ruleId":"213","severity":1,"message":"214","line":69,"column":23,"nodeType":"215","messageId":"216","endLine":69,"endColumn":25},{"ruleId":"209","severity":1,"message":"217","line":24,"column":7,"nodeType":"211","messageId":"212","endLine":24,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":35,"column":5,"nodeType":"220","messageId":"216","endLine":35,"endColumn":11},{"ruleId":"213","severity":1,"message":"214","line":90,"column":23,"nodeType":"215","messageId":"216","endLine":90,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":1,"column":1,"nodeType":"223","endLine":35,"endColumn":3},{"ruleId":"209","severity":1,"message":"224","line":17,"column":8,"nodeType":"211","messageId":"212","endLine":17,"endColumn":15},{"ruleId":"209","severity":1,"message":"225","line":32,"column":10,"nodeType":"211","messageId":"212","endLine":32,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":50,"column":27,"nodeType":"215","messageId":"216","endLine":50,"endColumn":29},{"ruleId":"209","severity":1,"message":"226","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"227","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"228","line":1,"column":38,"nodeType":"211","messageId":"212","endLine":1,"endColumn":44},{"ruleId":"209","severity":1,"message":"229","line":5,"column":9,"nodeType":"211","messageId":"212","endLine":5,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":30,"column":8,"nodeType":"232","endLine":30,"endColumn":10,"suggestions":"233"},{"ruleId":"230","severity":1,"message":"234","line":86,"column":8,"nodeType":"232","endLine":86,"endColumn":10,"suggestions":"235"},{"ruleId":"209","severity":1,"message":"236","line":16,"column":7,"nodeType":"211","messageId":"212","endLine":16,"endColumn":13},{"ruleId":"221","severity":1,"message":"237","line":3,"column":1,"nodeType":"223","endLine":170,"endColumn":3},{"ruleId":"209","severity":1,"message":"238","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":14},{"ruleId":"239","severity":1,"message":"240","line":159,"column":25,"nodeType":"241","endLine":159,"endColumn":28},{"ruleId":"209","severity":1,"message":"227","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"242","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":23},{"ruleId":"209","severity":1,"message":"225","line":92,"column":12,"nodeType":"211","messageId":"212","endLine":92,"endColumn":20},{"ruleId":"209","severity":1,"message":"243","line":18,"column":10,"nodeType":"211","messageId":"212","endLine":18,"endColumn":31},{"ruleId":"213","severity":1,"message":"214","line":55,"column":23,"nodeType":"215","messageId":"216","endLine":55,"endColumn":25},{"ruleId":"209","severity":1,"message":"244","line":2,"column":18,"nodeType":"211","messageId":"212","endLine":2,"endColumn":28},{"ruleId":"209","severity":1,"message":"245","line":44,"column":9,"nodeType":"211","messageId":"212","endLine":44,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":77,"column":40,"nodeType":"215","messageId":"216","endLine":77,"endColumn":42},{"ruleId":"213","severity":1,"message":"214","line":115,"column":23,"nodeType":"215","messageId":"216","endLine":115,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":274,"column":13,"nodeType":"248","endLine":274,"endColumn":32},{"ruleId":"213","severity":1,"message":"214","line":287,"column":40,"nodeType":"215","messageId":"216","endLine":287,"endColumn":42},{"ruleId":"221","severity":1,"message":"237","line":1,"column":1,"nodeType":"223","endLine":27,"endColumn":3},{"ruleId":"209","severity":1,"message":"244","line":2,"column":18,"nodeType":"211","messageId":"212","endLine":2,"endColumn":28},{"ruleId":"209","severity":1,"message":"249","line":2,"column":30,"nodeType":"211","messageId":"212","endLine":2,"endColumn":41},{"ruleId":"209","severity":1,"message":"250","line":12,"column":8,"nodeType":"211","messageId":"212","endLine":12,"endColumn":13},{"ruleId":"209","severity":1,"message":"251","line":113,"column":10,"nodeType":"211","messageId":"212","endLine":113,"endColumn":27},{"ruleId":"209","severity":1,"message":"252","line":113,"column":29,"nodeType":"211","messageId":"212","endLine":113,"endColumn":53},{"ruleId":"213","severity":1,"message":"214","line":136,"column":23,"nodeType":"215","messageId":"216","endLine":136,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":156,"column":23,"nodeType":"215","messageId":"216","endLine":156,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":266,"column":43,"nodeType":"215","messageId":"216","endLine":266,"endColumn":45},{"ruleId":"213","severity":1,"message":"214","line":297,"column":23,"nodeType":"215","messageId":"216","endLine":297,"endColumn":25},{"ruleId":"209","severity":1,"message":"253","line":364,"column":9,"nodeType":"211","messageId":"212","endLine":364,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":591,"column":13,"nodeType":"248","endLine":591,"endColumn":32},{"ruleId":"213","severity":1,"message":"214","line":605,"column":40,"nodeType":"215","messageId":"216","endLine":605,"endColumn":42},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'styles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Toolbar' is defined but never used.","'meetings' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["254"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["255"],"'cities' is assigned a value but never used.","Assign array to a variable before exporting as module default","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MeetingListView' is defined but never used.","'CompareArrowsOutlined' is defined but never used.","'RouterLink' is defined but never used.","'navigate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useNavigate' is defined but never used.","'Async' is defined but never used.","'selectParticipats' is assigned a value but never used.","'setSelectionParticipants' is assigned a value but never used.","'handleReset' is assigned a value but never used.",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [props.peer]",{"range":"260","text":"261"},"Update the dependencies array to be: [roomID]",{"range":"262","text":"263"},[726,728],"[props.peer]",[2585,2587],"[roomID]"]
=======
[{"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\index.js":"1","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\App.js":"2","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\routes.js":"4","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\GlobalStyles.js":"5","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\index.js":"6","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\LoginView.js":"7","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js":"8","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js":"9","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\typography.js":"10","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\shadows.js":"11","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\index.js":"12","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\index.js":"13","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js":"14","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js":"15","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js":"16","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js":"17","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js":"18","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js":"19","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js":"20","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Page.js":"21","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\linearGradient.js":"22","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js":"23","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js":"24","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js":"25","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js":"26","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js":"27","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js":"28","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js":"29","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js":"30","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\data.js":"31","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js":"32","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js":"33","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js":"34","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js":"35","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"36","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Logo.js":"37","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"38","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\index.js":"39","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\topicList.js":"40","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\index.js":"41"},{"size":669,"mtime":1615306465120,"results":"42","hashOfConfig":"43"},{"size":526,"mtime":1615306465043,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1615306465169,"results":"45","hashOfConfig":"43"},{"size":2080,"mtime":1615806934455,"results":"46","hashOfConfig":"43"},{"size":709,"mtime":1615306465046,"results":"47","hashOfConfig":"43"},{"size":578,"mtime":1615306465184,"results":"48","hashOfConfig":"43"},{"size":5813,"mtime":1615474604154,"results":"49","hashOfConfig":"43"},{"size":1615,"mtime":1615306465317,"results":"50","hashOfConfig":"43"},{"size":10087,"mtime":1615474604161,"results":"51","hashOfConfig":"43"},{"size":579,"mtime":1615306465186,"results":"52","hashOfConfig":"43"},{"size":1645,"mtime":1615306465185,"results":"53","hashOfConfig":"43"},{"size":948,"mtime":1615306465300,"results":"54","hashOfConfig":"43"},{"size":1032,"mtime":1615306465276,"results":"55","hashOfConfig":"43"},{"size":944,"mtime":1615306465314,"results":"56","hashOfConfig":"43"},{"size":1050,"mtime":1615306465167,"results":"57","hashOfConfig":"43"},{"size":1401,"mtime":1615306465150,"results":"58","hashOfConfig":"43"},{"size":696,"mtime":1615306465361,"results":"59","hashOfConfig":"43"},{"size":1438,"mtime":1615306465209,"results":"60","hashOfConfig":"43"},{"size":428,"mtime":1615806934468,"results":"61","hashOfConfig":"43"},{"size":3485,"mtime":1615806156608,"results":"62","hashOfConfig":"43"},{"size":490,"mtime":1615306465050,"results":"63","hashOfConfig":"43"},{"size":388,"mtime":1615306465070,"results":"64","hashOfConfig":"43"},{"size":8576,"mtime":1615851393949,"results":"65","hashOfConfig":"43"},{"size":17507,"mtime":1615851393938,"results":"66","hashOfConfig":"43"},{"size":755,"mtime":1615306465166,"results":"67","hashOfConfig":"43"},{"size":3290,"mtime":1615306465316,"results":"68","hashOfConfig":"43"},{"size":3245,"mtime":1615306465349,"results":"69","hashOfConfig":"43"},{"size":1853,"mtime":1615306465188,"results":"70","hashOfConfig":"43"},{"size":1874,"mtime":1615306465189,"results":"71","hashOfConfig":"43"},{"size":1706,"mtime":1615306465150,"results":"72","hashOfConfig":"43"},{"size":2710,"mtime":1615306465346,"results":"73","hashOfConfig":"43"},{"size":4610,"mtime":1615306465191,"results":"74","hashOfConfig":"43"},{"size":4049,"mtime":1615806934621,"results":"75","hashOfConfig":"43"},{"size":1507,"mtime":1615841127618,"results":"76","hashOfConfig":"43"},{"size":2004,"mtime":1615306465345,"results":"77","hashOfConfig":"43"},{"size":3957,"mtime":1615474604140,"results":"78","hashOfConfig":"43"},{"size":187,"mtime":1615306465048,"results":"79","hashOfConfig":"43"},{"size":1722,"mtime":1615306465123,"results":"80","hashOfConfig":"43"},{"size":739,"mtime":1615474604181,"results":"81","hashOfConfig":"43"},{"size":4469,"mtime":1615806295036,"results":"82","hashOfConfig":"43"},{"size":3558,"mtime":1615806934471,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1auxlmj",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\index.js",[],["178","179"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\App.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\routes.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\GlobalStyles.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\LoginView.js",["180","181"],"import React, {useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Snackbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport { Alert } from '@material-ui/lab';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst LoginView = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n\r\n  //Alert Function \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n//Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email, password } = values;\r\n    var body = {\r\n      password: password,\r\n      email: email\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/login\";\r\n   \r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        navigate('/app/dashboard', { replace: true });\r\n        \r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message)\r\n        setOpen(true);    \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      \r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: ''\r\n      }}\r\n      onSubmit={handleSubmit}\r\n\r\n      //********Using Yup for validation********/\r\n\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n        password: Yup.string().max(255).required('Password is required')\r\n      })}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <>\r\n            <form onSubmit={handleSubmit} noValidate>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Sign in\r\n                  </Typography>\r\n                  \r\n                </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Email Address\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n                //className={errors.email && touched.email && \"error\"}\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.password && errors.password)}\r\n                fullWidth\r\n                helperText={touched.password && errors.password}\r\n                label=\"Password\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n                variant=\"outlined\"\r\n              />\r\n              \r\n              <Box my={2}>\r\n                <Button \r\n                className={linearGradient().root}\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\" >\r\n                      Sign in now\r\n                </Button>\r\n              </Box>\r\n              <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n            </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  </Container>  \r\n</Box>\r\n<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"Error\">\r\n            {errorMessage}  \r\n        </Alert>\r\n      </Snackbar>\r\n</Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js",["182","183","184"],"import React, {useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Snackbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport Image from 'src/imgs/meeting_register_img_2.jpg'; // Import using relative path\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst styles = {\r\n    root: {\r\n       \r\n    }\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    height: '100vh'\r\n  },\r\n  image:{\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: '100vh',\r\n    marginTop: '-24px',\r\n  }\r\n}));\r\n\r\nconst RegisterView = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n\r\n  //Alert Function \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n//Close func for closing the alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email, password, firstName, lastName, companyName } = values;\r\n    var body = {\r\n      password: password,\r\n      email: email,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      companyName: companyName\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/signup\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        navigate('/login', { replace: true });\r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message)\r\n        setOpen(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n       \r\n        <Grid\r\n          container\r\n          spacing={0}\r\n        >\r\n            <CssBaseline />\r\n            <Grid\r\n            className={classes.image}\r\n          \r\n            lg={6}\r\n            md={2}\r\n            xl={6}\r\n            xs={0}\r\n          >\r\n            \r\n          </Grid>\r\n          <Grid\r\n         elevation={6} square\r\n            lg={6}\r\n            md={10}\r\n            xl={6}\r\n            xs={12}\r\n          >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              companyName: '',\r\n              policy: false\r\n            }}\r\n            onSubmit={handleSubmit}\r\n\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().max(255).required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                companyName: Yup.string().max(255).required('company name is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n          >\r\n            {props => {\r\n              const {\r\n              values,\r\n              touched,\r\n              errors,\r\n              isSubmitting,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.companyName && errors.companyName)}\r\n                  fullWidth\r\n                  helperText={touched.companyName && errors.companyName}\r\n                  label=\"Company Name\"\r\n                  margin=\"normal\"\r\n                  name=\"companyName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.companyName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    className={linearGradient().root}\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}}\r\n          </Formik>\r\n        </Container>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"Error\">\r\n            {errorMessage}  \r\n        </Alert>\r\n      </Snackbar>\r\n      </Box>\r\n      </Grid>\r\n      \r\n      </Grid>\r\n    \r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\typography.js",["185"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\theme\\shadows.js",["186"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js",["187","188","189"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { v1 as uuid } from \"uuid\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst AttendMeeting = (props) => {\r\n  let navigate = useNavigate()\r\n  function create() {\r\n      const id = uuid();\r\n      navigate(`/app/room/${id}`, {id: id});\r\n  }\r\n\r\n  return (\r\n      <button onClick={create}>Create room</button>\r\n  );\r\n};\r\n\r\nexport default AttendMeeting;","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js",["190","191","192"],"import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  Grid,\r\n  FormControlLabel,\r\n  Switch,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport data from './data';\r\nimport CalendarView from './calendarView';\r\nimport { Search as SearchIcon } from 'react-feather';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst MeetingListView = () => {\r\n  const classes = useStyles();\r\n  const [meetings] = useState(data);\r\n  const [meeting,setMeeting]=useState([]);\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: false,\r\n      });\r\n    \r\n      const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        console.log(state);\r\n      };\r\n      const getMeetings = async values => {\r\n        const url = \"http://localhost:81/meeting/getMeetings\";\r\n        try {\r\n          const result = await fetch(url);\r\n          const data = await result.json();\r\n          //console.log(data)\r\n      \r\n          if (data.status == \"success\") {\r\n            // console.log(\"success\");\r\n            setMeeting(data.data)\r\n           // console.log(meeting)\r\n            \r\n          } else {\r\n            console.log(\"error\");\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        } \r\n      };\r\n      getMeetings();\r\n      var meetingArr=[];\r\n      meetingArr.push(meeting);\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Meetings\"\r\n    >\r\n      <Container maxWidth={false}>\r\n      <div\r\n      \r\n    >\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n          <Grid\r\n          container\r\n         direction=\"row\"\r\n        justify=\"space-between\"\r\n      alignItems=\"center\"\r\n>\r\n            <Box maxWidth={500} minWidth={400}>\r\n\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon\r\n                        fontSize=\"small\"\r\n                        color=\"action\"\r\n                      >\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search meeting\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n            \r\n            {/* switch component for calendar view */}\r\n            <Box>\r\n            <FormControlLabel\r\n            control={\r\n          <Switch\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Calendar View\"\r\n      />\r\n     {/*  <EventIcon></EventIcon> */}\r\n      </Box>\r\n      </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n    <Box mt={3}>\r\n    {!state.checkedB ? ( \r\n          <Results meetings={meeting} />\r\n        ):(<CalendarView meetings={meeting}></CalendarView>)}\r\n </Box>\r\n      </Container>\r\n      \r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MeetingListView;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Page.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\linearGradient.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js",["193","194","195","196","197","198"],"import React,{useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Select,\r\n  InputLabel ,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  FormLabel ,\r\n  makeStyles,\r\n  Card,\r\n  CardHeader,\r\n  Checkbox,\r\n  FormControlLabel ,\r\n  CardContent,\r\n  Snackbar,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 300,\r\n  }\r\n}));\r\n\r\n\r\nconst CreateTopicForm = props => {\r\n\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [successMessage,setSuccessMessage]=useState(\"\");\r\n  const [category, setCategory] = React.useState('');\r\n  const [state, setState] = React.useState({\r\n    checkedDecision: false,\r\n    checkedInfo: false,\r\n  });\r\n  const { checkedDecision, checkedInfo } = state;\r\n  const error = [checkedDecision, checkedInfo].filter((v) => v).length < 1;\r\n  \r\n  //Alert Function\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n//Close func for closing the alert\r\nconst handleClose = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpen(false);\r\n};\r\nconst clearForm = () => {\r\n setCategory(\"\");\r\n setState(state.checkedDecision=false);\r\n setState(state.checkedInfo=false);\r\n};\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async (values,{resetForm}) => {\r\n    setErrorMessage(\"\");\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n      if(Object.keys(category).length == 0)\r\n    {\r\n         setErrorMessage(\"Please select a category\");\r\n         setOpen(true); \r\n    } \r\n    else {\r\n    \r\n    const { title, description,totalTime } = values;\r\n    var body = {\r\n        title: title,\r\n        description: description,\r\n        totalTime: totalTime,\r\n        category: category,\r\n        decision:checkedDecision,\r\n        information: checkedInfo\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/topic/topicSave\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        //console.log(\"success\")\r\n        setSuccessMessage(text.message);\r\n        setOpen(true);\r\n        //Form reset must be done!!!\r\n        resetForm({});\r\n        clearForm();\r\n      } else {\r\n        console.log(text.message);\r\n        setErrorMessage(text.message);\r\n        setOpen(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n   }\r\n  }; \r\n\r\n  //For updating the selector -duration time-\r\n  \r\n  const updateCategory = (event) => {\r\n    setCategory(event.target.value);\r\n    console.log(category);\r\n  };\r\n  \r\n\r\n  const handleCB = (event,value) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    \r\n  };\r\n  \r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    \r\n   <Container maxWidth={false}>\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n        description: '',\r\n        category:\"\",\r\n        totalTime:''\r\n      }}\r\n      onSubmit={handleSubmit}\r\n\r\n      //********Using Yup for validation********/\r\n\r\n      validationSchema={Yup.object().shape({\r\n        title: Yup.string().max(100).required('Title is required'),\r\n        description: Yup.string().max(255).required('Description is required'),\r\n       \r\n        totalTime: Yup.string().required(\"Duration is required\").matches(/^\\d+$/, 'The field should have digits only')        \r\n      })}\r\n      \r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <>\r\n          \r\n            <form onSubmit={handleSubmit} noValidate>\r\n            <Card>\r\n            <CardContent>\r\n            <CardHeader\r\n          subheader=\"Please enter the necessary information for creating a topic\"\r\n          title=\"Create Topic\"\r\n        />\r\n        <Divider />\r\n                \r\n              <TextField\r\n                error={Boolean(touched.title && errors.title)}\r\n                fullWidth\r\n                helperText={touched.title && errors.title}\r\n                label=\"Title\"\r\n                margin=\"normal\"\r\n                name=\"title\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.title}\r\n                variant=\"outlined\"\r\n                \r\n              />\r\n              <TextField\r\n                error={Boolean(touched.description && errors.description)}\r\n                fullWidth\r\n                helperText={touched.description && errors.description}\r\n                label=\"Description\"\r\n                margin=\"normal\"\r\n                name=\"description\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.totalTime && errors.totalTime)}\r\n                fullWidth\r\n                helperText={touched.totalTime && errors.totalTime}\r\n                label=\"Duration in minutes\"\r\n                margin=\"normal\"\r\n                name=\"totalTime\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.totalTime}\r\n                variant=\"outlined\"\r\n              />\r\n        \r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={category}\r\n          onChange={updateCategory}\r\n          label=\"Category\"\r\n          \r\n        > \r\n          {/* <MenuItem value={\"\"}></MenuItem>   */}\r\n          <MenuItem value={\"Budget Meeting\"}>Budget Meeting</MenuItem>\r\n          <MenuItem value={\"HR Meeting\"}>HR Meeting</MenuItem>\r\n          <MenuItem value={\"Project Meeting\"}>Project Meeting</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n          <br/><br/>\r\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\">Select at least one meeting output</FormLabel>\r\n        <FormControlLabel\r\n          control={<Checkbox checked={state.checkedDecision} onChange={handleCB} name=\"checkedDecision\" value={checkedDecision}/>}\r\n          label=\"Decision\"\r\n        /> \r\n       <FormControlLabel\r\n          control={<Checkbox checked={state.checkedInfo} onChange={handleCB} name=\"checkedInfo\" value={checkedInfo} />}\r\n          label=\"Information \"\r\n        />\r\n        </FormControl>\r\n\r\n          </CardContent>\r\n          <Divider />\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n          >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n           Create Topic\r\n          </Button>\r\n\r\n        </Box>\r\n        </Card>\r\n        </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n    {!Object.keys(errorMessage).length == 0 ? \r\n     \r\n         (<Alert onClose={handleClose} severity=\"Error\">\r\n         {errorMessage}  \r\n     </Alert>)\r\n        :(<Alert onClose={handleClose} severity=\"success\">\r\n            {successMessage}  \r\n        </Alert>)}\r\n        \r\n        \r\n      </Snackbar>\r\n  </Container>\r\n  );\r\n};\r\n\r\nexport default CreateTopicForm;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js",["199","200","201","202","203","204","205","206","207","208","209","210"],"import React,{useState} from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns'; //instal this version npm i @date-io/date-fns@1.3.13\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Formik } from 'formik';\r\nimport Async from \"react-async\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Select,\r\n  InputLabel ,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  makeStyles,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  FormControl,\r\n  Snackbar\r\n\r\n} from '@material-ui/core';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 300,\r\n  },\r\n  \r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    width: 600\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst topicColumns = [\r\n  \r\n  { field: 'title', headerName: 'Topic Title', width: 180},\r\n  { field: 'totalTime', headerName: 'Duration', width: 180 }\r\n  \r\n];\r\nconst columns = [\r\n  { field: 'firstName', headerName: 'First name', width: 120},\r\n  { field: 'lastName', headerName: 'Last name', width: 120 },\r\n  { field: 'email', headerName: 'Email', width: 220 }\r\n];\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n \r\nconst CreateMeetingForm = props => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openTopic, setOpenTopic] = React.useState(false);\r\n  const [selectParticipats, setSelectionParticipants] = React.useState([]);\r\n  let dt = new Date();\r\n  const minDate = dt.setDate(dt.getDate() );\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  var [errorMessage,setErrorMessage]=useState(\"\");\r\n  var [successMessage,setSuccessMessage]=useState(\"\");\r\n  const[user,setUser]=useState([]);\r\n  const[member,setMember]=useState([]);\r\n  const[topic,setTopic]=useState([]);\r\n  const[selectedTopic,setSelectedTopic]=useState([]);\r\n  const[topicsArr,setTopicsArr]=useState([]);\r\n  const[participantsArr,setParticipantsArr]=useState([]);\r\n  const[selectionModelTopic,setSelectionModelTopic]=useState([]);\r\n  const[selectionModelParticipant,setSelectionModelParticipant]=useState([]);\r\n\r\n  const loadUser = async values => {\r\n    const url = \"http://localhost:81/meeting/getEmails\";\r\n    try {\r\n      const result = await fetch(url);\r\n      const data = await result.json();\r\n      console.log(data)\r\n\r\n      if (data.status == \"success\") {\r\n        console.log(\"success\");\r\n        setUser(data.data)\r\n        console.log(user)\r\n        \r\n      } else {\r\n        console.log(\"error\");\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  };\r\n  const loadTopic = async values => {\r\n    const url = \"http://localhost:81/topic/getTopic\";\r\n    try {\r\n      const result = await fetch(url);\r\n      const data = await result.json();\r\n      //console.log(data)\r\n\r\n      if (data.status == \"success\") {\r\n        console.log(\"success\");\r\n        setTopic(data.data)\r\n        //console.log(topic)\r\n        \r\n      } else {\r\n        console.log(\"error\");\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  };\r\n\r\n      //function for displaying alert\r\n      function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n      }\r\n//Open Participants Dialog\r\n  const handleClickOpen = () => {\r\n    loadUser();\r\n    setOpen(true);\r\n    \r\n  };\r\n  \r\n  const handleClickOpenTopic =()=>{\r\n    loadTopic();\r\n    console.log(topic);\r\n    setOpenTopic(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseTopic = () => {\r\n    setOpenTopic(false);\r\n    console.log(topicsArr);\r\n    // console.log(selectionModelTopic);\r\n  };\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n /*  const addId=(data)=>{\r\n    var ln = data.length;\r\n    console.log(\"add id starts\")\r\n    for(var i=0; i<ln;i++)\r\n    {\r\n      console.log(i);\r\n      data[i].id=i;\r\n    }\r\n    return data;\r\n  } */\r\n  const SaveParticipants=()=>\r\n  {\r\n    setParticipantsArr(member);\r\n    setSelectionModelParticipant(member.map((r) => r.id));\r\n    console.log(participantsArr);\r\n   console.log(member);\r\n    handleClose();\r\n  }\r\n  const SaveTopics=()=>\r\n  {\r\n    setTopicsArr(selectedTopic);\r\n    setSelectionModelTopic(selectedTopic.map((r) => r.id));\r\n     console.log(selectionModelTopic)\r\n     console.log(topicsArr)\r\n    handleCloseTopic();\r\n    //console.log(calculateTotalDuration())\r\n    \r\n  }\r\n  const calculateTotalDuration=()=>{\r\n    var totalDuration=0;\r\n    topicsArr.map((val) => \r\n    totalDuration+=parseInt(val.totalTime)\r\n    );\r\n    console.log(totalDuration);\r\n    return totalDuration;\r\n  }\r\n  const clearForm=()=>{\r\n   setTopicsArr([]);\r\n   setSelectedDate(new Date());\r\n   setLocation(\"\");\r\n   setParticipantsArr([]);\r\n  }\r\n  //Function that handles the form submission\r\n  const handleSubmit = async (values,{resetForm}) => {\r\n    setErrorMessage(\"\");\r\n    const {title, description, duration} = values;\r\n    var participantsTmp=[];\r\n    var topicsTmp=[];\r\n    participantsArr.map((val)=>\r\n    participantsTmp.push(val._id)\r\n    );\r\n    topicsArr.map((val)=>\r\n    topicsTmp.push(val._id)\r\n    );\r\n    //console.log(topicsTmp);\r\n    console.log(participantsTmp);\r\n     if (!topicsTmp.length)\r\n    {\r\n      setErrorMessage(\"Please select at least one topic\");\r\n         setOpenAlert(true); \r\n    }\r\n    else if(!participantsTmp.length)\r\n    {\r\n         setErrorMessage(\"Please select at least one participant\");\r\n         setOpenAlert(true); \r\n    }\r\n     else if (Object.keys(location).length==0)\r\n    {\r\n      setErrorMessage(\"Please select a meeting location\");\r\n      setOpenAlert(true); \r\n    } \r\n    \r\n    \r\n    var body = {\r\n      title: title,\r\n      description: description,\r\n      topic: topicsTmp,\r\n      members:participantsTmp,\r\n      date: selectedDate,\r\n      //time: selectedDate.toLocaleTimeString(),\r\n      location: location,\r\n      duration: duration.toString()\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/meeting/meetingSave\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        //console.log(\"success\")\r\n        setSuccessMessage(text.message);\r\n        setOpenAlert(true); \r\n        resetForm({});\r\n        clearForm();\r\n  \r\n      } else {\r\n        console.log(text.message);\r\n         setErrorMessage(text.message);\r\n        setOpenAlert(true); \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n /*  console.log(selectedTime.toLocaleDateString());\r\n  console.log(selectedTime.toLocaleTimeString()); */\r\n  };\r\n\r\n  //update the location selection\r\n  const [location, setLocation] = React.useState('');\r\n  const updateLocation = (event) => {\r\n    setLocation(event.target.value);\r\n  }\r\n  //update date\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\nreturn (\r\n    \r\n<Container maxWidth={false}>\r\n  <Formik\r\n  initialValues={{\r\n    title: '',\r\n    topics: '',\r\n    description: '',\r\n    duration: '',\r\n    date: '',\r\n    location: ' '\r\n  }}\r\n  onSubmit={handleSubmit}\r\n\r\n  // Using Yup for validation\r\n\r\n  validationSchema={Yup.object().shape({\r\n    title: Yup.string().max(100).required('Title is required'),\r\n    description: Yup.string().max(255),\r\n    duration: Yup.string().required(\"Duration is required\").matches(/^\\d+$/, 'The field should have digits only').test(\r\n      \"DOB\",\r\n      \"Duration must be greater than total topic durations\",\r\n      value => {\r\n        return value >= calculateTotalDuration();\r\n      })\r\n      // location: Yup.string().ensure().required(\"Location is required\")\r\n  })}\r\n  >\r\n    {props => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleReset,\r\n        handleSubmit\r\n      } = props;\r\n      return (\r\n        <>\r\n        \r\n        <form onSubmit={handleSubmit} noValidate>\r\n          <Card>\r\n            <CardContent>\r\n              <CardHeader title=\"Create A Meeting\">\r\n              </CardHeader>\r\n          {/* </Card> */}\r\n\r\n          <Divider/>\r\n\r\n          {/* Meeting Title */}\r\n          <TextField\r\n                error={Boolean(touched.title && errors.title)}\r\n                fullWidth\r\n                helperText={touched.title && errors.title}\r\n                label=\"Title\"\r\n                margin=\"normal\"\r\n                name=\"title\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.title}\r\n                variant=\"outlined\"\r\n                \r\n              />\r\n        {/* Meeting Topic */}  \r\n      {/* Invite Topics Button */}\r\n       <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-start\"\r\n          onClick={handleClickOpenTopic}>\r\n            Select topic\r\n          </Button> \r\n      <Dialog onClose={handleCloseTopic} aria-labelledby=\"customized-dialog-title\" open={openTopic}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleCloseTopic}>\r\n          Select Topics\r\n        </DialogTitle>\r\n        <DialogContent dividers> \r\n             <div style={{ height: 400, width: '100%' }}> \r\n             {/* {console.log(topicsArr)} */}\r\n                <DataGrid \r\n                  \r\n                  rows={topic}\r\n                  columns={topicColumns}\r\n                  pageSize={5} \r\n                  checkboxSelection\r\n                  selectionModel={selectionModelTopic} \r\n                  onSelectionModelChange={(e) => {\r\n                     \r\n                     const selectedIDs = new Set(e.selectionModel);\r\n                     console.log(selectedTopic)\r\n                     setSelectedTopic(topic.filter((r) =>\r\n                       selectedIDs.has(r.id))\r\n                       \r\n                     )} }\r\n                  \r\n                />   \r\n                      \r\n                    \r\n  \r\n            </div>\r\n            \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={SaveTopics} color=\"primary\">\r\n            Save Topics\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    {/* </div>  */}\r\n\r\n\r\n        {/* Meeting Description */}\r\n        <TextField\r\n          error={Boolean(touched.description && errors.description)}\r\n          fullWidth\r\n          helperText={touched.description && errors.description}\r\n          label=\"Description\"\r\n          margin=\"normal\"\r\n          name=\"description\"\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          value={values.description}\r\n          variant=\"outlined\"\r\n          multiline\r\n          rows={3}\r\n        />\r\n\r\n\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"dd/MM/yyyy\"\r\n          margin=\"normal\"\r\n          minDate={minDate}\r\n          id=\"date-picker-inline\"\r\n          label=\"Meeting Date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <br></br>\r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Meeting Time\"\r\n          minDate={minDate}\r\n          value={selectedDate}\r\n          keyboardIcon={<ScheduleIcon />}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n        \r\n        {/* Meeting Duration */}\r\n        <TextField\r\n          error={Boolean(touched.duration && errors.duration)}\r\n          fullWidth\r\n          helperText={touched.duration && errors.duration}\r\n          label=\"Duration in minutes\"\r\n          margin=\"normal\"\r\n          name=\"duration\"\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          value={values.duration}\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        {/* Meeting Location */}\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"location-input-label\">Location</InputLabel>\r\n        <Select\r\n          labelId=\"topic-input-label\"\r\n          id=\"location-input\"\r\n          value={location}\r\n          onChange={updateLocation}\r\n          label=\"Topics\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          >\r\n            <MenuItem value=\"\"> <em>None</em></MenuItem>\r\n            <MenuItem value={1}>Meeting Room 1</MenuItem>\r\n            <MenuItem value={2}>Meeting Room 2</MenuItem>\r\n            <MenuItem value={3}>Meeting Room 3</MenuItem>\r\n            <MenuItem value={4}>Meeting Room 4</MenuItem>\r\n        </Select>\r\n        <br></br>\r\n        {/* Invite Participants Button */}\r\n        <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-start\"\r\n          onClick={handleClickOpen}>\r\n            Invite Participants\r\n          </Button>\r\n        </FormControl>\r\n\r\n        </CardContent>\r\n           \r\n        <Box\r\n          display=\"flex\"\r\n          flex=\"1\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          p={3}\r\n        >\r\n          \r\n     \r\n    <div>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Invite Participants\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n\r\n              <div style={{ height: 400, width: '100%' }}>\r\n            \r\n                <DataGrid \r\n                \r\n                 rows={user}\r\n                 columns={columns}\r\n                 pageSize={5} \r\n                 checkboxSelection \r\n                 selectionModel={selectionModelParticipant} \r\n                 onSelectionModelChange={(e) => {\r\n                    \r\n                    const selectedIDs = new Set(e.selectionModel);\r\n                    console.log(member)\r\n                    setMember(user.filter((r) =>\r\n                      selectedIDs.has(r.id))\r\n                      \r\n                    )} }            \r\n                      />  \r\n                      \r\n       \r\n  \r\n            </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={SaveParticipants} color=\"primary\">\r\n            Save Participants\r\n          </Button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n\r\n        {/* Cretae Meeting button */}\r\n          <Button \r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          justifyContent=\"flex-end\"\r\n          disabled={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\">\r\n            Create Meeting\r\n          </Button>\r\n          </Box>\r\n\r\n        </Card>\r\n        </form>\r\n        </>\r\n      );\r\n    }}\r\n  \r\n  </Formik>\r\n\r\n     <Snackbar open={openAlert} autoHideDuration={6000} onClose={handleCloseAlert}>\r\n    {!Object.keys(errorMessage).length == 0 ? \r\n     \r\n         (<Alert onClose={handleCloseAlert} severity=\"Error\">\r\n         {errorMessage}  \r\n     </Alert>)\r\n        :(<Alert onClose={handleCloseAlert} severity=\"success\">\r\n            {successMessage}  \r\n        </Alert>)}\r\n        \r\n        \r\n      </Snackbar> \r\n</Container>\r\n\r\n  );\r\n};\r\n\r\nexport default CreateMeetingForm;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\data.js",["211"],"import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-2',\r\nmeetingTopic:'Budget',\r\ndate:'22/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Brain Storm Meeting',\r\nmeetingTopic:'Productivity',\r\ndate:'02/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Online',\r\n    building: '',\r\n    room:''    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Online',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  \r\n];\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\calendarView.js",["212","213"],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\components\\Logo.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\index.js",[],"C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\topicPool\\topicList.js",["214","215"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles\r\n  \r\n} from '@material-ui/core';\r\nimport Async from 'react-async';\r\nimport { CompareArrowsOutlined } from '@material-ui/icons';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n\r\n  /* tableRow: {\r\n    height: 30\r\n  }, */\r\n}));\r\n\r\n/* \r\nconst deneme=(async res=>{\r\nconst url=\"http://localhost:81/topic/getTopic\";\r\nresponse = await fetch(url);\r\nconst data = await response.json();\r\nconsole.log(data);}) */\r\n\r\nconst TopicList = ({ className,  ...rest }) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n    setPage(0);\r\n  };\r\n  const [topic, setTopic]=useState([]);    \r\n  const emptyRows = limit - Math.min(limit, topic.length - page * limit);\r\n  \r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const getTopics = async values => {\r\n    const url = \"http://localhost:81/topic/getTopic\";\r\n    try {\r\n      const result = await fetch(url);\r\n      const data = await result.json();\r\n      // console.log(data)\r\n\r\n      if (data.status == \"success\") {\r\n        // console.log(\"success\");\r\n        setTopic(data.data)\r\n        // console.log(topic)\r\n        \r\n      } else {\r\n        console.log(\"error\");\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  };\r\n\r\n   \r\n  \r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n     \r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n        <Async promiseFn={getTopics}>\r\n          \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n               \r\n              <TableCell>\r\n                  Title\r\n                </TableCell>\r\n                <TableCell>\r\n                  Duration\r\n                </TableCell>\r\n                <TableCell>\r\n                  Category\r\n                </TableCell>\r\n                <TableCell>\r\n                  Meeting Output\r\n                </TableCell>\r\n                <TableCell>\r\n                  \r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n               {topic.slice( page* limit, page * limit + limit).map((topic) => (\r\n                <TableRow\r\n                  hover\r\n                 key={topic._id}\r\n                 className={classes.tableRow}\r\n                >\r\n                 \r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      \r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {topic.title}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                     {topic.totalTime } minutes \r\n                  </TableCell>\r\n                  <TableCell>\r\n                  {topic.category}  \r\n                  </TableCell>\r\n                  <TableCell>\r\n                  {topic.information &&(\r\n                    <p>Information Meeting</p>\r\n                  )}\r\n                  {topic.decision &&(\r\n                    <p>Decision Meeting</p>\r\n                  )}\r\n                 \r\n                  </TableCell>\r\n                  <TableCell>\r\n                   \r\n                  </TableCell>\r\n                  \r\n                </TableRow>\r\n              ))} \r\n               {emptyRows > 0 && (\r\n                <TableRow style={{ height:  56 * emptyRows }}>\r\n                  <TableCell colSpan={5} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n          </Async>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={topic.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default TopicList;\r\n","C:\\Users\\Shahla\\Documents\\GitHub\\TBKMeet\\client\\src\\views\\attendMeeting\\Room\\index.js",["216","217","218"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\nimport {useParams} from 'react-router-dom';\r\nimport { id } from \"date-fns/esm/locale\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const roomID = Room[id];\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"https://tbkmeet-videoserver.herokuapp.com/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n        })\r\n    }, []);\r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Room;",{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":18,"column":10,"nodeType":"225","messageId":"226","endLine":18,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":69,"column":23,"nodeType":"229","messageId":"230","endLine":69,"endColumn":25},{"ruleId":"223","severity":1,"message":"231","line":24,"column":7,"nodeType":"225","messageId":"226","endLine":24,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":35,"column":5,"nodeType":"234","messageId":"230","endLine":35,"endColumn":11},{"ruleId":"227","severity":1,"message":"228","line":90,"column":23,"nodeType":"229","messageId":"230","endLine":90,"endColumn":25},{"ruleId":"235","severity":1,"message":"236","line":1,"column":1,"nodeType":"237","endLine":35,"endColumn":3},{"ruleId":"235","severity":1,"message":"238","line":1,"column":1,"nodeType":"237","endLine":27,"endColumn":3},{"ruleId":"223","severity":1,"message":"239","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"240","line":1,"column":28,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"241","line":1,"column":38,"nodeType":"225","messageId":"226","endLine":1,"endColumn":44},{"ruleId":"223","severity":1,"message":"242","line":17,"column":8,"nodeType":"225","messageId":"226","endLine":17,"endColumn":15},{"ruleId":"223","severity":1,"message":"243","line":32,"column":10,"nodeType":"225","messageId":"226","endLine":32,"endColumn":18},{"ruleId":"227","severity":1,"message":"228","line":50,"column":27,"nodeType":"229","messageId":"230","endLine":50,"endColumn":29},{"ruleId":"223","severity":1,"message":"244","line":2,"column":18,"nodeType":"225","messageId":"226","endLine":2,"endColumn":28},{"ruleId":"223","severity":1,"message":"245","line":44,"column":9,"nodeType":"225","messageId":"226","endLine":44,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":77,"column":39,"nodeType":"229","messageId":"230","endLine":77,"endColumn":41},{"ruleId":"227","severity":1,"message":"228","line":107,"column":23,"nodeType":"229","messageId":"230","endLine":107,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":265,"column":13,"nodeType":"248","endLine":265,"endColumn":32},{"ruleId":"227","severity":1,"message":"228","line":278,"column":40,"nodeType":"229","messageId":"230","endLine":278,"endColumn":42},{"ruleId":"223","severity":1,"message":"244","line":2,"column":18,"nodeType":"225","messageId":"226","endLine":2,"endColumn":28},{"ruleId":"223","severity":1,"message":"249","line":2,"column":30,"nodeType":"225","messageId":"226","endLine":2,"endColumn":41},{"ruleId":"223","severity":1,"message":"250","line":12,"column":8,"nodeType":"225","messageId":"226","endLine":12,"endColumn":13},{"ruleId":"223","severity":1,"message":"251","line":113,"column":10,"nodeType":"225","messageId":"226","endLine":113,"endColumn":27},{"ruleId":"223","severity":1,"message":"252","line":113,"column":29,"nodeType":"225","messageId":"226","endLine":113,"endColumn":53},{"ruleId":"227","severity":1,"message":"228","line":136,"column":23,"nodeType":"229","messageId":"230","endLine":136,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":156,"column":23,"nodeType":"229","messageId":"230","endLine":156,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":266,"column":43,"nodeType":"229","messageId":"230","endLine":266,"endColumn":45},{"ruleId":"227","severity":1,"message":"228","line":297,"column":23,"nodeType":"229","messageId":"230","endLine":297,"endColumn":25},{"ruleId":"223","severity":1,"message":"253","line":362,"column":9,"nodeType":"225","messageId":"226","endLine":362,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":589,"column":13,"nodeType":"248","endLine":589,"endColumn":32},{"ruleId":"227","severity":1,"message":"228","line":603,"column":40,"nodeType":"229","messageId":"230","endLine":603,"endColumn":42},{"ruleId":"235","severity":1,"message":"238","line":3,"column":1,"nodeType":"237","endLine":170,"endColumn":3},{"ruleId":"223","severity":1,"message":"254","line":8,"column":8,"nodeType":"225","messageId":"226","endLine":8,"endColumn":23},{"ruleId":"223","severity":1,"message":"243","line":27,"column":12,"nodeType":"225","messageId":"226","endLine":27,"endColumn":20},{"ruleId":"223","severity":1,"message":"255","line":18,"column":10,"nodeType":"225","messageId":"226","endLine":18,"endColumn":31},{"ruleId":"227","severity":1,"message":"228","line":55,"column":23,"nodeType":"229","messageId":"230","endLine":55,"endColumn":25},{"ruleId":"223","severity":1,"message":"256","line":5,"column":9,"nodeType":"225","messageId":"226","endLine":5,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":29,"column":8,"nodeType":"259","endLine":29,"endColumn":10,"suggestions":"260"},{"ruleId":"257","severity":1,"message":"261","line":82,"column":8,"nodeType":"259","endLine":82,"endColumn":10,"suggestions":"262"},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'styles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Toolbar' is defined but never used.","'meetings' is assigned a value but never used.","'RouterLink' is defined but never used.","'navigate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useNavigate' is defined but never used.","'Async' is defined but never used.","'selectParticipats' is assigned a value but never used.","'setSelectionParticipants' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'MeetingListView' is defined but never used.","'CompareArrowsOutlined' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["265"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["266"],"no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [props.peer]",{"range":"271","text":"272"},"Update the dependencies array to be: [roomID]",{"range":"273","text":"274"},[681,683],"[props.peer]",[2477,2479],"[roomID]"]
>>>>>>> Stashed changes
