[{"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\index.js":"1","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\App.js":"3","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\routes.js":"4","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\components\\GlobalStyles.js":"5","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\theme\\index.js":"6","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\auth\\LoginView.js":"7","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js":"8","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js":"9","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\theme\\shadows.js":"10","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\createTopic\\index.js":"11","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js":"12","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js":"13","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js":"14","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js":"15","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js":"16","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\theme\\typography.js":"17","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js":"18","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js":"19","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\components\\linearGradient.js":"20","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\components\\Page.js":"21","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js":"22","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js":"23","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\data.js":"24","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js":"25","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js":"26","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js":"27","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js":"28","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js":"29","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js":"30","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js":"31","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js":"32","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\components\\Logo.js":"33","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"34","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"35","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\createMeeting\\index.js":"36","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js":"37"},{"size":669,"mtime":1613125716445,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1613125716479,"results":"40","hashOfConfig":"39"},{"size":556,"mtime":1613125716370,"results":"41","hashOfConfig":"39"},{"size":1734,"mtime":1613220429735,"results":"42","hashOfConfig":"39"},{"size":709,"mtime":1613125716375,"results":"43","hashOfConfig":"39"},{"size":578,"mtime":1613125716492,"results":"44","hashOfConfig":"39"},{"size":5391,"mtime":1613213708151,"results":"45","hashOfConfig":"39"},{"size":1615,"mtime":1613125716552,"results":"46","hashOfConfig":"39"},{"size":9402,"mtime":1613125716529,"results":"47","hashOfConfig":"39"},{"size":1645,"mtime":1613125716495,"results":"48","hashOfConfig":"39"},{"size":948,"mtime":1613125800986,"results":"49","hashOfConfig":"39"},{"size":1401,"mtime":1613125716464,"results":"50","hashOfConfig":"39"},{"size":880,"mtime":1613125716562,"results":"51","hashOfConfig":"39"},{"size":1050,"mtime":1613125716474,"results":"52","hashOfConfig":"39"},{"size":1446,"mtime":1613213708143,"results":"53","hashOfConfig":"39"},{"size":944,"mtime":1613125800992,"results":"54","hashOfConfig":"39"},{"size":579,"mtime":1613125716498,"results":"55","hashOfConfig":"39"},{"size":704,"mtime":1613213708174,"results":"56","hashOfConfig":"39"},{"size":4302,"mtime":1613125716517,"results":"57","hashOfConfig":"39"},{"size":497,"mtime":1613125716383,"results":"58","hashOfConfig":"39"},{"size":490,"mtime":1613125716380,"results":"59","hashOfConfig":"39"},{"size":5452,"mtime":1613213708158,"results":"60","hashOfConfig":"39"},{"size":770,"mtime":1613125716470,"results":"61","hashOfConfig":"39"},{"size":2710,"mtime":1613125716560,"results":"62","hashOfConfig":"39"},{"size":1874,"mtime":1613125716507,"results":"63","hashOfConfig":"39"},{"size":4610,"mtime":1613125716510,"results":"64","hashOfConfig":"39"},{"size":1853,"mtime":1613213708135,"results":"65","hashOfConfig":"39"},{"size":3290,"mtime":1613125716546,"results":"66","hashOfConfig":"39"},{"size":3245,"mtime":1613125716566,"results":"67","hashOfConfig":"39"},{"size":2081,"mtime":1613213708166,"results":"68","hashOfConfig":"39"},{"size":3544,"mtime":1613125716557,"results":"69","hashOfConfig":"39"},{"size":1706,"mtime":1613213708131,"results":"70","hashOfConfig":"39"},{"size":187,"mtime":1613125716377,"results":"71","hashOfConfig":"39"},{"size":3946,"mtime":1613242188287,"results":"72","hashOfConfig":"39"},{"size":1722,"mtime":1613125716452,"results":"73","hashOfConfig":"39"},{"size":1032,"mtime":1613243241512,"results":"74","hashOfConfig":"39"},{"size":7576,"mtime":1613243197893,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"ajbu5r",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\index.js",[],["165","166"],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\App.js",["167"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport React from 'react';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\nfunction App() {\r\n  const routing = useRoutes(routes);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      {routing}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\routes.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\components\\GlobalStyles.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\theme\\index.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\auth\\LoginView.js",["168","169","170"],"import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\nvar errorMessage;\r\nconst LoginView = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email, password } = values;\r\n    var body = {\r\n      password: password,\r\n      email: email\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/login\";\r\n   \r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        navigate('/app/dashboard', { replace: true });\r\n        errorMessage=null;\r\n      } else {\r\n        console.log(text.message);\r\n        window.alert(text.message);\r\n       /* errorMessage= <Alert severity=\"error\">\r\n       <AlertTitle>Error</AlertTitle>\r\n       This is an error alert — <strong>check it out!</strong>\r\n     </Alert>; */\r\n       console.log(errorMessage);\r\n       \r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      \r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: ''\r\n      }}\r\n      onSubmit={handleSubmit}\r\n\r\n      //********Using Yup for validation********/\r\n\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n        password: Yup.string().max(255).required('Password is required')\r\n      })}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <>\r\n            <form onSubmit={handleSubmit} noValidate>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Sign in\r\n                  </Typography>\r\n                  \r\n                </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Email Address\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n                //className={errors.email && touched.email && \"error\"}\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.password && errors.password)}\r\n                fullWidth\r\n                helperText={touched.password && errors.password}\r\n                label=\"Password\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n                variant=\"outlined\"\r\n              />\r\n              \r\n              <Box my={2}>\r\n                <Button \r\n                className={linearGradient().root}\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\" >\r\n                      Sign in now\r\n                </Button>\r\n              </Box>\r\n              <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n            </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  </Container>\r\n</Box>\r\n</Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\errors\\NotFoundView.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\auth\\RegisterView.js",["171","172","173"],"import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\nimport Image from 'src/imgs/meeting_register_img_2.jpg'; // Import using relative path\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n       \r\n    }\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    height: '100vh'\r\n  },\r\n  image:{\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: '100vh',\r\n    marginTop: '-24px',\r\n  }\r\n}));\r\n\r\nconst RegisterView = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { email, password, firstName, lastName, companyName } = values;\r\n    var body = {\r\n      password: password,\r\n      email: email,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      companyName: companyName\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/auth/signup\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n      console.log(text)\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        navigate('/login', { replace: true });\r\n      } else {\r\n        console.log(text.message);\r\n        window.alert(text.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n       \r\n        <Grid\r\n          container\r\n          spacing={0}\r\n        >\r\n            <CssBaseline />\r\n            <Grid\r\n            className={classes.image}\r\n          \r\n            lg={6}\r\n            md={2}\r\n            xl={6}\r\n            xs={0}\r\n          >\r\n            \r\n          </Grid>\r\n          <Grid\r\n         elevation={6} square\r\n            lg={6}\r\n            md={10}\r\n            xl={6}\r\n            xs={12}\r\n          >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              companyName: '',\r\n              policy: false\r\n            }}\r\n            onSubmit={handleSubmit}\r\n\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().max(255).required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                companyName: Yup.string().max(255).required('company name is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n          >\r\n            {props => {\r\n              const {\r\n              values,\r\n              touched,\r\n              errors,\r\n              isSubmitting,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.companyName && errors.companyName)}\r\n                  fullWidth\r\n                  helperText={touched.companyName && errors.companyName}\r\n                  label=\"Company Name\"\r\n                  margin=\"normal\"\r\n                  name=\"companyName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.companyName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    className={linearGradient().root}\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n      </Grid>\r\n      \r\n      </Grid>\r\n    \r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\theme\\shadows.js",["174"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\createTopic\\index.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\index.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\index.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\MainLayout\\index.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\account\\AccountView\\index.js",["175"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\nimport Password from './Password';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n        {/* item is a class name which provides padding */}\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          > </Grid>\r\n          <Grid \r\n          item\r\n          lg={8}\r\n          md={6}\r\n          xs={12}>\r\n          <Password />\r\n        </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\index.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\theme\\typography.js",["176"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\index.js",["177"],"import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Notifications from './Notifications';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Settings\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Notifications />\r\n      \r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js",["178","179"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  makeStyles,\r\n  Button\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst Video = styled.video`\r\n  border: 1px solid blue;\r\n  width: 50%;\r\n  height: 50%;\r\n  background: black;\r\n`;\r\n\r\nconst AttendMeeting = () => {\r\n  const [yourID, setYourID] = useState(\"\");\r\n  const [users, setUsers] = useState({});\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const partnerVideo = useRef();\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io.connect(\"http://localhost:8000\");\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      setStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n    })\r\n\r\n    socket.current.on(\"yourID\", (id) => {\r\n      setYourID(id);\r\n    })\r\n    socket.current.on(\"allUsers\", (users) => {\r\n      setUsers(users);\r\n    })\r\n\r\n    socket.current.on(\"hey\", (data) => {\r\n      setReceivingCall(true);\r\n      setCaller(data.from);\r\n      setCallerSignal(data.signal);\r\n    })\r\n  }, []);\r\n\r\n  function callPeer(id) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      config: {\r\n\r\n        iceServers: [\r\n            {\r\n                urls: \"stun:numb.viagenie.ca\",\r\n                username: \"sultan1640@gmail.com\",\r\n                credential: \"98376683\"\r\n            },\r\n            {\r\n                urls: \"turn:numb.viagenie.ca\",\r\n                username: \"sultan1640@gmail.com\",\r\n                credential: \"98376683\"\r\n            }\r\n        ]\r\n    },\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on(\"signal\", data => {\r\n      socket.current.emit(\"callUser\", { userToCall: id, signalData: data, from: yourID })\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      if (partnerVideo.current) {\r\n        partnerVideo.current.srcObject = stream;\r\n      }\r\n    });\r\n\r\n    socket.current.on(\"callAccepted\", signal => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    })\r\n\r\n  }\r\n\r\n  function acceptCall() {\r\n    setCallAccepted(true);\r\n    setReceivingCall(false);\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n    peer.on(\"signal\", data => {\r\n      socket.current.emit(\"acceptCall\", { signal: data, to: caller })\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      partnerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(callerSignal);\r\n  }\r\n\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = (\r\n      <Video playsInline muted ref={userVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted) {\r\n    PartnerVideo = (\r\n      <Video playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let incomingCall;\r\n  if (receivingCall) {\r\n    incomingCall = (\r\n      <div>\r\n        <h1>A User is inviting you to attend a meeting</h1>\r\n        <Button variant=\"contained\" onClick={acceptCall}>Accept</Button>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {UserVideo}\r\n        {PartnerVideo}\r\n      </Row>\r\n      <Row>\r\n        {Object.keys(users).map(key => {\r\n          if (key === yourID) {\r\n            return null;\r\n          }\r\n          return (\r\n            < Button variant= \"contained\"  onClick={() => callPeer(key)}> \r\n            Start Meeting \r\n              </Button>\r\n          );\r\n        })}\r\n      </Row>\r\n      <Row>\r\n        {incomingCall}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AttendMeeting;\r\n  \r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\components\\linearGradient.js",["180","181","182","183","184","185","186","187"],"\r\nimport React, { useState } from 'react';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst linearGradient = makeStyles({\r\n    root:{\r\n    background: 'linear-gradient(45deg,  #9face6 30%,  #74ebd5 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(159, 172, 230, .3)',\r\n    color: 'white',\r\n    height:60,\r\n    padding: '0 30px',\r\n    },\r\n    \r\n  \r\n});\r\n\r\nexport default linearGradient;","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\components\\Page.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\createTopic\\createTopicForm.js",["188","189","190","191","192"],"import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Select,\r\n  InputLabel ,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  makeStyles,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport linearGradient from 'src/components/linearGradient';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 300,\r\n  }\r\n}));\r\n\r\nconst CreateTopicForm = props => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  // The function that handles the logic when submitting the form\r\n  const handleSubmit = async values => {\r\n    // This function received the values from the form\r\n    // The line below extract the two fields from the values object.\r\n    const { title, description,duration } = values;\r\n    var body = {\r\n        title: title,\r\n        description: description,\r\n        duration: duration\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    const url = \"http://localhost:81/app/createTopic\";\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const text = await response.json();\r\n\r\n      if (text.status == \"success\") {\r\n        console.log(\"success\")\r\n        navigate('/app/dashboard', { replace: true });\r\n      } else {\r\n        console.log(text.message);\r\n        window.alert(text.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  //For updating the selector -duration time-\r\n  const [duration, setDuration] = React.useState('');\r\n  const updateDuration = (event) => {\r\n    setDuration(event.target.value);\r\n  };\r\n  // Returning the part that should be rendered\r\n  // Just set handleSubmit as the handler for the onSubmit call.\r\n  return (\r\n    \r\n  \r\n      \r\n      <Container maxWidth={false}>\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n        description: '',\r\n        duration:''\r\n      }}\r\n      onSubmit={handleSubmit}\r\n\r\n      //********Using Yup for validation********/\r\n\r\n      validationSchema={Yup.object().shape({\r\n        title: Yup.string().max(100).required('Title is required'),\r\n        description: Yup.string().max(255).required('Description is required'),\r\n        duration: Yup.string().required(\"Duration is required\")\r\n      })}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <>\r\n          \r\n            <form onSubmit={handleSubmit} noValidate>\r\n            <Card>\r\n            <CardContent>\r\n            <CardHeader\r\n          subheader=\"Please enter the necessary information for creating a topic\"\r\n          title=\"Create Topic\"\r\n        />\r\n        <Divider />\r\n                \r\n              <TextField\r\n                error={Boolean(touched.title && errors.title)}\r\n                fullWidth\r\n                helperText={touched.title && errors.title}\r\n                label=\"Title\"\r\n                margin=\"normal\"\r\n                name=\"title\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.title}\r\n                variant=\"outlined\"\r\n                \r\n              />\r\n              <TextField\r\n                error={Boolean(touched.description && errors.description)}\r\n                fullWidth\r\n                helperText={touched.description && errors.description}\r\n                label=\"Description\"\r\n                margin=\"normal\"\r\n                name=\"description\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n              />\r\n              \r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Duration</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={duration}\r\n          onChange={updateDuration}\r\n          label=\"Duration\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>10 minutes</MenuItem>\r\n          <MenuItem value={20}>30 minutes</MenuItem>\r\n          <MenuItem value={30}>45 minutes</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n  \r\n              </CardContent>\r\n              <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={3}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n           Create Topic\r\n          </Button>\r\n        </Box>\r\n              </Card>\r\n            </form>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  </Container>\r\n  );\r\n};\r\n\r\nexport default CreateTopicForm;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\MainLayout\\TopBar.js",["193"],"import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\nimport linearLayout from 'src/components/linearGradient';\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = linearLayout();\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\data.js",["194"],"import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-2',\r\nmeetingTopic:'Budget',\r\ndate:'22/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Brain Storm Meeting',\r\nmeetingTopic:'Productivity',\r\ndate:'02/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Online',\r\n    building: '',\r\n    room:''    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Online',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    online:false,\r\n    address: {\r\n    city:'Ankara',\r\n    building: 'Bulding A',\r\n    room:'A-101'    \r\n     \r\n    },\r\nmeetingName:'Budget Meeting-1',\r\nmeetingTopic:'Budget',\r\ndate:'12/03/2021',\r\ntime:'13.30'\r\n\r\n  },\r\n  \r\n];\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\account\\AccountView\\Profile.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\account\\AccountView\\ProfileDetails.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\account\\AccountView\\Password.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\settings\\SettingsView\\Notifications.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Toolbar.js",["195","196"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  Grid,\r\n  FormControlLabel,\r\n  Switch\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nconst Toolbar = ({ className, ...rest }) => {\r\nconst [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: false,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  return (\r\n    <div\r\n      {...rest}\r\n    >\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n          <Grid\r\n          container\r\n         direction=\"row\"\r\n        justify=\"space-between\"\r\n      alignItems=\"center\"\r\n>\r\n            <Box maxWidth={500} minWidth={400}>\r\n\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon\r\n                        fontSize=\"small\"\r\n                        color=\"action\"\r\n                      >\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search meeting\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n            \r\n            {/* switch component for calendar view */}\r\n            <Box>\r\n            <FormControlLabel\r\n            control={\r\n          <Switch\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Calendar View\"\r\n      />\r\n     {/*  <EventIcon></EventIcon> */}\r\n      </Box>\r\n      </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\meeting\\MeetingListView\\Results.js",["197","198"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, meetings, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n               \r\n              <TableCell>\r\n                  Meeting Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Meeting Topic\r\n                </TableCell>\r\n                <TableCell>\r\n                  Location\r\n                </TableCell>\r\n                <TableCell>\r\n                  Date\r\n                </TableCell>\r\n                <TableCell>\r\n                  Time\r\n                </TableCell>\r\n                <TableCell>\r\n                  Attend\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {meetings.slice(0, limit).map((meetings) => (\r\n                <TableRow\r\n                  hover\r\n                  key={meetings.id}\r\n                  \r\n                >\r\n                 \r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      \r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {meetings.meetingName}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {meetings.meetingTopic}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {`${meetings.address.city}, ${meetings.address.building}, ${meetings.address.room}`}  \r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {meetings.date}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {meetings.time}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <Button href=\"#text-buttons\" color=\"primary\">\r\n  Attend Meeting\r\n</Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={meetings.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  meetings: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\TopBar.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\components\\Logo.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\index.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\createMeeting\\index.js",[],"C:\\Users\\Shahla\\Desktop\\TBK\\TBKMeet\\client\\src\\views\\createMeeting\\createMeetingForm.js",["199","200","201","202","203","204"],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":1,"column":8,"nodeType":"211","messageId":"212","endLine":1,"endColumn":12},{"ruleId":"209","severity":1,"message":"213","line":16,"column":10,"nodeType":"211","messageId":"212","endLine":16,"endColumn":15},{"ruleId":"209","severity":1,"message":"214","line":16,"column":17,"nodeType":"211","messageId":"212","endLine":16,"endColumn":27},{"ruleId":"215","severity":1,"message":"216","line":53,"column":23,"nodeType":"217","messageId":"218","endLine":53,"endColumn":25},{"ruleId":"209","severity":1,"message":"219","line":23,"column":7,"nodeType":"211","messageId":"212","endLine":23,"endColumn":13},{"ruleId":"220","severity":1,"message":"221","line":34,"column":5,"nodeType":"222","messageId":"218","endLine":34,"endColumn":11},{"ruleId":"215","severity":1,"message":"216","line":76,"column":23,"nodeType":"217","messageId":"218","endLine":76,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","endLine":27,"endColumn":3},{"ruleId":"209","severity":1,"message":"226","line":5,"column":3,"nodeType":"211","messageId":"212","endLine":5,"endColumn":6},{"ruleId":"223","severity":1,"message":"227","line":1,"column":1,"nodeType":"225","endLine":35,"endColumn":3},{"ruleId":"209","severity":1,"message":"226","line":3,"column":3,"nodeType":"211","messageId":"212","endLine":3,"endColumn":6},{"ruleId":"209","severity":1,"message":"228","line":6,"column":8,"nodeType":"211","messageId":"212","endLine":6,"endColumn":12},{"ruleId":"209","severity":1,"message":"229","line":13,"column":7,"nodeType":"211","messageId":"212","endLine":13,"endColumn":16},{"ruleId":"209","severity":1,"message":"230","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":13},{"ruleId":"209","severity":1,"message":"231","line":2,"column":17,"nodeType":"211","messageId":"212","endLine":2,"endColumn":25},{"ruleId":"209","severity":1,"message":"232","line":4,"column":3,"nodeType":"211","messageId":"212","endLine":4,"endColumn":9},{"ruleId":"209","severity":1,"message":"233","line":5,"column":3,"nodeType":"211","messageId":"212","endLine":5,"endColumn":8},{"ruleId":"209","severity":1,"message":"226","line":6,"column":3,"nodeType":"211","messageId":"212","endLine":6,"endColumn":6},{"ruleId":"209","severity":1,"message":"234","line":7,"column":3,"nodeType":"211","messageId":"212","endLine":7,"endColumn":9},{"ruleId":"209","severity":1,"message":"235","line":8,"column":3,"nodeType":"211","messageId":"212","endLine":8,"endColumn":13},{"ruleId":"209","severity":1,"message":"236","line":9,"column":3,"nodeType":"211","messageId":"212","endLine":9,"endColumn":10},{"ruleId":"209","severity":1,"message":"237","line":2,"column":18,"nodeType":"211","messageId":"212","endLine":2,"endColumn":28},{"ruleId":"209","severity":1,"message":"228","line":21,"column":8,"nodeType":"211","messageId":"212","endLine":21,"endColumn":12},{"ruleId":"209","severity":1,"message":"238","line":22,"column":8,"nodeType":"211","messageId":"212","endLine":22,"endColumn":22},{"ruleId":"215","severity":1,"message":"216","line":64,"column":23,"nodeType":"217","messageId":"218","endLine":64,"endColumn":25},{"ruleId":"209","severity":1,"message":"239","line":109,"column":11,"nodeType":"211","messageId":"212","endLine":109,"endColumn":23},{"ruleId":"209","severity":1,"message":"240","line":8,"column":3,"nodeType":"211","messageId":"212","endLine":8,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":3,"column":1,"nodeType":"225","endLine":170,"endColumn":3},{"ruleId":"209","severity":1,"message":"241","line":3,"column":8,"nodeType":"211","messageId":"212","endLine":3,"endColumn":12},{"ruleId":"209","severity":1,"message":"242","line":16,"column":8,"nodeType":"211","messageId":"212","endLine":16,"endColumn":17},{"ruleId":"209","severity":1,"message":"243","line":6,"column":3,"nodeType":"211","messageId":"212","endLine":6,"endColumn":9},{"ruleId":"209","severity":1,"message":"244","line":9,"column":3,"nodeType":"211","messageId":"212","endLine":9,"endColumn":11},{"ruleId":"209","severity":1,"message":"237","line":2,"column":18,"nodeType":"211","messageId":"212","endLine":2,"endColumn":28},{"ruleId":"209","severity":1,"message":"245","line":22,"column":3,"nodeType":"211","messageId":"212","endLine":22,"endColumn":11},{"ruleId":"209","severity":1,"message":"246","line":23,"column":3,"nodeType":"211","messageId":"212","endLine":23,"endColumn":7},{"ruleId":"209","severity":1,"message":"228","line":25,"column":8,"nodeType":"211","messageId":"212","endLine":25,"endColumn":12},{"ruleId":"209","severity":1,"message":"238","line":26,"column":8,"nodeType":"211","messageId":"212","endLine":26,"endColumn":22},{"ruleId":"215","severity":1,"message":"216","line":69,"column":22,"nodeType":"217","messageId":"218","endLine":69,"endColumn":24},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'styles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Box' is defined but never used.","Assign object to a variable before exporting as module default","'Page' is defined but never used.","'useStyles' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'AppBar' is defined but never used.","'Badge' is defined but never used.","'Hidden' is defined but never used.","'IconButton' is defined but never used.","'Toolbar' is defined but never used.","'RouterLink' is defined but never used.","'linearGradient' is defined but never used.","'isSubmitting' is assigned a value but never used.","'makeStyles' is defined but never used.","'clsx' is defined but never used.","'EventIcon' is defined but never used.","'Avatar' is defined but never used.","'Checkbox' is defined but never used.","'duration' is defined but never used.","'Menu' is defined but never used.","no-global-assign","no-unsafe-negation"]