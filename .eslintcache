[{"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\index.js":"1","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\App.js":"2","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\reportWebVitals.js":"3","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\routes.js":"4","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\components\\GlobalStyles.js":"5","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\theme\\index.js":"6","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\errors\\NotFoundView.js":"7","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\auth\\LoginView.js":"8","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\auth\\RegisterView.js":"9","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\theme\\shadows.js":"10","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\theme\\typography.js":"11","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\createTopic\\index.js":"12","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\createMeeting\\index.js":"13","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\DashboardLayout\\index.js":"14","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\dashboard\\DashboardView\\index.js":"15","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\account\\AccountView\\index.js":"16","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\MainLayout\\index.js":"17","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\meeting\\MeetingListView\\index.js":"18","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\settings\\SettingsView\\index.js":"19","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js":"20","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\components\\linearGradient.js":"21","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\components\\Page.js":"22","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\settings\\SettingsView\\Notifications.js":"23","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\meeting\\MeetingListView\\data.js":"24","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\MainLayout\\TopBar.js":"25","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\meeting\\MeetingListView\\Toolbar.js":"26","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\meeting\\MeetingListView\\Results.js":"27","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\account\\AccountView\\Password.js":"28","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\account\\AccountView\\ProfileDetails.js":"29","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\account\\AccountView\\Profile.js":"30","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js":"31","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\DashboardLayout\\TopBar.js":"32","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\components\\Logo.js":"33","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"34","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"35","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\createMeeting\\createMeetingForm.js":"36","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\createTopic\\createTopicForm.js":"37"},{"size":649,"mtime":1613744748000,"results":"38","hashOfConfig":"39"},{"size":506,"mtime":1613744748000,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1613744748000,"results":"41","hashOfConfig":"39"},{"size":1690,"mtime":1613744748000,"results":"42","hashOfConfig":"39"},{"size":672,"mtime":1613744748000,"results":"43","hashOfConfig":"39"},{"size":551,"mtime":1613744748000,"results":"44","hashOfConfig":"39"},{"size":1547,"mtime":1613744748000,"results":"45","hashOfConfig":"39"},{"size":5644,"mtime":1613744748000,"results":"46","hashOfConfig":"39"},{"size":9097,"mtime":1613744748000,"results":"47","hashOfConfig":"39"},{"size":1618,"mtime":1613744748000,"results":"48","hashOfConfig":"39"},{"size":544,"mtime":1613744748000,"results":"49","hashOfConfig":"39"},{"size":900,"mtime":1613744748000,"results":"50","hashOfConfig":"39"},{"size":985,"mtime":1613744748000,"results":"51","hashOfConfig":"39"},{"size":1343,"mtime":1613744748000,"results":"52","hashOfConfig":"39"},{"size":896,"mtime":1613744748000,"results":"53","hashOfConfig":"39"},{"size":1368,"mtime":1613744748000,"results":"54","hashOfConfig":"39"},{"size":1001,"mtime":1613744748000,"results":"55","hashOfConfig":"39"},{"size":840,"mtime":1613744748000,"results":"56","hashOfConfig":"39"},{"size":661,"mtime":1613744748000,"results":"57","hashOfConfig":"39"},{"size":4118,"mtime":1613744748000,"results":"58","hashOfConfig":"39"},{"size":369,"mtime":1613744748000,"results":"59","hashOfConfig":"39"},{"size":462,"mtime":1613744748000,"results":"60","hashOfConfig":"39"},{"size":3107,"mtime":1613744748000,"results":"61","hashOfConfig":"39"},{"size":2540,"mtime":1613744748000,"results":"62","hashOfConfig":"39"},{"size":722,"mtime":1613744748000,"results":"63","hashOfConfig":"39"},{"size":1919,"mtime":1613744748000,"results":"64","hashOfConfig":"39"},{"size":3388,"mtime":1613744748000,"results":"65","hashOfConfig":"39"},{"size":1765,"mtime":1613744748000,"results":"66","hashOfConfig":"39"},{"size":4413,"mtime":1613744748000,"results":"67","hashOfConfig":"39"},{"size":1782,"mtime":1613744748000,"results":"68","hashOfConfig":"39"},{"size":3147,"mtime":1613744748000,"results":"69","hashOfConfig":"39"},{"size":1635,"mtime":1613744748000,"results":"70","hashOfConfig":"39"},{"size":174,"mtime":1613744748000,"results":"71","hashOfConfig":"39"},{"size":3754,"mtime":1613744748000,"results":"72","hashOfConfig":"39"},{"size":1637,"mtime":1613744748000,"results":"73","hashOfConfig":"39"},{"size":7932,"mtime":1613744748000,"results":"74","hashOfConfig":"39"},{"size":5943,"mtime":1613744748000,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"etec0k",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\App.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\reportWebVitals.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\routes.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\components\\GlobalStyles.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\theme\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\errors\\NotFoundView.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\auth\\LoginView.js",["158","159"],"import React, {useState} from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  Snackbar,\n  makeStyles\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Page from 'src/components/Page';\nimport linearGradient from 'src/components/linearGradient';\nimport { Alert } from '@material-ui/lab';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = props => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [open, setOpen] = React.useState(false);\n  var [errorMessage,setErrorMessage]=useState(\"\");\n\n  //Alert Function \n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n//Close func for closing the alert\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  // The function that handles the logic when submitting the form\n  const handleSubmit = async values => {\n    // This function received the values from the form\n    // The line below extract the two fields from the values object.\n    const { email, password } = values;\n    var body = {\n      password: password,\n      email: email\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    const url = \"http://localhost:81/auth/login\";\n   \n    try {\n      const response = await fetch(url, options);\n      const text = await response.json();\n\n      if (text.status == \"success\") {\n        console.log(\"success\")\n        navigate('/app/dashboard', { replace: true });\n        \n      } else {\n        console.log(text.message);\n        setErrorMessage(text.message)\n        console.log(errorMessage)\n        setOpen(true);    \n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Returning the part that should be rendered\n  // Just set handleSubmit as the handler for the onSubmit call.\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      \n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n    <Formik\n      initialValues={{\n        email: '',\n        password: ''\n      }}\n      onSubmit={handleSubmit}\n\n      //********Using Yup for validation********/\n\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n        return (\n          <>\n            <form onSubmit={handleSubmit} noValidate>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  \n                </Box>\n              <TextField\n                error={Boolean(touched.email && errors.email)}\n                fullWidth\n                helperText={touched.email && errors.email}\n                label=\"Email Address\"\n                margin=\"normal\"\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"email\"\n                value={values.email}\n                variant=\"outlined\"\n                //className={errors.email && touched.email && \"error\"}\n              />\n              <TextField\n                error={Boolean(touched.password && errors.password)}\n                fullWidth\n                helperText={touched.password && errors.password}\n                label=\"Password\"\n                margin=\"normal\"\n                name=\"password\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n              \n              <Box my={2}>\n                <Button \n                className={linearGradient().root}\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\" >\n                      Sign in now\n                </Button>\n              </Box>\n              <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n            </form>\n          </>\n        );\n      }}\n    </Formik>\n  </Container>  \n</Box>\n<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"Error\">\n            {errorMessage}  \n        </Alert>\n      </Snackbar>\n</Page>\n  );\n};\n\nexport default LoginView;\n","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\auth\\RegisterView.js",["160","161","162"],"import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport linearGradient from 'src/components/linearGradient';\nimport Image from 'src/imgs/meeting_register_img_2.jpg'; // Import using relative path\n\n\nconst styles = {\n    root: {\n       \n    }\n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    height: '100vh'\n  },\n  image:{\n    backgroundImage: `url(${Image})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    height: '100vh',\n    marginTop: '-24px',\n  }\n}));\n\nconst RegisterView = props => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  // The function that handles the logic when submitting the form\n  const handleSubmit = async values => {\n    // This function received the values from the form\n    // The line below extract the two fields from the values object.\n    const { email, password, firstName, lastName, companyName } = values;\n    var body = {\n      password: password,\n      email: email,\n      firstName: firstName,\n      lastName: lastName,\n      companyName: companyName\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    const url = \"http://localhost:81/auth/signup\";\n    try {\n      const response = await fetch(url, options);\n      const text = await response.json();\n      console.log(text)\n\n      if (text.status == \"success\") {\n        console.log(\"success\")\n        navigate('/login', { replace: true });\n      } else {\n        console.log(text.message);\n        window.alert(text.message);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n       \n        <Grid\n          container\n          spacing={0}\n        >\n            <CssBaseline />\n            <Grid\n            className={classes.image}\n          \n            lg={6}\n            md={2}\n            xl={6}\n            xs={0}\n          >\n            \n          </Grid>\n          <Grid\n         elevation={6} square\n            lg={6}\n            md={10}\n            xl={6}\n            xs={12}\n          >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              companyName: '',\n              policy: false\n            }}\n            onSubmit={handleSubmit}\n\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                companyName: Yup.string().max(255).required('company name is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n          >\n            {props => {\n              const {\n              values,\n              touched,\n              errors,\n              isSubmitting,\n              handleChange,\n              handleBlur,\n              handleSubmit\n            } = props;\n            return (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.companyName && errors.companyName)}\n                  fullWidth\n                  helperText={touched.companyName && errors.companyName}\n                  label=\"Company Name\"\n                  margin=\"normal\"\n                  name=\"companyName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.companyName}\n                  variant=\"outlined\"\n                />\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box my={2}>\n                  <Button\n                    className={linearGradient().root}\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}}\n          </Formik>\n        </Container>\n      </Box>\n      </Grid>\n      \n      </Grid>\n    \n    </Page>\n  );\n};\n\nexport default RegisterView;\n","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\theme\\shadows.js",["163"],"export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\theme\\typography.js",["164"],"export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\createTopic\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\createMeeting\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\DashboardLayout\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\dashboard\\DashboardView\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\account\\AccountView\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\MainLayout\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\meeting\\MeetingListView\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\settings\\SettingsView\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\attendMeeting\\AttendMeetingtView\\index.js",["165","166"],"import React, { useEffect, useState, useRef } from 'react';\nimport {\n  makeStyles,\n  Button\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Video = styled.video`\n  border: 1px solid blue;\n  width: 50%;\n  height: 50%;\n  background: black;\n`;\n\nconst AttendMeeting = () => {\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = io.connect(\"http://localhost:8000\");\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n      setStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    })\n\n    socket.current.on(\"yourID\", (id) => {\n      setYourID(id);\n    })\n    socket.current.on(\"allUsers\", (users) => {\n      setUsers(users);\n    })\n\n    socket.current.on(\"hey\", (data) => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n    })\n  }, []);\n\n  function callPeer(id) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      config: {\n\n        iceServers: [\n            {\n                urls: \"stun:numb.viagenie.ca\",\n                username: \"sultan1640@gmail.com\",\n                credential: \"98376683\"\n            },\n            {\n                urls: \"turn:numb.viagenie.ca\",\n                username: \"sultan1640@gmail.com\",\n                credential: \"98376683\"\n            }\n        ]\n    },\n      stream: stream,\n    });\n\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"callUser\", { userToCall: id, signalData: data, from: yourID })\n    })\n\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n\n    socket.current.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    })\n\n  }\n\n  function acceptCall() {\n    setCallAccepted(true);\n    setReceivingCall(false);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream,\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"acceptCall\", { signal: data, to: caller })\n    })\n\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n\n    peer.signal(callerSignal);\n  }\n\n  let UserVideo;\n  if (stream) {\n    UserVideo = (\n      <Video playsInline muted ref={userVideo} autoPlay />\n    );\n  }\n\n  let PartnerVideo;\n  if (callAccepted) {\n    PartnerVideo = (\n      <Video playsInline ref={partnerVideo} autoPlay />\n    );\n  }\n\n  let incomingCall;\n  if (receivingCall) {\n    incomingCall = (\n      <div>\n        <h1>A User is inviting you to attend a meeting</h1>\n        <Button variant=\"contained\" onClick={acceptCall}>Accept</Button>\n      </div>\n    )\n  }\n  return (\n    <Container>\n      <Row>\n        {UserVideo}\n        {PartnerVideo}\n      </Row>\n      <Row>\n        {Object.keys(users).map(key => {\n          if (key === yourID) {\n            return null;\n          }\n          return (\n            < Button variant= \"contained\"  onClick={() => callPeer(key)}> \n            Start Meeting \n              </Button>\n          );\n        })}\n      </Row>\n      <Row>\n        {incomingCall}\n      </Row>\n    </Container>\n  );\n}\n\nexport default AttendMeeting;\n  \n","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\components\\linearGradient.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\components\\Page.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\settings\\SettingsView\\Notifications.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\meeting\\MeetingListView\\data.js",["167"],"import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-2',\nmeetingTopic:'Budget',\ndate:'22/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Brain Storm Meeting',\nmeetingTopic:'Productivity',\ndate:'02/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Online',\n    building: '',\n    room:''    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Online',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  {\n    id: uuid(),\n    online:false,\n    address: {\n    city:'Ankara',\n    building: 'Bulding A',\n    room:'A-101'    \n     \n    },\nmeetingName:'Budget Meeting-1',\nmeetingTopic:'Budget',\ndate:'12/03/2021',\ntime:'13.30'\n\n  },\n  \n];\n","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\MainLayout\\TopBar.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\meeting\\MeetingListView\\Toolbar.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\meeting\\MeetingListView\\Results.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\account\\AccountView\\Password.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\account\\AccountView\\ProfileDetails.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\account\\AccountView\\Profile.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\dashboard\\DashboardView\\upcomingMeetings.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\DashboardLayout\\TopBar.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\components\\Logo.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\DashboardLayout\\NavBar\\index.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],"E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\createMeeting\\createMeetingForm.js",["168","169","170","171","172","173","174","175","176"],"import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport DatePicker from \"react-date-picker\";\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns'; //instal this version npm i @date-io/date-fns@1.3.13\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Select,\n  InputLabel ,\n  MenuItem,\n  TextField,\n  Divider,\n  makeStyles,\n  Card,\n  CardHeader,\n  CardContent,\n  FormControl,\n  duration,\n  Menu\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport linearGradient from 'src/components/linearGradient';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  formControl: {\n    minWidth: 150,\n    maxWidth: 300,\n  }\n}));\n\nconst CreateMeetingForm = props => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  //Function that handles the form submission\n  const handleSubmit = async values => {\n    const {title, topic, description, date, duration, location} = values;\n    var body = {\n      title: title,\n      description: description,\n      topics: topic,\n      date: date,\n      location: location,\n      duration: duration\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    \n  };\n\n  //Update the Topic selection\n  const [topic, setTopic] = React.useState('');\n  const updateTopic = (event) => {\n    setTopic(event.target.value);\n  };\n\n  //update the location selection\n  const [location, setLocation] = React.useState('');\n  const updateLocation = (event) => {\n    setLocation(event.target.value);\n  }\n  //update date\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2021-02-14T21:11:54'));\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\nreturn (\n    \n  \n      \n<Container maxWidth={false}>\n  <Formik\n  initialValues={{\n    title: '',\n    topics: '',\n    desctiption: '',\n    duration: '',\n    date: '',\n    location: ' '\n  }}\n  onSubmit={handleSubmit}\n\n  // Using Yup for validation\n\n  validationSchema={Yup.object().shape({\n    title: Yup.string().max(100).required('Title is required'),\n    description: Yup.string().max(255),\n    duration: Yup.string().required(\"Duration is required\")\n  })}\n  >\n    {props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return (\n        <>\n\n        <form onSubmit={handleSubmit} noValidate>\n          <Card>\n            <CardContent>\n              <CardHeader title=\"Create A Meeting\">\n              </CardHeader>\n          {/* </Card> */}\n\n          <Divider/>\n\n          {/* Meeting Title */}\n          <TextField\n                error={Boolean(touched.title && errors.title)}\n                fullWidth\n                helperText={touched.title && errors.title}\n                label=\"Title\"\n                margin=\"normal\"\n                name=\"title\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.title}\n                variant=\"outlined\"\n                \n              />\n        {/* Meeting Topic */}\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"topic-input-label\">Topic</InputLabel>\n        <Select\n          labelId=\"topic-input-label\"\n          id=\"topic-input\"\n          value={topic}\n          onChange={updateTopic}\n          label=\"Topics\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          >\n            <MenuItem value=\"\"> <em>None</em></MenuItem>\n            <MenuItem value={1}>Budget</MenuItem>\n            <MenuItem value={2}>Schedule</MenuItem>\n            <MenuItem value={3}>Senior Project</MenuItem>\n            <MenuItem value={4}>Team Building</MenuItem>\n        </Select>\n        </FormControl>\n\n        {/* Meeting Description */}\n        <TextField\n          error={Boolean(touched.description && errors.description)}\n          fullWidth\n          helperText={touched.description && errors.description}\n          label=\"Description\"\n          margin=\"normal\"\n          name=\"description\"\n          onBlur={handleBlur}\n          onChange={handleChange}\n          value={values.description}\n          variant=\"outlined\"\n          multiline\n          rows={3}\n        />\n\n        {/* Meeting Date */}\n       \n        {/* <label>Date</label> */}\n\n        {/* <DatePicker\n          error={Boolean.date && errors.date}\n          label=\"Date\"\n          name=\"meetingDate\"\n          value={values.date}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          inputPlaceholder=\"Select a date\"\n          shouldHighlightWeekends\n          selected=\"startDate\"\n          margin=\"normal\"\n        >\n        </DatePicker> */}\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Meeting Date\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n\n        <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker\"\n          label=\"Meeting Time\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n        </MuiPickersUtilsProvider>\n        \n        {/* Meeting Duration */}\n        <TextField\n          error={Boolean(touched.duration && errors.duration)}\n          fullWidth\n          helperText={touched.duration && errors.duration}\n          label=\"Duration in minutes\"\n          margin=\"normal\"\n          name=\"duration\"\n          onBlur={handleBlur}\n          onChange={handleChange}\n          value={values.duration}\n          variant=\"outlined\"\n        />\n\n        {/* Meeting Location */}\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"location-input-label\">Location</InputLabel>\n        <Select\n          labelId=\"topic-input-label\"\n          id=\"location-input\"\n          value={location}\n          onChange={updateLocation}\n          label=\"Topics\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          >\n            <MenuItem value=\"\"> <em>None</em></MenuItem>\n            <MenuItem value={1}>Meeting Room 1</MenuItem>\n            <MenuItem value={2}>Meeting Room 2</MenuItem>\n            <MenuItem value={3}>Meeting Room 3</MenuItem>\n            <MenuItem value={4}>Meeting Room 4</MenuItem>\n        </Select>\n        </FormControl>\n\n        </CardContent>\n\n        <Box\n          display=\"flex\"\n          flex=\"1\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          p={3}\n        >\n          {/* Invite Participants Button */}\n          <Button \n          color=\"primary\"\n          variant=\"contained\"\n          justifyContent=\"flex-start\">\n            Invite Participants\n          </Button>\n\n        {/* Cretae Meeting button */}\n          <Button \n          color=\"primary\"\n          variant=\"contained\"\n          justifyContent=\"flex-end\"\n          disabled={isSubmitting}\n            type=\"submit\"\n            variant=\"contained\">\n            Create Meeting\n          </Button>\n          </Box>\n\n        </Card>\n        </form>\n        </>\n      );\n    }}\n  </Formik>\n</Container>\n\n  );\n};\n\nexport default CreateMeetingForm;\n","E:\\BILKENT\\senior project\\TBKMeet-client\\src\\views\\createTopic\\createTopicForm.js",["177","178","179","180"],"import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Select,\n  InputLabel ,\n  MenuItem,\n  TextField,\n  Divider,\n  FormLabel ,\n  makeStyles,\n  Card,\n  CardHeader,\n  Checkbox,\n  FormControlLabel ,\n  CardContent,\n  FormControl\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  formControl: {\n    minWidth: 150,\n    maxWidth: 300,\n  }\n}));\n\nconst CreateTopicForm = props => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  // The function that handles the logic when submitting the form\n  const handleSubmit = async values => {\n    // This function received the values from the form\n    // The line below extract the two fields from the values object.\n    const { title, description,category,duration } = values;\n    var body = {\n        title: title,\n        description: description,\n        category: category,\n        duration: duration\n    };\n    \n  };\n\n  //For updating the selector -duration time-\n  const [category, setCategory] = React.useState('');\n  const updateCategory = (event) => {\n    setCategory(event.target.value);\n  };\n  const [state, setState] = React.useState({\n    checkedDecision: false,\n    checkedInfo: false,\n  });\n\n  const handleCB = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n  const { checkedDecision, checkedInfo } = state;\n  const error = [checkedDecision, checkedInfo].filter((v) => v).length < 1;\n  // Returning the part that should be rendered\n  // Just set handleSubmit as the handler for the onSubmit call.\n  return (\n    \n   <Container maxWidth={false}>\n    <Formik\n      initialValues={{\n        title: '',\n        description: '',\n        category:\"\",\n        duration:''\n      }}\n      onSubmit={handleSubmit}\n\n      //********Using Yup for validation********/\n\n      validationSchema={Yup.object().shape({\n        title: Yup.string().max(100).required('Title is required'),\n        description: Yup.string().max(255).required('Description is required'),\n        duration: Yup.string().required(\"Duration is required\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n        return (\n          <>\n          \n            <form onSubmit={handleSubmit} noValidate>\n            <Card>\n            <CardContent>\n            <CardHeader\n          subheader=\"Please enter the necessary information for creating a topic\"\n          title=\"Create Topic\"\n        />\n        <Divider />\n                \n              <TextField\n                error={Boolean(touched.title && errors.title)}\n                fullWidth\n                helperText={touched.title && errors.title}\n                label=\"Title\"\n                margin=\"normal\"\n                name=\"title\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.title}\n                variant=\"outlined\"\n                \n              />\n              <TextField\n                error={Boolean(touched.description && errors.description)}\n                fullWidth\n                helperText={touched.description && errors.description}\n                label=\"Description\"\n                margin=\"normal\"\n                name=\"description\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.description}\n                variant=\"outlined\"\n                multiline\n                rows={5}\n              />\n              <TextField\n          error={Boolean(touched.duration && errors.duration)}\n          fullWidth\n          helperText={touched.duration && errors.duration}\n          label=\"Duration in minutes\"\n          margin=\"normal\"\n          name=\"duration\"\n          onBlur={handleBlur}\n          onChange={handleChange}\n          value={values.duration}\n          variant=\"outlined\"\n        />\n        \n        <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={category}\n          onChange={updateCategory}\n          label=\"Category\"\n        >    \n          <MenuItem value={\"budget\"}>Budget Meeting</MenuItem>\n          <MenuItem value={\"hr\"}>HR Meeting</MenuItem>\n          <MenuItem value={\"project\"}>Project Meeting</MenuItem>\n        </Select>\n      </FormControl>\n          <br/><br/>\n      <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Select at least one meeting output</FormLabel>\n      <FormControlLabel\n        control={<Checkbox checked={state.checkedDecision} onChange={handleCB} name=\"checkedDecision\" />}\n        label=\"Decision\"\n      /> \n       <FormControlLabel\n      control={<Checkbox checked={state.checkedInfo} onChange={handleCB} name=\"checkedInfo\" />}\n      label=\"Information \"\n    />\n    </FormControl>\n\n              </CardContent>\n              <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={3}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={isSubmitting}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n           Create Topic\n          </Button>\n        </Box>\n              </Card>\n            </form>\n          </>\n        );\n      }}\n    </Formik>\n  </Container>\n  );\n};\n\nexport default CreateTopicForm;\n",{"ruleId":"181","severity":1,"message":"182","line":18,"column":10,"nodeType":"183","messageId":"184","endLine":18,"endColumn":15},{"ruleId":"185","severity":1,"message":"186","line":69,"column":23,"nodeType":"187","messageId":"188","endLine":69,"endColumn":25},{"ruleId":"181","severity":1,"message":"189","line":23,"column":7,"nodeType":"183","messageId":"184","endLine":23,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":34,"column":5,"nodeType":"192","messageId":"188","endLine":34,"endColumn":11},{"ruleId":"185","severity":1,"message":"186","line":76,"column":23,"nodeType":"187","messageId":"188","endLine":76,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":1,"column":1,"nodeType":"195","endLine":27,"endColumn":3},{"ruleId":"193","severity":1,"message":"196","line":1,"column":1,"nodeType":"195","endLine":35,"endColumn":3},{"ruleId":"181","severity":1,"message":"197","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":12},{"ruleId":"181","severity":1,"message":"198","line":13,"column":7,"nodeType":"183","messageId":"184","endLine":13,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":3,"column":1,"nodeType":"195","endLine":170,"endColumn":3},{"ruleId":"181","severity":1,"message":"199","line":2,"column":18,"nodeType":"183","messageId":"184","endLine":2,"endColumn":28},{"ruleId":"181","severity":1,"message":"200","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":18},{"ruleId":"181","severity":1,"message":"201","line":29,"column":3,"nodeType":"183","messageId":"184","endLine":29,"endColumn":11},{"ruleId":"181","severity":1,"message":"202","line":30,"column":3,"nodeType":"183","messageId":"184","endLine":30,"endColumn":7},{"ruleId":"181","severity":1,"message":"197","line":32,"column":8,"nodeType":"183","messageId":"184","endLine":32,"endColumn":12},{"ruleId":"181","severity":1,"message":"203","line":33,"column":8,"nodeType":"183","messageId":"184","endLine":33,"endColumn":22},{"ruleId":"181","severity":1,"message":"204","line":50,"column":9,"nodeType":"183","messageId":"184","endLine":50,"endColumn":17},{"ruleId":"181","severity":1,"message":"205","line":63,"column":11,"nodeType":"183","messageId":"184","endLine":63,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":293,"column":13,"nodeType":"208","endLine":293,"endColumn":32},{"ruleId":"181","severity":1,"message":"199","line":2,"column":18,"nodeType":"183","messageId":"184","endLine":2,"endColumn":28},{"ruleId":"181","severity":1,"message":"204","line":41,"column":9,"nodeType":"183","messageId":"184","endLine":41,"endColumn":17},{"ruleId":"181","severity":1,"message":"209","line":48,"column":9,"nodeType":"183","messageId":"184","endLine":48,"endColumn":13},{"ruleId":"206","severity":1,"message":"207","line":195,"column":13,"nodeType":"208","endLine":195,"endColumn":32},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'styles' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","'Page' is defined but never used.","'useStyles' is assigned a value but never used.","'RouterLink' is defined but never used.","'DatePicker' is defined but never used.","'duration' is defined but never used.","'Menu' is defined but never used.","'linearGradient' is defined but never used.","'navigate' is assigned a value but never used.","'options' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'body' is assigned a value but never used."]